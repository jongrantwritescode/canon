{
  "version": 3,
  "sources": ["../../../../../node_modules/standards-ui/src/components/base-component.js", "../../../../../node_modules/standards-ui/src/components/ds-page.js", "../../../../../node_modules/standards-ui/src/components/ds-row.js", "../../../../../node_modules/standards-ui/src/components/ds-col.js", "../../../../../node_modules/standards-ui/src/utils/emit.js", "../../../../../node_modules/standards-ui/src/components/ds-text-input.js", "../../../../../node_modules/standards-ui/src/components/ds-button.js", "../../../../../node_modules/standards-ui/src/components/ds-radio.js", "../../../../../node_modules/standards-ui/src/components/ds-checkbox.js", "../../../../../node_modules/standards-ui/src/components/ds-textarea.js", "../../../../../node_modules/standards-ui/src/components/ds-select.js", "../../../../../node_modules/standards-ui/src/components/ds-option.js", "../../../../../node_modules/standards-ui/src/components/ds-label.js", "../../../../../node_modules/standards-ui/src/components/ds-fieldset.js", "../../../../../node_modules/standards-ui/src/components/ds-legend.js", "../../../../../node_modules/standards-ui/src/components/ds-form.js", "../../../../../node_modules/standards-ui/src/components/ds-card.js", "../../../../../node_modules/standards-ui/src/components/ds-heading.js", "../../../../../node_modules/standards-ui/src/init.js", "../../../../../node_modules/standards-ui/src/testing/smart-test-ids.js", "../../../../../node_modules/standards-ui/src/testing/environment-detector.js", "../../../../../node_modules/standards-ui/src/testing/storybook-integration.js", "../../../../../node_modules/standards-ui/src/testing/auto-mocks.js", "../../../../../node_modules/standards-ui/src/testing/index.js", "../../../../../node_modules/standards-ui/src/index.js"],
  "sourcesContent": ["/**\n * @file base-component.js\n * @summary Base class for design system Web Components.\n * @description\n * Provides common functionality for all design system components including\n * shadow DOM setup, event handling, attribute management, and test mode support.\n *\n * @abstract\n */\nclass BaseComponent extends HTMLElement {\n  // Static test mode state\n  static _testMode = false;\n\n  /**\n   * Creates a new base component.\n   * @param {Object} options - Configuration options\n   * @param {string} options.template - HTML template string\n   * @param {string} options.display - CSS display value for :host\n   * @param {Array<string>} options.observedAttributes - Attributes to observe\n   * @param {Object} options.attributeHandlers - Attribute change handlers\n   * @param {Array<string>} options.events - Events to re-dispatch\n   * @param {string} options.targetSelector - CSS selector for the target element\n   */\n  constructor(options = {}) {\n    super();\n\n    // Test mode instance state\n    this._testModeEnabled = false;\n\n    // ARIA config defaults\n    const ariaConfig = options.ariaConfig || {};\n    this.ariaConfig = {\n      requiredAriaAttributes: ariaConfig.requiredAriaAttributes || [],\n      staticAriaAttributes: ariaConfig.staticAriaAttributes || {},\n      dynamicAriaAttributes: ariaConfig.dynamicAriaAttributes || [],\n      ...ariaConfig,\n    };\n\n    // Merge ARIA attributes into observedAttributes\n    const ariaObserved = [\n      ...(this.ariaConfig.dynamicAriaAttributes || []),\n      ...(this.ariaConfig.requiredAriaAttributes || []),\n    ];\n    this.options = {\n      display: options.display || \"block\",\n      observedAttributes: Array.from(\n        new Set([...(options.observedAttributes || []), ...ariaObserved])\n      ),\n      attributeHandlers: { ...(options.attributeHandlers || {}) },\n      events: options.events || [],\n      targetSelector: options.targetSelector || null,\n      template: options.template,\n    };\n\n    // Add ARIA attribute handlers\n    this.addAriaAttributeHandlers();\n    this.setupShadowDOM();\n    this.setupARIA();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Static method to enable test mode for all instances\n   */\n  static enableTestMode() {\n    BaseComponent._testMode = true;\n    // Update all existing instances\n    this._updateAllInstances();\n  }\n\n  /**\n   * Static method to disable test mode for all instances\n   */\n  static disableTestMode() {\n    BaseComponent._testMode = false;\n    // Update all existing instances\n    this._updateAllInstances();\n  }\n\n  /**\n   * Update all instances of this component type\n   */\n  static _updateAllInstances() {\n    // Find all instances of components that extend BaseComponent\n    document.querySelectorAll(\"*\").forEach((element) => {\n      if (\n        element._updateTestMode &&\n        typeof element._updateTestMode === \"function\"\n      ) {\n        element._updateTestMode();\n      }\n    });\n  }\n\n  /**\n   * Instance method to update test mode\n   */\n  _updateTestMode() {\n    if (BaseComponent._testMode && !this._testModeEnabled) {\n      this._enableTestMode();\n    } else if (!BaseComponent._testMode && this._testModeEnabled) {\n      this._disableTestMode();\n    }\n  }\n\n  /**\n   * Enable test mode for this instance\n   */\n  _enableTestMode() {\n    this._testModeEnabled = true;\n    this._ensureTestId();\n    this._addTestModeObserver();\n  }\n\n  /**\n   * Disable test mode for this instance\n   */\n  _disableTestMode() {\n    this._testModeEnabled = false;\n    this._removeTestId();\n    this._removeTestModeObserver();\n  }\n\n  /**\n   * Ensure test ID is set\n   */\n  _ensureTestId() {\n    // Always set/override test ID when test mode is enabled\n    this.setAttribute(\"data-testid\", this._generateTestId());\n  }\n\n  /**\n   * Remove test ID\n   */\n  _removeTestId() {\n    this.removeAttribute(\"data-testid\");\n  }\n\n  /**\n   * Generate intelligent test ID\n   */\n  _generateTestId() {\n    const baseId = this.tagName.toLowerCase().replace(\"ds-\", \"\");\n    const variant = this.getAttribute(\"variant\") || \"default\";\n    const state = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n    const type = this.getAttribute(\"type\") || \"default\";\n\n    return `ds-${baseId}-${variant}-${state}-${type}`;\n  }\n\n  /**\n   * Watch for attribute changes to update test ID\n   */\n  _addTestModeObserver() {\n    this._testModeObserver = new MutationObserver(() => {\n      if (this._testModeEnabled) {\n        // Regenerate test ID when attributes change\n        this.setAttribute(\"data-testid\", this._generateTestId());\n      }\n    });\n\n    this._testModeObserver.observe(this, {\n      attributes: true,\n      attributeFilter: [\n        \"variant\",\n        \"disabled\",\n        \"type\",\n        \"size\",\n        \"href\",\n        \"checked\",\n        \"name\",\n        \"value\",\n        \"flex-grow\",\n        \"flex-basis\",\n        \"align-self\",\n        \"justify-content\",\n        \"aria-label\",\n        \"aria-describedby\",\n        \"action\",\n        \"method\",\n        \"enctype\",\n        \"target\",\n        \"novalidate\",\n        \"autocomplete\",\n        \"aria-labelledby\",\n      ],\n    });\n\n    // Also watch for disabled property changes\n    this._disabledObserver = new MutationObserver(() => {\n      if (this._testModeEnabled) {\n        // Regenerate test ID when disabled state changes\n        this.setAttribute(\"data-testid\", this._generateTestId());\n      }\n    });\n\n    // Watch for changes to the disabled attribute specifically\n    this._disabledObserver.observe(this, {\n      attributes: true,\n      attributeFilter: [\"disabled\"],\n    });\n  }\n\n  /**\n   * Remove test mode observer\n   */\n  _removeTestModeObserver() {\n    if (this._testModeObserver) {\n      this._testModeObserver.disconnect();\n      this._testModeObserver = null;\n    }\n    if (this._disabledObserver) {\n      this._disabledObserver.disconnect();\n      this._disabledObserver = null;\n    }\n  }\n\n  /**\n   * Sets up the shadow DOM with the provided template.\n   */\n  setupShadowDOM() {\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                @import url('/src/styles/variables.css');\n                :host {\n                    display: ${this.options.display};\n                }\n            </style>\n            ${this.options.template || \"<slot></slot>\"}\n        `;\n\n    shadowRoot.appendChild(template.content.cloneNode(true));\n\n    // Store reference to target element if selector is provided\n    if (this.options.targetSelector) {\n      this.targetElement = shadowRoot.querySelector(\n        this.options.targetSelector\n      );\n    }\n  }\n\n  /**\n   * Sets up event listeners to re-dispatch events from the host element.\n   */\n  setupEventListeners() {\n    if (!this.options.events.length || !this.targetElement) return;\n\n    this.options.events.forEach((eventType) => {\n      this.targetElement.addEventListener(eventType, () => {\n        const newEvent = new Event(eventType, {\n          bubbles: true,\n          composed: true,\n          cancelable: true,\n        });\n\n        // Copy relevant properties for form events\n        if (eventType === \"input\" || eventType === \"change\") {\n          // Don't try to set read-only properties in test environment\n          try {\n            Object.defineProperty(newEvent, \"target\", {\n              value: this,\n              writable: false,\n            });\n            Object.defineProperty(newEvent, \"currentTarget\", {\n              value: this,\n              writable: false,\n            });\n          } catch {\n            // Ignore errors in test environment where properties are read-only\n          }\n        }\n\n        this.dispatchEvent(newEvent);\n      });\n    });\n  }\n\n  /**\n   * Called when one of the component's observed attributes is added, removed, or changed.\n   * @param {string} name - The name of the attribute that changed.\n   * @param {string|null} oldValue - The attribute's old value.\n   * @param {string|null} newValue - The attribute's new value.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return; // No change\n\n    // Handle ARIA attributes first\n    if (\n      (this.ariaConfig.dynamicAriaAttributes || []).includes(name) ||\n      (this.ariaConfig.requiredAriaAttributes || []).includes(name)\n    ) {\n      // Check if this is a static ARIA attribute and if so, only warn once and skip validation\n      if (\n        this.ariaConfig.staticAriaAttributes &&\n        this.ariaConfig.staticAriaAttributes[name]\n      ) {\n        const handler = BaseComponent.createAriaAttributeHandler(name);\n        handler.call(this, newValue);\n        // Do not call validateAndWarnARIA for static attributes\n        return;\n      }\n      const handler = BaseComponent.createAriaAttributeHandler(name);\n      handler.call(this, newValue);\n      // Validate ARIA attributes after they're applied\n      this.validateAndWarnARIA(name, newValue);\n    }\n\n    // Handle other attributes\n    const handler = this.options.attributeHandlers[name];\n    if (handler) {\n      handler.call(this, newValue);\n    }\n  }\n\n  /**\n   * Called when the element is connected to the DOM.\n   * Applies initial attributes and ensures styles are applied.\n   */\n  connectedCallback() {\n    // Set display style directly on the host (safe here)\n    this.style.display = this.options.display;\n    // Force a reflow to ensure styles are applied\n    this.offsetHeight;\n    // Apply initial attributes\n    this.options.observedAttributes.forEach((attr) => {\n      this.attributeChangedCallback(attr, null, this.getAttribute(attr));\n    });\n    // Delay ARIA validation to ensure text content is available\n    setTimeout(() => {\n      this.warnMissingARIA();\n    }, 0);\n\n    // Check test mode after setup\n    if (BaseComponent._testMode) {\n      this._enableTestMode();\n    }\n  }\n\n  /**\n   * Creates a standard attribute handler for boolean attributes.\n   * @param {string} propertyName - The property name to set\n   * @param {string} attributeName - The attribute name to check\n   * @returns {Function} The attribute handler function\n   */\n  static createBooleanHandler(propertyName, attributeName) {\n    return function () {\n      if (this.targetElement) {\n        this.targetElement[propertyName] = this.hasAttribute(attributeName);\n      }\n    };\n  }\n\n  /**\n   * Creates a standard attribute handler for string attributes.\n   * @param {string} propertyName - The property name to set\n   * @param {string} defaultValue - Default value if attribute is null\n   * @returns {Function} The attribute handler function\n   */\n  static createStringHandler(propertyName, defaultValue = \"\") {\n    return function (newValue) {\n      if (this.targetElement) {\n        this.targetElement[propertyName] = newValue || defaultValue;\n      }\n    };\n  }\n\n  /**\n   * Creates a standard attribute handler for setAttribute.\n   * @param {string} attributeName - The attribute name to set\n   * @returns {Function} The attribute handler function\n   */\n  static createSetAttributeHandler(attributeName) {\n    return function (newValue) {\n      if (this.targetElement) {\n        if (newValue === null) {\n          this.targetElement.removeAttribute(attributeName);\n        } else {\n          this.targetElement.setAttribute(attributeName, newValue);\n        }\n      }\n    };\n  }\n\n  /**\n   * Called when the element is disconnected from the DOM.\n   * Cleans up test mode observers and other resources.\n   */\n  disconnectedCallback() {\n    this._removeTestModeObserver();\n  }\n\n  /**\n   * Creates a standard getter/setter pair for a property.\n   * @param {string} propertyName - The property name\n   * @returns {Object} Object with get and set functions\n   */\n  createPropertyAccessor(propertyName) {\n    return {\n      get: () => this.targetElement?.[propertyName],\n      set: (val) => {\n        if (this.targetElement) {\n          this.targetElement[propertyName] = val;\n        }\n      },\n    };\n  }\n\n  setupARIA() {\n    // Apply static ARIA attributes\n    if (this.targetElement && this.ariaConfig.staticAriaAttributes) {\n      Object.entries(this.ariaConfig.staticAriaAttributes).forEach(\n        ([attr, value]) => {\n          this.targetElement.setAttribute(attr, value);\n        }\n      );\n    }\n  }\n\n  addAriaAttributeHandlers() {\n    if (!this.options.attributeHandlers) this.options.attributeHandlers = {};\n    const allAria = [\n      ...(this.ariaConfig.dynamicAriaAttributes || []),\n      ...(this.ariaConfig.requiredAriaAttributes || []),\n    ];\n    allAria.forEach((attr) => {\n      if (!this.options.attributeHandlers[attr]) {\n        this.options.attributeHandlers[attr] =\n          BaseComponent.createAriaAttributeHandler(attr);\n      }\n    });\n  }\n\n  static createAriaAttributeHandler(attributeName) {\n    return function (newValue) {\n      // Ensure targetElement is available\n      if (!this.targetElement) {\n        this.targetElement = this.shadowRoot?.querySelector(\n          this.options.targetSelector\n        );\n      }\n\n      if (this.targetElement) {\n        // Don't override static attributes\n        if (\n          this.ariaConfig.staticAriaAttributes &&\n          this.ariaConfig.staticAriaAttributes[attributeName]\n        ) {\n          const staticValue =\n            this.ariaConfig.staticAriaAttributes[attributeName];\n          // Only warn if trying to set a different value\n          if (newValue !== null && newValue !== staticValue) {\n            console.warn(\n              `[${this.constructor.name}] Cannot override static ARIA attribute '${attributeName}' with value '${newValue}'. Static value '${staticValue}' will be preserved.`\n            );\n          }\n          return;\n        }\n\n        if (newValue === null || newValue === undefined) {\n          this.targetElement.removeAttribute(attributeName);\n        } else {\n          this.targetElement.setAttribute(attributeName, newValue);\n        }\n      }\n    };\n  }\n\n  static createAriaPropertyHandler(propertyName) {\n    return {\n      get() {\n        return this.targetElement?.getAttribute(propertyName);\n      },\n      set(val) {\n        if (this.targetElement) {\n          if (val === null || val === undefined) {\n            this.targetElement.removeAttribute(propertyName);\n          } else {\n            this.targetElement.setAttribute(propertyName, val);\n          }\n        }\n      },\n    };\n  }\n\n  static createAriaStateHandler(stateName) {\n    return function (newValue) {\n      if (this.targetElement) {\n        if (newValue === null || newValue === undefined) {\n          this.targetElement.removeAttribute(stateName);\n        } else {\n          this.targetElement.setAttribute(stateName, newValue);\n        }\n      }\n    };\n  }\n\n  validateAriaTokens(attributeName, value, allowedTokens) {\n    if (!allowedTokens.includes(value)) {\n      return `Invalid value '${value}' for ${attributeName}. Allowed: ${allowedTokens.join(\n        \", \"\n      )}`;\n    }\n    return null;\n  }\n\n  checkAriaReferences(attributeName, value) {\n    if (!value) return null;\n    const ids = value.split(/\\s+/);\n    for (const id of ids) {\n      if (!document.getElementById(id)) {\n        return `Element referenced by ${attributeName} ('${id}') does not exist in the document.`;\n      }\n    }\n    return null;\n  }\n\n  validateARIA() {\n    const errors = [];\n    // Check required ARIA attributes\n    (this.ariaConfig.requiredAriaAttributes || []).forEach((attr) => {\n      if (!this.hasAttribute(attr) && !this.targetElement?.hasAttribute(attr)) {\n        errors.push(`Missing required ARIA attribute: ${attr}`);\n      }\n    });\n    // Validate ARIA tokens (if any)\n    if (this.ariaConfig.tokenValidation) {\n      Object.entries(this.ariaConfig.tokenValidation).forEach(\n        ([attr, allowedTokens]) => {\n          const val =\n            this.getAttribute(attr) || this.targetElement?.getAttribute(attr);\n          if (val && !allowedTokens.includes(val)) {\n            errors.push(this.validateAriaTokens(attr, val, allowedTokens));\n          }\n        }\n      );\n    }\n    // Validate ARIA references\n    (this.ariaConfig.referenceAttributes || []).forEach((attr) => {\n      const val =\n        this.getAttribute(attr) || this.targetElement?.getAttribute(attr);\n      const refError = this.checkAriaReferences(attr, val);\n      if (refError) errors.push(refError);\n    });\n    return errors;\n  }\n\n  warnMissingARIA() {\n    const errors = this.validateARIA();\n    errors.forEach((msg) => {\n      console.warn(`[${this.constructor.name}] ARIA validation: ${msg}`);\n    });\n  }\n\n  /**\n   * Defines which attributes the component observes for changes.\n   * @returns {Array<string>} An array of attribute names to observe.\n   */\n  static get observedAttributes() {\n    // This will be overridden by subclasses, but provide a default\n    // that includes common ARIA attributes\n    return [\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-pressed\",\n      \"aria-expanded\",\n      \"aria-haspopup\",\n      \"aria-controls\",\n      \"aria-current\",\n      \"aria-live\",\n      \"aria-atomic\",\n      \"aria-relevant\",\n      \"aria-busy\",\n      \"aria-dropeffect\",\n      \"aria-grabbed\",\n      \"aria-activedescendant\",\n      \"aria-colcount\",\n      \"aria-colindex\",\n      \"aria-colspan\",\n      \"aria-level\",\n      \"aria-multiline\",\n      \"aria-multiselectable\",\n      \"aria-orientation\",\n      \"aria-readonly\",\n      \"aria-required\",\n      \"aria-rowcount\",\n      \"aria-rowindex\",\n      \"aria-rowspan\",\n      \"aria-selected\",\n      \"aria-setsize\",\n      \"aria-sort\",\n      \"aria-valuemax\",\n      \"aria-valuemin\",\n      \"aria-valuenow\",\n      \"aria-valuetext\",\n    ];\n  }\n\n  /**\n   * Validates and warns about ARIA issues for a specific attribute\n   * @param {string} attributeName - The name of the attribute being validated\n   * @param {string|null} value - The value of the attribute\n   */\n  validateAndWarnARIA(attributeName, value) {\n    const errors = [];\n\n    // Validate token values\n    if (\n      this.ariaConfig.tokenValidation &&\n      this.ariaConfig.tokenValidation[attributeName]\n    ) {\n      const allowedTokens = this.ariaConfig.tokenValidation[attributeName];\n      if (value && !allowedTokens.includes(value)) {\n        errors.push(\n          this.validateAriaTokens(attributeName, value, allowedTokens)\n        );\n      }\n    }\n\n    // Validate references\n    if ((this.ariaConfig.referenceAttributes || []).includes(attributeName)) {\n      const refError = this.checkAriaReferences(attributeName, value);\n      if (refError) errors.push(refError);\n    }\n\n    // Warn about any errors\n    errors.forEach((msg) => {\n      console.warn(`[${this.constructor.name}] ARIA validation: ${msg}`);\n    });\n  }\n}\n\n// Export for use in other components\nexport { BaseComponent };\nexport default BaseComponent;\n", "/**\n * @file ds-page.js\n * @summary A custom Web Component that provides a consistent wrapper around application content.\n * @description\n * The `ds-page` component handles page-level layout and margins, providing a consistent\n * foundation for application pages. It uses CSS custom properties for customization\n * and ensures proper viewport handling.\n *\n * - The content inside `<ds-page>...</ds-page>` is rendered via the default slot.\n * - Uses a `<main>` element for the page container, providing a landmark for accessibility/screen readers.\n * - Uses CSS custom properties for layout customization:\n *   - `--ds-spacing-page-padding` (default: 20px) — padding for the page container\n *   - `--ds-page-max-width` (default: 1200px) — max width for the content\n * - The component is styled via Shadow DOM; no `part` attribute is exposed.\n * - No custom events are fired.\n *\n * @element ds-page\n *\n * @slot - Renders the main page content inside the page container.\n *\n *\n * @note The page content is wrapped in a semantic <main> element for accessibility.\n * @note Uses CSS custom properties: `--ds-spacing-page-padding`, `--ds-page-max-width`.\n * @note The page container uses `part=\"container\"` for external styling via CSS.\n *\n * @example\n * <!-- Basic page wrapper -->\n * <ds-page>\n *   <h1>Welcome to My App</h1>\n *   <p>This content is wrapped in a consistent page layout.</p>\n * </ds-page>\n *\n * @example\n * <!-- Page with nested layout components -->\n * <ds-page>\n *   <ds-row justify-content=\"space-between\" align-items=\"center\">\n *     <ds-col>\n *       <h1>Page Title</h1>\n *     </ds-col>\n *     <ds-col>\n *       <ds-button>Action</ds-button>\n *     </ds-col>\n *   </ds-row>\n *   <ds-row>\n *     <ds-col>\n *       <p>Main content area</p>\n *     </ds-col>\n *   </ds-row>\n * </ds-page>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsPage extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-page\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-labelledby\",\n      ],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\", \"aria-labelledby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block; /* Custom elements are inline by default */\n                    width: 100%;\n                    min-height: 100vh; /* Ensures it takes full viewport height */\n                    box-sizing: border-box; /* Include padding/border in element's total width/height */\n                }\n                \n                .page-container {\n                    display: flex; /* Makes the main element a flex container for its children */\n                    flex-direction: column; /* Stacks children vertically by default */\n                    width: 100%;\n                    padding: var(--ds-spacing-page-padding, 20px); /* Default padding, can be overridden by CSS variable */\n                    margin: 0 auto; /* Center content if width is limited */\n                    max-width: var(--ds-page-max-width, 1200px); /* Optional max-width for content */\n                }\n            </style>\n            <main class=\"page-container\" part=\"container\">\n                <slot></slot>\n            </main>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"main\",\n      ariaConfig,\n      events: [],\n      observedAttributes: [],\n    });\n\n    // Store reference to the internal container\n    this.pageContainer = this.shadowRoot.querySelector(\".page-container\");\n  }\n\n  static get observedAttributes() {\n    return [\"aria-label\", \"aria-describedby\", \"aria-labelledby\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n  }\n\n  // Override test ID generation for page-specific logic\n  _generateTestId() {\n    const baseId = \"page\";\n    return `ds-${baseId}-default`;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-page\")) {\n  customElements.define(\"ds-page\", DsPage);\n}\n\n// Export for use in other modules\nexport { DsPage };\nexport default DsPage;\n", "/**\n * @file ds-row.js\n * @summary A custom Web Component for a Flexbox container for horizontal layouts.\n * @description\n * The `ds-row` component provides a flexible container for arranging items in a row.\n * It leverages CSS Flexbox properties, exposing them as attributes for easy configuration.\n *\n * - The content inside `<ds-row>...</ds-row>` is rendered via the default slot.\n * - The row is a flex container (`display: flex; flex-direction: row`).\n * - Supports ARIA attributes: `aria-label`, `aria-describedby` for accessibility.\n * - No role is set by default; set ARIA attributes as needed for context.\n * - The component is styled via Shadow DOM; no `part` attribute is exposed.\n * - No custom events are fired.\n *\n * @element ds-row\n *\n * @slot - Renders child elements inside the row container.\n *\n * @attr {string} justify-content - Aligns content along the main axis. Accepts CSS `justify-content` values (e.g., `flex-start`, `center`, `space-between`).\n * @attr {string} align-items - Aligns content along the cross axis. Accepts CSS `align-items` values (e.g., `stretch`, `center`, `flex-end`).\n * @attr {string} gap - Sets the spacing between flex items (e.g., \"16px\", \"1rem\").\n * @attr {boolean} wrap - If present, sets `flex-wrap: wrap;` allowing items to wrap onto multiple lines.\n * @attr {string} aria-label - Accessible label for the row container.\n * @attr {string} aria-describedby - Reference to element(s) describing the row.\n *\n * @note The row is a flex container. No role is set by default; use ARIA attributes for accessibility context as needed.\n * @note The row container uses `part=\"container\"` for external styling via CSS.\n *\n * @example\n * <!-- A basic row with default alignment and spacing -->\n * <ds-row>\n * <div>Item 1</div>\n * <div>Item 2</div>\n * </ds-row>\n *\n * @example\n * <!-- A row with items centered and a specific gap -->\n * <ds-row justify-content=\"center\" align-items=\"center\" gap=\"20px\">\n * <div>Centered Item A</div>\n * <div>Centered Item B</div>\n * </ds-row>\n *\n * @example\n * <!-- A wrapping row with space between items -->\n * <ds-row justify-content=\"space-between\" wrap>\n * <div>Long Item 1</div>\n * <div>Item 2</div>\n * <div>Another Item 3</div>\n * <div>Short Item 4</div>\n * </ds-row>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsRow extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-row (none required, but allow aria-label/aria-describedby)\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\"aria-label\", \"aria-describedby\"],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block; /* Custom elements are inline by default */\n                }\n                .row-container {\n                    display: flex;\n                    flex-direction: row;\n                }\n            </style>\n            <div class=\"row-container\" part=\"container\">\n                <slot></slot>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \".row-container\",\n      ariaConfig,\n      events: [],\n      observedAttributes: [\"justify-content\", \"align-items\", \"gap\", \"wrap\"],\n    });\n\n    this.rowContainer = this.shadowRoot.querySelector(\".row-container\");\n  }\n\n  // Override test ID generation for row-specific logic\n  _generateTestId() {\n    const baseId = \"row\";\n    const justifyContent = this.getAttribute(\"justify-content\") || \"default\";\n    const alignItems = this.getAttribute(\"align-items\") || \"default\";\n    const hasWrap = this.hasAttribute(\"wrap\") ? \"wrap\" : \"no-wrap\";\n    const ariaLabel = this.getAttribute(\"aria-label\") || \"default\";\n\n    return `ds-${baseId}-${justifyContent}-${alignItems}-${hasWrap}-${ariaLabel}`;\n  }\n\n  static get observedAttributes() {\n    return [\n      \"justify-content\",\n      \"align-items\",\n      \"gap\",\n      \"wrap\",\n      \"aria-label\",\n      \"aria-describedby\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n    switch (name) {\n      case \"justify-content\":\n        this.rowContainer.style.justifyContent = newValue || \"\";\n        break;\n      case \"align-items\":\n        this.rowContainer.style.alignItems = newValue || \"\";\n        break;\n      case \"gap\":\n        this.rowContainer.style.gap = newValue || \"\";\n        break;\n      case \"wrap\":\n        if (this.hasAttribute(\"wrap\")) {\n          this.rowContainer.style.flexWrap = \"wrap\";\n        } else {\n          this.rowContainer.style.flexWrap = \"nowrap\";\n        }\n        break;\n    }\n  }\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.rowContainer.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.rowContainer.removeAttribute(\"aria-label\");\n    } else {\n      this.rowContainer.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.rowContainer.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.rowContainer.removeAttribute(\"aria-describedby\");\n    } else {\n      this.rowContainer.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  // Optionally override validateARIA if needed\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-row\")) {\n  customElements.define(\"ds-row\", DsRow);\n}\n\n// Export for use in other modules\nexport { DsRow };\nexport default DsRow;\n", "/**\n * @file ds-col.js\n * @summary A custom Web Component for a Flexbox item that can also act as a Flexbox container for vertical layouts.\n * @description\n * The `ds-col` component serves dual purposes: as a flex item within a row and as a flex container for its own children.\n * It exposes both flex item properties (for positioning within parent rows) and flex container properties (for its own children).\n *\n * - The content inside `<ds-col>...</ds-col>` is rendered via the default slot.\n * - The column is a flex item (relative to its parent) and a flex container (`display: flex; flex-direction: column`) for its children.\n * - Supports ARIA attributes: `aria-label`, `aria-describedby` for accessibility.\n * - No role is set by default; set ARIA attributes as needed for context.\n * - The component is styled via Shadow DOM; no `part` attribute is exposed.\n * - No custom events are fired.\n *\n * @element ds-col\n *\n * @slot - Renders child elements inside the column container.\n *\n * @attr {string} flex-grow - Controls how much the item can grow relative to other flex items. Accepts CSS `flex-grow` values.\n * @attr {string} flex-shrink - Controls how much the item can shrink relative to other flex items. Accepts CSS `flex-shrink` values.\n * @attr {string} flex-basis - Sets the initial main size of the flex item. Accepts CSS `flex-basis` values (e.g., \"200px\", \"50%\").\n * @attr {string} align-self - Overrides the parent's align-items value for this item. Accepts CSS `align-self` values.\n * @attr {string} order - Controls the order of the flex item. Accepts CSS `order` values.\n * @attr {string} justify-content - Aligns content along the main axis of the column. Accepts CSS `justify-content` values.\n * @attr {string} align-items - Aligns content along the cross axis of the column. Accepts CSS `align-items` values.\n * @attr {string} gap - Sets the spacing between flex items within the column. Accepts CSS `gap` values.\n * @attr {boolean} wrap - If present, allows items within the column to wrap onto multiple lines.\n * @attr {string} aria-label - Accessible label for the column container.\n * @attr {string} variant - Grid variant (gs1-gs12) that sets the column width based on a 12-column grid system.\n *\n * @note The column is both a flex item and a flex container. No role is set by default; use ARIA attributes for accessibility context as needed.\n * @note The column container uses `part=\"container\"` for external styling via CSS.\n *\n * @example\n * <!-- A basic column with default flex properties -->\n * <ds-row>\n *   <ds-col>\n *     <div>Content 1</div>\n *     <div>Content 2</div>\n *   </ds-col>\n * </ds-row>\n *\n * @example\n * <!-- A column that takes up 2/3 of available space with centered content -->\n * <ds-row>\n *   <ds-col flex-grow=\"2\" justify-content=\"center\" align-items=\"center\">\n *     <div>Main Content</div>\n *   </ds-col>\n *   <ds-col flex-grow=\"1\">\n *     <div>Sidebar</div>\n *   </ds-col>\n * </ds-row>\n *\n * @example\n * <!-- A column with specific width and gap between items -->\n * <ds-col flex-basis=\"300px\" gap=\"16px\">\n *   <div>Item A</div>\n *   <div>Item B</div>\n *   <div>Item C</div>\n * </ds-col>\n *\n * @example\n * <!-- Grid system usage with variants -->\n * <ds-row>\n *   <ds-col variant=\"gs6\">Half width column</ds-col>\n *   <ds-col variant=\"gs6\">Half width column</ds-col>\n * </ds-row>\n *\n * @example\n * <!-- Mixed grid and flex usage -->\n * <ds-row>\n *   <ds-col variant=\"gs8\">Main content (8/12)</ds-col>\n *   <ds-col variant=\"gs4\">Sidebar (4/12)</ds-col>\n * </ds-row>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsCol extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-col (none required, but allow aria-label/aria-describedby)\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\"aria-label\", \"aria-describedby\"],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block; /* Custom elements are inline by default */\n                }\n                .col-container {\n                    display: flex;\n                    flex-direction: column;\n                }\n            </style>\n            <div class=\"col-container\" part=\"container\">\n                <slot></slot>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \".col-container\",\n      ariaConfig,\n      events: [],\n      observedAttributes: [\n        \"flex-grow\",\n        \"flex-shrink\",\n        \"flex-basis\",\n        \"align-self\",\n        \"order\",\n        \"justify-content\",\n        \"align-items\",\n        \"gap\",\n        \"wrap\",\n        \"variant\",\n        \"aria-label\",\n        \"aria-describedby\",\n      ],\n    });\n\n    this.colContainer = this.shadowRoot.querySelector(\".col-container\");\n\n    // Apply initial variant if present\n    const initialVariant = this.getAttribute(\"variant\");\n    if (initialVariant) {\n      this._applyVariant(initialVariant);\n    }\n  }\n\n  static get observedAttributes() {\n    return [\n      \"flex-grow\",\n      \"flex-shrink\",\n      \"flex-basis\",\n      \"align-self\",\n      \"order\",\n      \"justify-content\",\n      \"align-items\",\n      \"gap\",\n      \"wrap\",\n      \"variant\",\n      \"aria-label\",\n      \"aria-describedby\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n    switch (name) {\n      // Flex Item Properties (applied to :host)\n      case \"flex-grow\":\n        this.style.flexGrow = newValue || \"\";\n        break;\n      case \"flex-shrink\":\n        this.style.flexShrink = newValue || \"\";\n        break;\n      case \"flex-basis\":\n        this.style.flexBasis = newValue || \"\";\n        break;\n      case \"align-self\":\n        this.style.alignSelf = newValue || \"\";\n        break;\n      case \"order\":\n        this.style.order = newValue || \"\";\n        break;\n      // Flex Container Properties (applied to .col-container)\n      case \"justify-content\":\n        this.colContainer.style.justifyContent = newValue || \"\";\n        break;\n      case \"align-items\":\n        this.colContainer.style.alignItems = newValue || \"\";\n        break;\n      case \"gap\":\n        this.colContainer.style.gap = newValue || \"\";\n        break;\n      case \"wrap\":\n        if (this.hasAttribute(\"wrap\")) {\n          this.colContainer.style.flexWrap = \"wrap\";\n        } else {\n          this.colContainer.style.flexWrap = \"nowrap\";\n        }\n        break;\n      case \"variant\":\n        this._applyVariant(newValue);\n        break;\n    }\n  }\n\n  /**\n   * Applies grid variant styles based on the variant attribute.\n   * @param {string} variant - The variant value (gs1-gs12)\n   * @private\n   */\n  _applyVariant(variant) {\n    if (!variant) {\n      // Reset to default flex behavior\n      this.style.flexGrow = \"\";\n      this.style.flexShrink = \"\";\n      this.style.flexBasis = \"\";\n      return;\n    }\n\n    // Extract the number from variant (e.g., \"gs3\" -> 3)\n    const match = variant.match(/gs(\\d+)/);\n    if (!match) {\n      console.warn(`Invalid variant \"${variant}\". Expected format: gs1-gs12`);\n      return;\n    }\n\n    const columnCount = parseInt(match[1], 10);\n    if (columnCount < 1 || columnCount > 12) {\n      console.warn(\n        `Invalid variant \"${variant}\". Column count must be between 1 and 12`\n      );\n      return;\n    }\n\n    // Calculate the flex-basis as a percentage of 12 columns\n    const percentage = (columnCount / 12) * 100;\n\n    // Apply grid variant styles\n    this.style.flexGrow = \"0\";\n    this.style.flexShrink = \"0\";\n    this.style.flexBasis = `${percentage}%`;\n  }\n\n  // Override test ID generation for column-specific logic\n  _generateTestId() {\n    const baseId = \"col\";\n    const flexGrow = this.getAttribute(\"flex-grow\") || \"default\";\n    const flexBasis = this.getAttribute(\"flex-basis\") || \"default\";\n    const alignSelf = this.getAttribute(\"align-self\") || \"default\";\n    const justifyContent = this.getAttribute(\"justify-content\") || \"default\";\n    const variant = this.getAttribute(\"variant\") || \"default\";\n\n    return `ds-${baseId}-${flexGrow}-${flexBasis}-${alignSelf}-${justifyContent}-${variant}`;\n  }\n\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.colContainer.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.colContainer.removeAttribute(\"aria-label\");\n    } else {\n      this.colContainer.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.colContainer.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.colContainer.removeAttribute(\"aria-describedby\");\n    } else {\n      this.colContainer.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  // Optionally override validateARIA if needed\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-col\")) {\n  customElements.define(\"ds-col\", DsCol);\n}\n\n// Export for use in other modules\nexport { DsCol };\nexport default DsCol;\n", "/**\n * Dispatches a composed+bubbling CustomEvent from the given element.\n * @template T\n * @param {HTMLElement} el\n * @param {string} name\n * @param {T} [detail]\n * @returns {boolean}\n */\nexport function emit(el, name, detail) {\n  return el.dispatchEvent(\n    new CustomEvent(name, {\n      detail,\n      bubbles: true,\n      composed: true,\n      cancelable: false\n    })\n  );\n}\n", "/**\n * @file ds-text-input.js\n * @summary A custom Web Component that wraps a native `<input>` element for text-based inputs.\n * @description\n * The `ds-text-input` component provides a styled and functional text input field.\n * It mirrors common `<input>` attributes and properties, making it easy to use\n * within forms while leveraging the design system's styling.\n *\n * @element ds-text-input\n * @extends BaseComponent\n *\n * @attr {string} [type=\"text\"] - The type of input (e.g., `text`, `email`, `password`, `number`, `tel`, `url`, `search`).\n * @attr {string} value - The current value of the input.\n * @attr {string} placeholder - A hint to the user of what can be entered in the input.\n * @attr {boolean} disabled - If present, the input cannot be interacted with.\n * @attr {boolean} readonly - If present, the input cannot be modified by the user.\n * @attr {boolean} required - If present, the input must have a value before form submission.\n * @attr {string} name - The name of the input, used when submitting form data.\n * @attr {string} id - A unique identifier for the input, useful for associating with labels.\n * @attr {string} [aria-label] - Defines a string value that labels the current element for accessibility purposes.\n *\n * @property {string} value - Gets or sets the current value of the input.\n * @property {string} type - Gets or sets the type of the input.\n * @property {boolean} disabled - Gets or sets the disabled state of the input.\n * @property {boolean} readonly - Gets or sets the readonly state of the input.\n * @property {boolean} required - Gets or sets the required state of the input.\n *\n * @fires input - re-emitted from host (bubbles, composed)\n * @fires change - re-emitted from host (bubbles, composed)\n * @fires focus - re-emitted from host (bubbles, composed)\n * @fires blur - re-emitted from host (bubbles, composed)\n * @fires ds-change - custom event with { detail: { value } }\n *\n * @example\n * <!-- Basic text input -->\n * <ds-text-input placeholder=\"Enter your name\" id=\"username-input\"></ds-text-input>\n * <ds-label for=\"username-input\">Username</ds-label>\n *\n * @example\n * <!-- Password input that is required -->\n * <ds-text-input type=\"password\" required placeholder=\"Your password\"></ds-text-input>\n *\n * @example\n * <!-- Disabled email input with a pre-filled value -->\n * <ds-text-input type=\"email\" value=\"example@domain.com\" disabled></ds-text-input>\n */\nimport BaseComponent from \"./base-component.js\";\nimport { emit } from \"../utils/emit.js\";\n\nclass DsTextInput extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-text-input\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-required\",\n        \"aria-invalid\",\n        \"aria-autocomplete\",\n        \"aria-controls\",\n        \"aria-activedescendant\",\n      ],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\n        \"aria-describedby\",\n        \"aria-controls\",\n        \"aria-activedescendant\",\n      ],\n      tokenValidation: {\n        \"aria-autocomplete\": [\"inline\", \"list\", \"both\", \"none\"],\n        \"aria-invalid\": [\"grammar\", \"false\", \"spelling\", \"true\"],\n      },\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n                \n                input[part=\"container\"] {\n                    width: 100%;\n                    padding: var(--ds-form-input-padding);\n                    border: 1px solid var(--ds-form-border-color);\n                    border-radius: var(--ds-form-border-radius);\n                    font-family: var(--ds-font-family-body);\n                    font-size: var(--ds-font-size-base);\n                    line-height: var(--ds-form-line-height);\n                    background-color: var(--ds-form-bg-color);\n                    color: var(--ds-form-text-color);\n                    box-sizing: border-box;\n                    transition: border-color 0.2s ease-in-out;\n                }\n                \n                input[part=\"container\"]:focus {\n                    outline: none;\n                    border-color: var(--ds-form-focus-color);\n                    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n                }\n                \n                input[part=\"container\"]:disabled {\n                    background-color: var(--ds-form-disabled-bg-color);\n                    color: #6c757d;\n                    cursor: not-allowed;\n                }\n                \n                input[part=\"container\"]:read-only {\n                    background-color: var(--ds-form-disabled-bg-color);\n                }\n                \n                /* Variant-specific styles */\n                input[part=\"container\"].error {\n                    border-color: var(--ds-text-input-error-border-color, #dc3545);\n                    background-color: var(--ds-text-input-error-background-color, #fff5f5);\n                }\n                \n                input[part=\"container\"].success {\n                    border-color: var(--ds-text-input-success-border-color, #28a745);\n                    background-color: var(--ds-text-input-success-background-color, #f0fff4);\n                }\n                \n                /* Size-specific styles */\n                input[part=\"container\"].small {\n                    padding: var(--ds-text-input-small-padding, 4px 8px);\n                    font-size: var(--ds-text-input-small-font-size, 14px);\n                }\n                \n                input[part=\"container\"].medium {\n                    padding: var(--ds-text-input-medium-padding, 8px 12px);\n                    font-size: var(--ds-text-input-medium-font-size, 16px);\n                }\n                \n                input[part=\"container\"].large {\n                    padding: var(--ds-text-input-large-padding, 12px 16px);\n                    font-size: var(--ds-text-input-large-font-size, 18px);\n                }\n            </style>\n            <div class=\"wrapper\">\n                <input id=\"input\" part=\"container\" type=\"text\">\n                <slot></slot>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"input\",\n      ariaConfig,\n      observedAttributes: [\n        \"type\",\n        \"value\",\n        \"placeholder\",\n        \"disabled\",\n        \"readonly\",\n        \"required\",\n        \"name\",\n        \"id\",\n        \"variant\",\n        \"size\",\n      ],\n    });\n\n    this.input = this.shadowRoot.querySelector(\"input\");\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n  }\n\n  // Override test ID generation for text input-specific logic\n  _generateTestId() {\n    const baseId = \"text-input\";\n    const type = this.getAttribute(\"type\") || \"text\";\n    const name = this.getAttribute(\"name\") || \"default\";\n    const state = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n    const isRequired = this.hasAttribute(\"required\") ? \"required\" : \"optional\";\n\n    return `ds-${baseId}-${type}-${name}-${state}-${isRequired}`;\n  }\n\n  static get observedAttributes() {\n    return [\n      \"type\",\n      \"value\",\n      \"placeholder\",\n      \"disabled\",\n      \"readonly\",\n      \"required\",\n      \"name\",\n      \"id\",\n      \"variant\",\n      \"size\",\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-required\",\n      \"aria-invalid\",\n      \"aria-autocomplete\",\n      \"aria-controls\",\n      \"aria-activedescendant\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n    switch (name) {\n      case \"type\":\n        this.input.type = newValue || \"text\";\n        break;\n      case \"value\":\n        this.input.value = newValue || \"\";\n        break;\n      case \"placeholder\":\n        this.input.placeholder = newValue || \"\";\n        break;\n      case \"disabled\":\n        this.input.disabled = this.hasAttribute(\"disabled\");\n        break;\n      case \"readonly\":\n        this.input.readOnly = this.hasAttribute(\"readonly\");\n        break;\n      case \"required\":\n        this.input.required = this.hasAttribute(\"required\");\n        break;\n      case \"name\":\n        this.input.name = newValue || \"\";\n        break;\n      case \"id\":\n        this.input.id = newValue || \"\";\n        break;\n      case \"variant\":\n        // Remove existing variant classes\n        this.input.classList.remove(\"error\", \"success\");\n        // Add new variant class if specified\n        if (newValue) {\n          this.input.classList.add(newValue);\n        }\n        break;\n      case \"size\":\n        // Remove existing size classes\n        this.input.classList.remove(\"small\", \"medium\", \"large\");\n        // Add new size class if specified\n        if (newValue) {\n          this.input.classList.add(newValue);\n        }\n        break;\n    }\n  }\n\n  get value() {\n    return this.input.value;\n  }\n  set value(val) {\n    const v = val ?? \"\";\n    if (this.input.value !== v) {\n      this.input.value = v;\n    }\n    this.setAttribute(\"value\", v);\n  }\n  get type() {\n    return this.input.type;\n  }\n  set type(val) {\n    this.input.type = val;\n  }\n  get disabled() {\n    return this.input.disabled;\n  }\n  set disabled(val) {\n    this.input.disabled = val;\n  }\n  get readonly() {\n    return this.input.readOnly;\n  }\n  set readonly(val) {\n    this.input.readOnly = val;\n  }\n  get required() {\n    return this.input.required;\n  }\n  set required(val) {\n    this.input.required = val;\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    this.input.addEventListener(\"input\", this._onInput);\n    this.input.addEventListener(\"change\", this._onChange);\n    this.input.addEventListener(\"focus\", this._onFocus);\n    this.input.addEventListener(\"blur\", this._onBlur);\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    this.input.removeEventListener(\"input\", this._onInput);\n    this.input.removeEventListener(\"change\", this._onChange);\n    this.input.removeEventListener(\"focus\", this._onFocus);\n    this.input.removeEventListener(\"blur\", this._onBlur);\n  }\n\n  _onInput() {\n    this.dispatchEvent(new Event(\"input\", { bubbles: true, composed: true }));\n    emit(this, \"ds-change\", { value: this.input.value });\n  }\n\n  _onChange() {\n    this.dispatchEvent(new Event(\"change\", { bubbles: true, composed: true }));\n  }\n\n  _onFocus() {\n    this.dispatchEvent(new Event(\"focus\", { bubbles: true, composed: true }));\n  }\n\n  _onBlur() {\n    this.dispatchEvent(new Event(\"blur\", { bubbles: true, composed: true }));\n  }\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.input.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.input.removeAttribute(\"aria-label\");\n    } else {\n      this.input.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.input.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.input.removeAttribute(\"aria-describedby\");\n    } else {\n      this.input.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  get ariaRequired() {\n    const value = this.input.getAttribute(\"aria-required\");\n    return value === null ? null : value;\n  }\n  set ariaRequired(val) {\n    if (val === null || val === undefined) {\n      this.input.removeAttribute(\"aria-required\");\n    } else {\n      this.input.setAttribute(\"aria-required\", val);\n    }\n  }\n  get ariaInvalid() {\n    const value = this.input.getAttribute(\"aria-invalid\");\n    return value === null ? null : value;\n  }\n  set ariaInvalid(val) {\n    if (val === null || val === undefined) {\n      this.input.removeAttribute(\"aria-invalid\");\n    } else {\n      this.input.setAttribute(\"aria-invalid\", val);\n    }\n  }\n  get ariaAutocomplete() {\n    const value = this.input.getAttribute(\"aria-autocomplete\");\n    return value === null ? null : value;\n  }\n  set ariaAutocomplete(val) {\n    if (val === null || val === undefined) {\n      this.input.removeAttribute(\"aria-autocomplete\");\n    } else {\n      this.input.setAttribute(\"aria-autocomplete\", val);\n    }\n  }\n  get ariaControls() {\n    const value = this.input.getAttribute(\"aria-controls\");\n    return value === null ? null : value;\n  }\n  set ariaControls(val) {\n    if (val === null || val === undefined) {\n      this.input.removeAttribute(\"aria-controls\");\n    } else {\n      this.input.setAttribute(\"aria-controls\", val);\n    }\n  }\n  get ariaActiveDescendant() {\n    const value = this.input.getAttribute(\"aria-activedescendant\");\n    return value === null ? null : value;\n  }\n  set ariaActiveDescendant(val) {\n    if (val === null || val === undefined) {\n      this.input.removeAttribute(\"aria-activedescendant\");\n    } else {\n      this.input.setAttribute(\"aria-activedescendant\", val);\n    }\n  }\n  // Override validateARIA for text input–specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n    // Accessible name check - check host element's text content and ARIA attributes\n    const hostAriaLabel = this.getAttribute(\"aria-label\");\n    const hostAriaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const inputAriaLabel = this.input.getAttribute(\"aria-label\");\n    const inputAriaLabelledBy = this.input.getAttribute(\"aria-labelledby\");\n    const hasName =\n      hostAriaLabel ||\n      hostAriaLabelledBy ||\n      inputAriaLabel ||\n      inputAriaLabelledBy;\n    if (!hasName) {\n      errors.push(\n        \"Text input has no accessible name (aria-label or aria-labelledby required)\"\n      );\n    }\n    // aria-invalid state management\n    if (this.input.hasAttribute(\"aria-invalid\")) {\n      const val = this.input.getAttribute(\"aria-invalid\");\n      if (![\"true\", \"false\", \"grammar\", \"spelling\"].includes(val)) {\n        errors.push(`Invalid aria-invalid value: ${val}`);\n      }\n    }\n    // aria-describedby references\n    if (this.input.hasAttribute(\"aria-describedby\")) {\n      const refError = this.checkAriaReferences(\n        \"aria-describedby\",\n        this.input.getAttribute(\"aria-describedby\")\n      );\n      if (refError) errors.push(refError);\n    }\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-text-input\")) {\n  customElements.define(\"ds-text-input\", DsTextInput);\n}\n\n// Export for use in other modules\nexport { DsTextInput };\nexport default DsTextInput;\n", "/**\n * @file ds-button.js\n * @summary A custom Web Component that wraps a native `<button>` element.\n * @description\n * The `ds-button` component provides a styled and functional button element.\n * It supports various button types and variants while maintaining accessibility\n * and proper event handling.\n *\n * The content inside `<ds-button>...</ds-button>` is rendered as the button label via the default slot.\n *\n * Allowed `variant` values: `primary`, `secondary`, `danger`. These control the button's visual style.\n *\n * Can be used inside a `<form>`. When `type=\"submit\"`, it will submit the form like a native button. `name` and `value` attributes are included in form data.\n *\n * You can listen for standard events (`click`, `focus`, `blur`) on `<ds-button>` just like a native button, e.g. `addEventListener('click', ...)`.\n *\n * If no accessible name is provided (text content or ARIA), the component will warn in the console for accessibility compliance.\n *\n * The button is fully keyboard accessible and focusable by default.\n *\n * The native button uses `part=\"container\"` for styling via the Shadow DOM: you can use `::part(container)` in your CSS.\n *\n * @element ds-button\n * @extends BaseComponent\n *\n * @slot - The button label/content.\n *\n * @attr {string} [type=\"button\"] - The type of button (e.g., `button`, `submit`, `reset`).\n * @attr {boolean} disabled - If present, the button cannot be interacted with.\n * @attr {string} name - The name of the button, used when submitting form data.\n * @attr {string} value - The value of the button, used when submitting form data.\n * @attr {string} [variant] - The visual variant of the button (`primary`, `secondary`, `danger`).\n *\n * @property {string} type - Gets or sets the type of the button.\n * @property {boolean} disabled - Gets or sets the disabled state of the button.\n * @property {string} name - Gets or sets the name of the button.\n * @property {string} value - Gets or sets the value of the button.\n * @property {string} variant - Gets or sets the variant of the button.\n *\n * @fires click - re-emitted from host (bubbles, composed)\n * @fires focus - re-emitted from host (bubbles, composed)\n * @fires blur - re-emitted from host (bubbles, composed)\n * @fires ds-activate - custom event signaling activation\n *\n * @note If no accessible name (text, `aria-label`, or `aria-labelledby`) is provided, a warning will be shown in the console.\n * @note The button is focusable and keyboard accessible by default.\n * @note The native button uses `part=\"container\"` for styling via the Shadow DOM.\n *\n * @example\n * <!-- Basic button -->\n * <ds-button>Click me</ds-button>\n *\n * @example\n * <!-- Submit button with variant -->\n * <ds-button type=\"submit\" variant=\"primary\">Submit Form</ds-button>\n *\n * @example\n * <!-- Disabled button -->\n * <ds-button disabled variant=\"secondary\">Disabled Button</ds-button>\n *\n * @example\n * <!-- Button with ARIA label -->\n * <ds-button aria-label=\"Close dialog\"></ds-button>\n *\n * @example\n * <!-- Listening for click event -->\n * <ds-button id=\"myBtn\">Save</ds-button>\n * <script>\n *   document.getElementById('myBtn').addEventListener('click', () => alert('Clicked!'));\n * </script>\n */\nimport BaseComponent from \"./base-component.js\";\nimport { emit } from \"../utils/emit.js\";\n\nclass DsButton extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-button\n    const ariaConfig = {\n      staticAriaAttributes: { role: \"button\" },\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-pressed\",\n        \"aria-expanded\",\n        \"aria-haspopup\",\n      ],\n      requiredAriaAttributes: [], // none required, but warn about missing labels\n      referenceAttributes: [\"aria-describedby\"],\n      tokenValidation: {\n        \"aria-haspopup\": [\n          \"false\",\n          \"true\",\n          \"menu\",\n          \"listbox\",\n          \"tree\",\n          \"grid\",\n          \"dialog\",\n        ],\n        \"aria-pressed\": [\"false\", \"true\", \"mixed\", \"undefined\"],\n        \"aria-expanded\": [\"false\", \"true\", \"undefined\"],\n      },\n    };\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host { display: inline-block; }\n                .wrapper { width: 100%; }\n                \n                button[part=\"container\"] {\n                    /* Base button styles using CSS custom properties */\n                    background-color: var(--ds-button-background-color, #ffffff);\n                    border-color: var(--ds-button-border-color, #ced4da);\n                    color: var(--ds-button-text-color, #212529);\n                    border-radius: var(--ds-button-border-radius, 4px);\n                    padding: var(--ds-button-padding, 8px 16px);\n                    font-size: var(--ds-button-font-size, 16px);\n                    font-weight: var(--ds-button-font-weight, 400);\n                    border-width: var(--ds-button-border-width, 1px);\n                    border-style: var(--ds-button-border-style, solid);\n                    transition: var(--ds-button-transition, all 0.2s ease-in-out);\n                    cursor: pointer;\n                    font-family: inherit;\n                    line-height: 1.5;\n                    box-sizing: border-box;\n                    text-align: center;\n                    justify-content: center;\n                }\n                \n                button[part=\"container\"]:hover {\n                    background-color: var(--ds-button-hover-background-color, #e9ecef);\n                    border-color: var(--ds-button-hover-border-color, var(--ds-button-border-color, #ced4da));\n                }\n                \n                button[part=\"container\"]:focus {\n                    outline: none;\n                    border-color: var(--ds-button-focus-border-color, #007bff);\n                    box-shadow: var(--ds-button-focus-box-shadow, 0 0 0 2px rgba(0, 123, 255, 0.25));\n                }\n                \n                button[part=\"container\"]:disabled {\n                    background-color: var(--ds-button-disabled-background-color, #e9ecef);\n                    color: var(--ds-button-disabled-text-color, #6c757d);\n                    cursor: not-allowed;\n                    opacity: var(--ds-button-disabled-opacity, 0.65);\n                }\n                \n                /* Variant-specific styles with cascading fallbacks */\n                button[part=\"container\"].primary {\n                    background-color: var(--ds-button-primary-background-color, var(--ds-button-background-color, #ffffff));\n                    border-color: var(--ds-button-primary-border-color, var(--ds-button-border-color, #ced4da));\n                    color: var(--ds-button-primary-text-color, var(--ds-button-text-color, #212529));\n                    font-weight: var(--ds-button-primary-font-weight, var(--ds-button-font-weight, 400));\n                }\n                \n                button[part=\"container\"].secondary {\n                    background-color: var(--ds-button-secondary-background-color, var(--ds-button-background-color, #ffffff));\n                    border-color: var(--ds-button-secondary-border-color, var(--ds-button-border-color, #ced4da));\n                    color: var(--ds-button-secondary-text-color, var(--ds-button-text-color, #212529));\n                }\n                \n                button[part=\"container\"].danger {\n                    background-color: var(--ds-button-danger-background-color, var(--ds-button-background-color, #ffffff));\n                    border-color: var(--ds-button-danger-border-color, var(--ds-button-border-color, #ced4da));\n                    color: var(--ds-button-danger-text-color, var(--ds-button-text-color, #212529));\n                    font-weight: var(--ds-button-danger-font-weight, var(--ds-button-font-weight, 400));\n                }\n                \n                button[part=\"container\"].outline {\n                    background-color: var(--ds-button-outline-background-color, var(--ds-button-background-color, #ffffff));\n                    border-color: var(--ds-button-outline-border-color, var(--ds-button-border-color, #ced4da));\n                    color: var(--ds-button-outline-text-color, var(--ds-button-text-color, #212529));\n                }\n                \n                button[part=\"container\"].ghost {\n                    background-color: var(--ds-button-ghost-background-color, var(--ds-button-background-color, #ffffff));\n                    border-color: var(--ds-button-ghost-border-color, var(--ds-button-border-color, #ced4da));\n                    color: var(--ds-button-ghost-text-color, var(--ds-button-text-color, #212529));\n                }\n                \n                /* Size-specific styles */\n                button[part=\"container\"].small {\n                    padding: var(--ds-button-small-padding, 4px 8px);\n                    font-size: var(--ds-button-small-font-size, 14px);\n                }\n                \n                button[part=\"container\"].medium {\n                    padding: var(--ds-button-medium-padding, 8px 16px);\n                    font-size: var(--ds-button-medium-font-size, 16px);\n                }\n                \n                button[part=\"container\"].large {\n                    padding: var(--ds-button-large-padding, 12px 24px);\n                    font-size: var(--ds-button-large-font-size, 18px);\n                }\n            </style>\n            <div class=\"wrapper\">\n                <button part=\"container\" type=\"button\">\n                    <slot></slot>\n                </button>\n            </div>\n        `;\n    super({\n      template: template.innerHTML,\n      targetSelector: \"button\",\n      ariaConfig,\n      observedAttributes: [\"type\", \"disabled\", \"name\", \"value\", \"variant\"],\n    });\n    this.button = this.shadowRoot.querySelector(\"button\");\n    this._onClick = this._onClick.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n  }\n\n  /**\n   * Defines which attributes the component observes for changes.\n   * @returns {Array<string>} An array of attribute names to observe.\n   */\n  static get observedAttributes() {\n    return [\n      \"type\",\n      \"disabled\",\n      \"name\",\n      \"value\",\n      \"variant\",\n      \"size\",\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-pressed\",\n      \"aria-expanded\",\n      \"aria-haspopup\",\n    ];\n  }\n\n  /**\n   * Called when one of the component's observed attributes is added, removed, or changed.\n   * @param {string} name - The name of the attribute that changed.\n   * @param {string|null} oldValue - The attribute's old value.\n   * @param {string|null} newValue - The attribute's new value.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    // Call parent method first\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (oldValue === newValue) return; // No change\n\n    switch (name) {\n      case \"type\":\n        this.button.type = newValue || \"button\";\n        break;\n\n      case \"disabled\":\n        if (this.hasAttribute(\"disabled\")) {\n          this.button.disabled = true;\n        } else {\n          this.button.disabled = false;\n        }\n        break;\n\n      case \"name\":\n        this.button.name = newValue || \"\";\n        break;\n\n      case \"value\":\n        this.button.value = newValue || \"\";\n        break;\n\n      case \"variant\":\n        // Remove existing variant classes\n        this.button.classList.remove(\n          \"primary\",\n          \"secondary\",\n          \"danger\",\n          \"outline\",\n          \"ghost\"\n        );\n        // Add new variant class if specified\n        if (newValue) {\n          this.button.classList.add(newValue);\n        }\n        break;\n\n      case \"size\":\n        // Remove existing size classes\n        this.button.classList.remove(\"small\", \"medium\", \"large\");\n        // Add new size class if specified\n        if (newValue) {\n          this.button.classList.add(newValue);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Gets the type of the button.\n   * @returns {string} The button's type.\n   */\n  get type() {\n    return this.button.type;\n  }\n\n  /**\n   * Sets the type of the button.\n   * @param {string} val - The new type to set.\n   */\n  set type(val) {\n    this.button.type = val;\n    if (val) {\n      this.setAttribute(\"type\", val);\n    } else {\n      this.removeAttribute(\"type\");\n    }\n  }\n\n  /**\n   * Gets the disabled state of the button.\n   * @returns {boolean} Whether the button is disabled.\n   */\n  get disabled() {\n    return this.button.disabled;\n  }\n\n  /**\n   * Sets the disabled state of the button.\n   * @param {boolean} val - Whether to disable the button.\n   */\n  set disabled(val) {\n    this.button.disabled = val;\n  }\n\n  /**\n   * Gets the name of the button.\n   * @returns {string} The button's name.\n   */\n  get name() {\n    return this.button.name;\n  }\n\n  /**\n   * Sets the name of the button.\n   * @param {string} val - The new name to set.\n   */\n  set name(val) {\n    this.button.name = val;\n  }\n\n  /**\n   * Gets the value of the button.\n   * @returns {string} The button's value.\n   */\n  get value() {\n    return this.button.value;\n  }\n\n  /**\n   * Sets the value of the button.\n   * @param {string} val - The new value to set.\n   */\n  set value(val) {\n    this.button.value = val;\n  }\n\n  /**\n   * Gets the variant of the button.\n   * @returns {string} The button's variant.\n   */\n  get variant() {\n    return this.getAttribute(\"variant\");\n  }\n\n  /**\n   * Sets the variant of the button.\n   * @param {string} val - The new variant to set.\n   */\n  set variant(val) {\n    if (val) {\n      this.setAttribute(\"variant\", val);\n    } else {\n      this.removeAttribute(\"variant\");\n    }\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    this.button.addEventListener(\"click\", this._onClick);\n    this.button.addEventListener(\"focus\", this._onFocus);\n    this.button.addEventListener(\"blur\", this._onBlur);\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    this.button.removeEventListener(\"click\", this._onClick);\n    this.button.removeEventListener(\"focus\", this._onFocus);\n    this.button.removeEventListener(\"blur\", this._onBlur);\n  }\n\n  _onClick(event) {\n    event.stopPropagation();\n    this.dispatchEvent(new Event(\"click\", { bubbles: true, composed: true }));\n    emit(this, \"ds-activate\", {});\n  }\n\n  _onFocus() {\n    this.dispatchEvent(new Event(\"focus\", { bubbles: true, composed: true }));\n  }\n\n  _onBlur() {\n    this.dispatchEvent(new Event(\"blur\", { bubbles: true, composed: true }));\n  }\n\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.button.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.button.removeAttribute(\"aria-label\");\n    } else {\n      this.button.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.button.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.button.removeAttribute(\"aria-describedby\");\n    } else {\n      this.button.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  get ariaPressed() {\n    const value = this.button.getAttribute(\"aria-pressed\");\n    return value === null ? null : value;\n  }\n  set ariaPressed(val) {\n    if (val === null || val === undefined) {\n      this.button.removeAttribute(\"aria-pressed\");\n    } else {\n      this.button.setAttribute(\"aria-pressed\", val);\n    }\n  }\n  get ariaExpanded() {\n    const value = this.button.getAttribute(\"aria-expanded\");\n    return value === null ? null : value;\n  }\n  set ariaExpanded(val) {\n    if (val === null || val === undefined) {\n      this.button.removeAttribute(\"aria-expanded\");\n    } else {\n      this.button.setAttribute(\"aria-expanded\", val);\n    }\n  }\n  get ariaHasPopup() {\n    const value = this.button.getAttribute(\"aria-haspopup\");\n    return value === null ? null : value;\n  }\n  set ariaHasPopup(val) {\n    if (val === null || val === undefined) {\n      this.button.removeAttribute(\"aria-haspopup\");\n    } else {\n      this.button.setAttribute(\"aria-haspopup\", val);\n    }\n  }\n\n  // Override test ID generation for button-specific logic\n  _generateTestId() {\n    const baseId = \"button\";\n    const variant = this.getAttribute(\"variant\") || \"default\";\n    const state = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n    const type = this.getAttribute(\"type\") || \"button\";\n    const size = this.getAttribute(\"size\") || \"medium\";\n\n    return `ds-${baseId}-${variant}-${state}-${type}-${size}`;\n  }\n\n  // Override validateARIA for button-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n\n    // Accessible name check - check host element's text content and ARIA attributes\n    const hostTextContent = this.textContent.trim();\n    const hostAriaLabel = this.getAttribute(\"aria-label\");\n    const hostAriaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const buttonAriaLabel = this.button.getAttribute(\"aria-label\");\n    const buttonAriaLabelledBy = this.button.getAttribute(\"aria-labelledby\");\n\n    const hasName =\n      hostTextContent ||\n      hostAriaLabel ||\n      hostAriaLabelledBy ||\n      buttonAriaLabel ||\n      buttonAriaLabelledBy;\n\n    if (!hasName) {\n      errors.push(\n        \"Button has no accessible name (text, aria-label, or aria-labelledby required)\"\n      );\n    }\n\n    // aria-pressed state management\n    if (this.button.hasAttribute(\"aria-pressed\")) {\n      const val = this.button.getAttribute(\"aria-pressed\");\n      if (![\"true\", \"false\", \"mixed\", \"undefined\"].includes(val)) {\n        errors.push(`Invalid aria-pressed value: ${val}`);\n      }\n    }\n\n    // aria-expanded/controls\n    if (this.button.hasAttribute(\"aria-expanded\")) {\n      // Optionally check for controlled element\n      // Could add logic to check for aria-controls\n    }\n\n    // aria-describedby references\n    if (this.button.hasAttribute(\"aria-describedby\")) {\n      const refError = this.checkAriaReferences(\n        \"aria-describedby\",\n        this.button.getAttribute(\"aria-describedby\")\n      );\n      if (refError) errors.push(refError);\n    }\n\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-button\")) {\n  customElements.define(\"ds-button\", DsButton);\n}\n\n// Export for use in other modules\nexport { DsButton };\nexport default DsButton;\n", "/**\n * @file ds-radio.js\n * @summary A custom Web Component that wraps a native radio input element.\n * @description\n * The `ds-radio` component provides a styled and functional radio button.\n * It maintains proper radio button behavior where only one option in a group can be selected.\n *\n * @element ds-radio\n * @extends BaseComponent\n *\n * @attr {string} name - The name of the radio button group. All radio buttons with the same name form a group.\n * @attr {string} value - The value of the radio button when selected.\n * @attr {boolean} checked - If present, the radio button is selected.\n * @attr {boolean} disabled - If present, the radio button cannot be interacted with.\n * @attr {boolean} readonly - If present, the radio button cannot be modified by the user.\n * @attr {boolean} required - If present, one radio button in the group must be selected.\n * @attr {string} id - A unique identifier for the radio button, useful for associating with labels.\n *\n * @property {boolean} checked - Gets or sets the checked state of the radio button.\n * @property {string} value - Gets or sets the value of the radio button.\n * @property {string} name - Gets or sets the name of the radio button.\n * @property {boolean} disabled - Gets or sets the disabled state of the radio button.\n * @property {boolean} readonly - Gets or sets the readonly state of the radio button.\n * @property {boolean} required - Gets or sets the required state of the radio button.\n *\n * @fires input - re-emitted from host (bubbles, composed)\n * @fires change - re-emitted from host (bubbles, composed)\n * @fires focus - re-emitted from host (bubbles, composed)\n * @fires blur - re-emitted from host (bubbles, composed)\n * @fires ds-change - custom event with { detail: { value } }\n *\n * @example\n * <!-- Basic radio button group -->\n * <ds-radio name=\"gender\" value=\"male\" id=\"male\">Male</ds-radio>\n * <ds-radio name=\"gender\" value=\"female\" id=\"female\">Female</ds-radio>\n * <ds-radio name=\"gender\" value=\"other\" id=\"other\">Other</ds-radio>\n *\n * @example\n * <!-- Radio button with default selection -->\n * <ds-radio name=\"preference\" value=\"option1\" checked>Option 1</ds-radio>\n * <ds-radio name=\"preference\" value=\"option2\">Option 2</ds-radio>\n *\n * @example\n * <!-- Disabled radio button -->\n * <ds-radio name=\"status\" value=\"inactive\" disabled>Inactive</ds-radio>\n */\nimport BaseComponent from \"./base-component.js\";\nimport { emit } from \"../utils/emit.js\";\n\nclass DsRadio extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-radio\n    const ariaConfig = {\n      staticAriaAttributes: { role: \"radio\" },\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-required\",\n        \"aria-invalid\",\n        \"aria-checked\",\n      ],\n      requiredAriaAttributes: [], // none required, but warn about missing labels\n      referenceAttributes: [\"aria-describedby\"],\n      tokenValidation: {\n        \"aria-checked\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n        \"aria-invalid\": [\"true\", \"false\", \"grammar\", \"spelling\"],\n      },\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: inline-block;\n                }\n                \n                .wrapper {\n                    display: flex;\n                    align-items: center;\n                }\n                \n                input[part=\"container\"] {\n                    margin-right: var(--ds-spacing-xs);\n                }\n            </style>\n            <div class=\"wrapper\">\n                <input type=\"radio\" id=\"radio\" part=\"container\">\n                <slot></slot>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: 'input[type=\"radio\"]',\n      ariaConfig,\n      observedAttributes: [\n        \"name\",\n        \"value\",\n        \"checked\",\n        \"disabled\",\n        \"readonly\",\n        \"required\",\n        \"id\",\n      ],\n    });\n\n    this.radio = this.shadowRoot.querySelector('input[type=\"radio\"]');\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n  }\n\n  // Override test ID generation for radio-specific logic\n  _generateTestId() {\n    const baseId = \"radio\";\n    const name = this.getAttribute(\"name\") || \"default\";\n    const value = this.getAttribute(\"value\") || \"default\";\n    const isChecked = this.hasAttribute(\"checked\") ? \"checked\" : \"unchecked\";\n    const isDisabled = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n\n    return `ds-${baseId}-${name}-${value}-${isChecked}-${isDisabled}`;\n  }\n\n  /**\n   * Defines which attributes the component observes for changes.\n   * @returns {Array<string>} An array of attribute names to observe.\n   */\n  static get observedAttributes() {\n    return [\n      \"name\",\n      \"value\",\n      \"checked\",\n      \"disabled\",\n      \"readonly\",\n      \"required\",\n      \"id\",\n      \"class\",\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-required\",\n      \"aria-invalid\",\n      \"aria-checked\",\n    ];\n  }\n\n  /**\n   * Called when one of the component's observed attributes is added, removed, or changed.\n   * @param {string} name - The name of the attribute that changed.\n   * @param {string|null} oldValue - The attribute's old value.\n   * @param {string|null} newValue - The attribute's new value.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    // Call parent method first\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (oldValue === newValue) return; // No change\n\n    switch (name) {\n      case \"name\":\n        this.radio.name = newValue || \"\";\n        break;\n\n      case \"value\":\n        this.radio.value = newValue || \"\";\n        break;\n\n      case \"checked\":\n        if (this.hasAttribute(\"checked\")) {\n          this.radio.checked = true;\n        } else {\n          this.radio.checked = false;\n        }\n        break;\n\n      case \"disabled\":\n        if (this.hasAttribute(\"disabled\")) {\n          this.radio.disabled = true;\n        } else {\n          this.radio.disabled = false;\n        }\n        break;\n\n      case \"readonly\":\n        if (this.hasAttribute(\"readonly\")) {\n          this.radio.readOnly = true;\n        } else {\n          this.radio.readOnly = false;\n        }\n        break;\n\n      case \"required\":\n        if (this.hasAttribute(\"required\")) {\n          this.radio.required = true;\n        } else {\n          this.radio.required = false;\n        }\n        break;\n\n      case \"id\":\n        this.radio.id = newValue || \"\";\n        break;\n    }\n  }\n\n  /**\n   * Gets the checked state of the radio button.\n   * @returns {boolean} Whether the radio button is checked.\n   */\n  get checked() {\n    return this.radio.checked;\n  }\n\n  /**\n   * Sets the checked state of the radio button.\n   * @param {boolean} val - Whether to check the radio button.\n   */\n  set checked(val) {\n    this.radio.checked = val;\n  }\n\n  /**\n   * Gets the value of the radio button.\n   * @returns {string} The radio button's value.\n   */\n  get value() {\n    return this.radio.value;\n  }\n\n  /**\n   * Sets the value of the radio button.\n   * @param {string} val - The new value to set.\n   */\n  set value(val) {\n    const v = val ?? \"\";\n    if (this.radio.value !== v) {\n      this.radio.value = v;\n    }\n    this.setAttribute(\"value\", v);\n  }\n\n  /**\n   * Gets the name of the radio button.\n   * @returns {string} The radio button's name.\n   */\n  get name() {\n    return this.radio.name;\n  }\n\n  /**\n   * Sets the name of the radio button.\n   * @param {string} val - The new name to set.\n   */\n  set name(val) {\n    this.radio.name = val;\n  }\n\n  /**\n   * Gets the disabled state of the radio button.\n   * @returns {boolean} Whether the radio button is disabled.\n   */\n  get disabled() {\n    return this.radio.disabled;\n  }\n\n  /**\n   * Sets the disabled state of the radio button.\n   * @param {boolean} val - Whether to disable the radio button.\n   */\n  set disabled(val) {\n    this.radio.disabled = val;\n  }\n\n  /**\n   * Gets the readonly state of the radio button.\n   * @returns {boolean} Whether the radio button is readonly.\n   */\n  get readonly() {\n    return this.radio.readOnly;\n  }\n\n  /**\n   * Sets the readonly state of the radio button.\n   * @param {boolean} val - Whether to make the radio button readonly.\n   */\n  set readonly(val) {\n    this.radio.readOnly = val;\n  }\n\n  /**\n   * Gets the required state of the radio button.\n   * @returns {boolean} Whether the radio button is required.\n   */\n  get required() {\n    return this.radio.required;\n  }\n\n  /**\n   * Sets the required state of the radio button.\n   * @param {boolean} val - Whether to make the radio button required.\n   */\n  set required(val) {\n    this.radio.required = val;\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    this.radio.addEventListener(\"input\", this._onInput);\n    this.radio.addEventListener(\"change\", this._onChange);\n    this.radio.addEventListener(\"focus\", this._onFocus);\n    this.radio.addEventListener(\"blur\", this._onBlur);\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    this.radio.removeEventListener(\"input\", this._onInput);\n    this.radio.removeEventListener(\"change\", this._onChange);\n    this.radio.removeEventListener(\"focus\", this._onFocus);\n    this.radio.removeEventListener(\"blur\", this._onBlur);\n  }\n\n  _onInput() {\n    this.dispatchEvent(new Event(\"input\", { bubbles: true, composed: true }));\n    emit(this, \"ds-change\", { value: this.radio.value });\n  }\n\n  _onChange() {\n    this.dispatchEvent(new Event(\"change\", { bubbles: true, composed: true }));\n  }\n\n  _onFocus() {\n    this.dispatchEvent(new Event(\"focus\", { bubbles: true, composed: true }));\n  }\n\n  _onBlur() {\n    this.dispatchEvent(new Event(\"blur\", { bubbles: true, composed: true }));\n  }\n\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.radio.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.radio.removeAttribute(\"aria-label\");\n    } else {\n      this.radio.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.radio.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.radio.removeAttribute(\"aria-describedby\");\n    } else {\n      this.radio.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  get ariaRequired() {\n    const value = this.radio.getAttribute(\"aria-required\");\n    return value === null ? null : value;\n  }\n  set ariaRequired(val) {\n    if (val === null || val === undefined) {\n      this.radio.removeAttribute(\"aria-required\");\n    } else {\n      this.radio.setAttribute(\"aria-required\", val);\n    }\n  }\n  get ariaInvalid() {\n    const value = this.radio.getAttribute(\"aria-invalid\");\n    return value === null ? null : value;\n  }\n  set ariaInvalid(val) {\n    if (val === null || val === undefined) {\n      this.radio.removeAttribute(\"aria-invalid\");\n    } else {\n      this.radio.setAttribute(\"aria-invalid\", val);\n    }\n  }\n  get ariaChecked() {\n    const value = this.radio.getAttribute(\"aria-checked\");\n    return value === null ? null : value;\n  }\n  set ariaChecked(val) {\n    if (val === null || val === undefined) {\n      this.radio.removeAttribute(\"aria-checked\");\n    } else {\n      this.radio.setAttribute(\"aria-checked\", val);\n    }\n  }\n\n  // Override validateARIA for radio-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n\n    // Accessible name check - check host element's text content and ARIA attributes\n    const hostTextContent = this.textContent.trim();\n    const hostAriaLabel = this.getAttribute(\"aria-label\");\n    const hostAriaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const radioAriaLabel = this.radio.getAttribute(\"aria-label\");\n    const radioAriaLabelledBy = this.radio.getAttribute(\"aria-labelledby\");\n\n    const hasName =\n      hostTextContent ||\n      hostAriaLabel ||\n      hostAriaLabelledBy ||\n      radioAriaLabel ||\n      radioAriaLabelledBy;\n\n    if (!hasName) {\n      errors.push(\n        \"Radio has no accessible name (text, aria-label, or aria-labelledby required)\"\n      );\n    }\n\n    // aria-checked state management\n    if (this.radio.hasAttribute(\"aria-checked\")) {\n      const val = this.radio.getAttribute(\"aria-checked\");\n      if (![\"true\", \"false\", \"mixed\", \"undefined\"].includes(val)) {\n        errors.push(`Invalid aria-checked value: ${val}`);\n      }\n    }\n\n    // aria-describedby references\n    if (this.radio.hasAttribute(\"aria-describedby\")) {\n      const refError = this.checkAriaReferences(\n        \"aria-describedby\",\n        this.radio.getAttribute(\"aria-describedby\")\n      );\n      if (refError) errors.push(refError);\n    }\n\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-radio\")) {\n  customElements.define(\"ds-radio\", DsRadio);\n}\n\n// Export for use in other modules\nexport { DsRadio };\nexport default DsRadio;\n", "/**\n * @file ds-checkbox.js\n * @summary A custom Web Component that wraps a native checkbox input element.\n * @description\n * The `ds-checkbox` component provides a styled and functional checkbox.\n * It supports both single checkboxes and groups of checkboxes for multiple selections.\n *\n * @element ds-checkbox\n * @extends BaseComponent\n *\n * @attr {string} name - The name of the checkbox, used when submitting form data.\n * @attr {string} value - The value of the checkbox when checked.\n * @attr {boolean} checked - If present, the checkbox is selected.\n * @attr {boolean} disabled - If present, the checkbox cannot be interacted with.\n * @attr {boolean} readonly - If present, the checkbox cannot be modified by the user.\n * @attr {boolean} required - If present, the checkbox must be checked before form submission.\n * @attr {string} id - A unique identifier for the checkbox, useful for associating with labels.\n *\n * @property {boolean} checked - Gets or sets the checked state of the checkbox.\n * @property {string} value - Gets or sets the value of the checkbox.\n * @property {string} name - Gets or sets the name of the checkbox.\n * @property {boolean} disabled - Gets or sets the disabled state of the checkbox.\n * @property {boolean} readonly - Gets or sets the readonly state of the checkbox.\n * @property {boolean} required - Gets or sets the required state of the checkbox.\n *\n * @fires input - re-emitted from host (bubbles, composed)\n * @fires change - re-emitted from host (bubbles, composed)\n * @fires focus - re-emitted from host (bubbles, composed)\n * @fires blur - re-emitted from host (bubbles, composed)\n * @fires ds-change - custom event with { detail: { value } }\n *\n * @example\n * <!-- Basic checkbox -->\n * <ds-checkbox name=\"agree\" value=\"yes\" id=\"agree-terms\">I agree to the terms</ds-checkbox>\n *\n * @example\n * <!-- Checkbox with default selection -->\n * <ds-checkbox name=\"newsletter\" value=\"subscribe\" checked>Subscribe to newsletter</ds-checkbox>\n *\n * @example\n * <!-- Multiple checkboxes for preferences -->\n * <ds-checkbox name=\"preferences\" value=\"email\">Email notifications</ds-checkbox>\n * <ds-checkbox name=\"preferences\" value=\"sms\">SMS notifications</ds-checkbox>\n * <ds-checkbox name=\"preferences\" value=\"push\">Push notifications</ds-checkbox>\n */\nimport BaseComponent from \"./base-component.js\";\nimport { emit } from \"../utils/emit.js\";\n\nclass DsCheckbox extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-checkbox\n    const ariaConfig = {\n      staticAriaAttributes: { role: \"checkbox\" },\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-required\",\n        \"aria-invalid\",\n        \"aria-checked\",\n      ],\n      requiredAriaAttributes: [], // none required, but warn about missing labels\n      referenceAttributes: [\"aria-describedby\"],\n      tokenValidation: {\n        \"aria-checked\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n        \"aria-invalid\": [\"true\", \"false\", \"grammar\", \"spelling\"],\n      },\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: inline-block;\n                }\n                \n                .wrapper {\n                    display: flex;\n                    align-items: center;\n                }\n                \n                input[part=\"container\"] {\n                    margin-right: var(--ds-spacing-xs);\n                }\n            </style>\n            <div class=\"wrapper\">\n                <input type=\"checkbox\" id=\"checkbox\" part=\"container\">\n                <slot></slot>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: 'input[type=\"checkbox\"]',\n      ariaConfig,\n      observedAttributes: [\n        \"name\",\n        \"value\",\n        \"checked\",\n        \"disabled\",\n        \"readonly\",\n        \"required\",\n        \"id\",\n      ],\n    });\n\n    this.checkbox = this.shadowRoot.querySelector('input[type=\"checkbox\"]');\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n  }\n\n  /**\n   * Defines which attributes the component observes for changes.\n   * @returns {Array<string>} An array of attribute names to observe.\n   */\n  static get observedAttributes() {\n    return [\n      \"name\",\n      \"value\",\n      \"checked\",\n      \"disabled\",\n      \"readonly\",\n      \"required\",\n      \"id\",\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-required\",\n      \"aria-invalid\",\n      \"aria-checked\",\n    ];\n  }\n\n  /**\n   * Called when one of the component's observed attributes is added, removed, or changed.\n   * @param {string} name - The name of the attribute that changed.\n   * @param {string|null} oldValue - The attribute's old value.\n   * @param {string|null} newValue - The attribute's new value.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    // Call parent method first\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (oldValue === newValue) return; // No change\n\n    switch (name) {\n      case \"name\":\n        this.checkbox.name = newValue || \"\";\n        break;\n\n      case \"value\":\n        this.checkbox.value = newValue || \"\";\n        break;\n\n      case \"checked\":\n        if (this.hasAttribute(\"checked\")) {\n          this.checkbox.checked = true;\n        } else {\n          this.checkbox.checked = false;\n        }\n        break;\n\n      case \"disabled\":\n        if (this.hasAttribute(\"disabled\")) {\n          this.checkbox.disabled = true;\n        } else {\n          this.checkbox.disabled = false;\n        }\n        break;\n\n      case \"readonly\":\n        if (this.hasAttribute(\"readonly\")) {\n          this.checkbox.readOnly = true;\n        } else {\n          this.checkbox.readOnly = false;\n        }\n        break;\n\n      case \"required\":\n        if (this.hasAttribute(\"required\")) {\n          this.checkbox.required = true;\n        } else {\n          this.checkbox.required = false;\n        }\n        break;\n\n      case \"id\":\n        this.checkbox.id = newValue || \"\";\n        break;\n    }\n  }\n\n  /**\n   * Gets the checked state of the checkbox.\n   * @returns {boolean} Whether the checkbox is checked.\n   */\n  get checked() {\n    return this.checkbox.checked;\n  }\n\n  /**\n   * Sets the checked state of the checkbox.\n   * @param {boolean} val - Whether to check the checkbox.\n   */\n  set checked(val) {\n    this.checkbox.checked = val;\n  }\n\n  /**\n   * Gets the value of the checkbox.\n   * @returns {string} The checkbox's value.\n   */\n  get value() {\n    return this.checkbox.value;\n  }\n\n  /**\n   * Sets the value of the checkbox.\n   * @param {string} val - The new value to set.\n   */\n  set value(val) {\n    const v = val ?? \"\";\n    if (this.checkbox.value !== v) {\n      this.checkbox.value = v;\n    }\n    this.setAttribute(\"value\", v);\n  }\n\n  /**\n   * Gets the name of the checkbox.\n   * @returns {string} The checkbox's name.\n   */\n  get name() {\n    return this.checkbox.name;\n  }\n\n  /**\n   * Sets the name of the checkbox.\n   * @param {string} val - The new name to set.\n   */\n  set name(val) {\n    this.checkbox.name = val;\n  }\n\n  /**\n   * Gets the disabled state of the checkbox.\n   * @returns {boolean} Whether the checkbox is disabled.\n   */\n  get disabled() {\n    return this.checkbox.disabled;\n  }\n\n  /**\n   * Sets the disabled state of the checkbox.\n   * @param {boolean} val - Whether to disable the checkbox.\n   */\n  set disabled(val) {\n    this.checkbox.disabled = val;\n  }\n\n  /**\n   * Gets the readonly state of the checkbox.\n   * @returns {boolean} Whether the checkbox is readonly.\n   */\n  get readonly() {\n    return this.checkbox.readOnly;\n  }\n\n  /**\n   * Sets the readonly state of the checkbox.\n   * @param {boolean} val - Whether to make the checkbox readonly.\n   */\n  set readonly(val) {\n    this.checkbox.readOnly = val;\n  }\n\n  /**\n   * Gets the required state of the checkbox.\n   * @returns {boolean} Whether the checkbox is required.\n   */\n  get required() {\n    return this.checkbox.required;\n  }\n\n  /**\n   * Sets the required state of the checkbox.\n   * @param {boolean} val - Whether to make the checkbox required.\n   */\n  set required(val) {\n    this.checkbox.required = val;\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    this.checkbox.addEventListener(\"input\", this._onInput);\n    this.checkbox.addEventListener(\"change\", this._onChange);\n    this.checkbox.addEventListener(\"focus\", this._onFocus);\n    this.checkbox.addEventListener(\"blur\", this._onBlur);\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    this.checkbox.removeEventListener(\"input\", this._onInput);\n    this.checkbox.removeEventListener(\"change\", this._onChange);\n    this.checkbox.removeEventListener(\"focus\", this._onFocus);\n    this.checkbox.removeEventListener(\"blur\", this._onBlur);\n  }\n\n  _onInput() {\n    this.dispatchEvent(new Event(\"input\", { bubbles: true, composed: true }));\n    emit(this, \"ds-change\", { value: this.checkbox.checked });\n  }\n\n  _onChange() {\n    this.dispatchEvent(new Event(\"change\", { bubbles: true, composed: true }));\n  }\n\n  _onFocus() {\n    this.dispatchEvent(new Event(\"focus\", { bubbles: true, composed: true }));\n  }\n\n  _onBlur() {\n    this.dispatchEvent(new Event(\"blur\", { bubbles: true, composed: true }));\n  }\n\n  // Override test ID generation for checkbox-specific logic\n  _generateTestId() {\n    const baseId = \"checkbox\";\n    const name = this.getAttribute(\"name\") || \"default\";\n    const state = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n    const checked = this.hasAttribute(\"checked\") ? \"checked\" : \"unchecked\";\n    const value = this.getAttribute(\"value\") || \"medium\";\n\n    return `ds-${baseId}-${name}-${state}-${checked}-${value}`;\n  }\n\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.checkbox.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.checkbox.removeAttribute(\"aria-label\");\n    } else {\n      this.checkbox.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.checkbox.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.checkbox.removeAttribute(\"aria-describedby\");\n    } else {\n      this.checkbox.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  get ariaRequired() {\n    const value = this.checkbox.getAttribute(\"aria-required\");\n    return value === null ? null : value;\n  }\n  set ariaRequired(val) {\n    if (val === null || val === undefined) {\n      this.checkbox.removeAttribute(\"aria-required\");\n    } else {\n      this.checkbox.setAttribute(\"aria-required\", val);\n    }\n  }\n  get ariaInvalid() {\n    const value = this.checkbox.getAttribute(\"aria-invalid\");\n    return value === null ? null : value;\n  }\n  set ariaInvalid(val) {\n    if (val === null || val === undefined) {\n      this.checkbox.removeAttribute(\"aria-invalid\");\n    } else {\n      this.checkbox.setAttribute(\"aria-invalid\", val);\n    }\n  }\n  get ariaChecked() {\n    const value = this.checkbox.getAttribute(\"aria-checked\");\n    return value === null ? null : value;\n  }\n  set ariaChecked(val) {\n    if (val === null || val === undefined) {\n      this.checkbox.removeAttribute(\"aria-checked\");\n    } else {\n      this.checkbox.setAttribute(\"aria-checked\", val);\n    }\n  }\n\n  // Override validateARIA for checkbox-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n\n    // Accessible name check - check host element's text content and ARIA attributes\n    const hostTextContent = this.textContent.trim();\n    const hostAriaLabel = this.getAttribute(\"aria-label\");\n    const hostAriaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const checkboxAriaLabel = this.checkbox.getAttribute(\"aria-label\");\n    const checkboxAriaLabelledBy =\n      this.checkbox.getAttribute(\"aria-labelledby\");\n\n    const hasName =\n      hostTextContent ||\n      hostAriaLabel ||\n      hostAriaLabelledBy ||\n      checkboxAriaLabel ||\n      checkboxAriaLabelledBy;\n\n    if (!hasName) {\n      errors.push(\n        \"Checkbox has no accessible name (text, aria-label, or aria-labelledby required)\"\n      );\n    }\n\n    // aria-checked state management\n    if (this.checkbox.hasAttribute(\"aria-checked\")) {\n      const val = this.checkbox.getAttribute(\"aria-checked\");\n      if (![\"true\", \"false\", \"mixed\", \"undefined\"].includes(val)) {\n        errors.push(`Invalid aria-checked value: ${val}`);\n      }\n    }\n\n    // aria-describedby references\n    if (this.checkbox.hasAttribute(\"aria-describedby\")) {\n      const refError = this.checkAriaReferences(\n        \"aria-describedby\",\n        this.checkbox.getAttribute(\"aria-describedby\")\n      );\n      if (refError) errors.push(refError);\n    }\n\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-checkbox\")) {\n  customElements.define(\"ds-checkbox\", DsCheckbox);\n}\n\n// Export for use in other modules\nexport { DsCheckbox };\nexport default DsCheckbox;\n", "/**\n * @file ds-textarea.js\n * @summary A custom Web Component that wraps a native `<textarea>` element.\n * @description\n * The `ds-textarea` component provides a styled and functional textarea for multi-line text input.\n * It supports various textarea attributes and properties while maintaining accessibility\n * and proper event handling.\n *\n * @element ds-textarea\n * @extends BaseComponent\n *\n * @attr {string} value - The current value of the textarea.\n * @attr {string} placeholder - A hint to the user of what can be entered in the textarea.\n * @attr {string} rows - The number of visible text lines in the textarea.\n * @attr {string} cols - The visible width of the textarea in average character widths.\n * @attr {boolean} disabled - If present, the textarea cannot be interacted with.\n * @attr {boolean} readonly - If present, the textarea cannot be modified by the user.\n * @attr {boolean} required - If present, the textarea must have a value before form submission.\n * @attr {string} name - The name of the textarea, used when submitting form data.\n * @attr {string} id - A unique identifier for the textarea, useful for associating with labels.\n *\n * @property {string} value - Gets or sets the current value of the textarea.\n * @property {string} placeholder - Gets or sets the placeholder text of the textarea.\n * @property {number} rows - Gets or sets the number of rows in the textarea.\n * @property {number} cols - Gets or sets the number of columns in the textarea.\n * @property {boolean} disabled - Gets or sets the disabled state of the textarea.\n * @property {boolean} readonly - Gets or sets the readonly state of the textarea.\n * @property {boolean} required - Gets or sets the required state of the textarea.\n * @property {string} name - Gets or sets the name of the textarea.\n *\n * @fires input - re-emitted from host (bubbles, composed)\n * @fires change - re-emitted from host (bubbles, composed)\n * @fires focus - re-emitted from host (bubbles, composed)\n * @fires blur - re-emitted from host (bubbles, composed)\n * @fires ds-change - custom event with { detail: { value } }\n *\n * @example\n * <!-- Basic textarea -->\n * <ds-textarea placeholder=\"Enter your message\" rows=\"4\" cols=\"50\"></ds-textarea>\n *\n * @example\n * <!-- Required textarea with pre-filled value -->\n * <ds-textarea value=\"Default text\" required rows=\"6\">Enter description</ds-textarea>\n *\n * @example\n * <!-- Disabled textarea -->\n * <ds-textarea value=\"Read-only content\" disabled rows=\"3\"></ds-textarea>\n */\nimport BaseComponent from \"./base-component.js\";\nimport { emit } from \"../utils/emit.js\";\n\nclass DsTextarea extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-textarea\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-required\",\n        \"aria-invalid\",\n      ],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n      tokenValidation: {\n        \"aria-invalid\": [\"grammar\", \"false\", \"spelling\", \"true\"],\n      },\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n                \n                textarea[part=\"container\"] {\n                    width: 100%;\n                    padding: var(--ds-form-input-padding);\n                    border: 1px solid var(--ds-form-border-color);\n                    border-radius: var(--ds-form-border-radius);\n                    font-family: var(--ds-font-family-body);\n                    font-size: var(--ds-font-size-base);\n                    line-height: var(--ds-form-line-height);\n                    background-color: var(--ds-form-bg-color);\n                    color: var(--ds-form-text-color);\n                    box-sizing: border-box;\n                    transition: border-color 0.2s ease-in-out;\n                }\n                \n                textarea[part=\"container\"]:focus {\n                    outline: none;\n                    border-color: var(--ds-form-focus-color);\n                    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n                }\n                \n                textarea[part=\"container\"]:disabled {\n                    background-color: var(--ds-form-disabled-bg-color);\n                    color: #6c757d;\n                    cursor: not-allowed;\n                }\n                \n                textarea[part=\"container\"]:read-only {\n                    background-color: var(--ds-form-disabled-bg-color);\n                }\n                \n                /* Variant-specific styles */\n                textarea[part=\"container\"].error {\n                    border-color: var(--ds-textarea-error-border-color, #dc3545);\n                    background-color: var(--ds-textarea-error-background-color, #fff5f5);\n                }\n                \n                textarea[part=\"container\"].success {\n                    border-color: var(--ds-textarea-success-border-color, #28a745);\n                    background-color: var(--ds-textarea-success-background-color, #f0fff4);\n                }\n                \n                /* Size-specific styles */\n                textarea[part=\"container\"].small {\n                    padding: var(--ds-textarea-small-padding, 4px 8px);\n                    font-size: var(--ds-textarea-small-font-size, 14px);\n                }\n                \n                textarea[part=\"container\"].medium {\n                    padding: var(--ds-textarea-medium-padding, 8px 12px);\n                    font-size: var(--ds-textarea-medium-font-size, 16px);\n                }\n                \n                textarea[part=\"container\"].large {\n                    padding: var(--ds-textarea-large-padding, 12px 16px);\n                    font-size: var(--ds-textarea-large-font-size, 18px);\n                }\n            </style>\n            <div class=\"wrapper\">\n                <textarea id=\"textarea\" part=\"container\">\n                    <slot></slot>\n                </textarea>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"textarea\",\n      ariaConfig,\n      events: [\"input\", \"change\", \"focus\", \"blur\"],\n      observedAttributes: [\n        \"value\",\n        \"placeholder\",\n        \"rows\",\n        \"cols\",\n        \"disabled\",\n        \"readonly\",\n        \"required\",\n        \"name\",\n        \"id\",\n        \"variant\",\n        \"size\",\n      ],\n    });\n\n    this.textarea = this.shadowRoot.querySelector(\"textarea\");\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n  }\n\n  // Override test ID generation for textarea-specific logic\n  _generateTestId() {\n    const baseId = \"textarea\";\n    const name = this.getAttribute(\"name\") || \"default\";\n    const rows = this.getAttribute(\"rows\") || \"default\";\n    const isRequired = this.hasAttribute(\"required\") ? \"required\" : \"optional\";\n    const isDisabled = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n\n    return `ds-${baseId}-${name}-${rows}-${isRequired}-${isDisabled}`;\n  }\n\n  static get observedAttributes() {\n    return [\n      \"value\",\n      \"placeholder\",\n      \"rows\",\n      \"cols\",\n      \"disabled\",\n      \"readonly\",\n      \"required\",\n      \"name\",\n      \"id\",\n      \"variant\",\n      \"size\",\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-required\",\n      \"aria-invalid\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n    switch (name) {\n      case \"value\":\n        this.textarea.value = newValue || \"\";\n        break;\n      case \"placeholder\":\n        this.textarea.placeholder = newValue || \"\";\n        break;\n      case \"rows\":\n        this.textarea.rows = newValue || \"\";\n        break;\n      case \"cols\":\n        this.textarea.cols = newValue || \"\";\n        break;\n      case \"disabled\":\n        this.textarea.disabled = this.hasAttribute(\"disabled\");\n        break;\n      case \"readonly\":\n        this.textarea.readOnly = this.hasAttribute(\"readonly\");\n        break;\n      case \"required\":\n        this.textarea.required = this.hasAttribute(\"required\");\n        break;\n      case \"name\":\n        this.textarea.name = newValue || \"\";\n        break;\n      case \"id\":\n        this.textarea.id = newValue || \"\";\n        break;\n      case \"variant\":\n        // Remove existing variant classes\n        this.textarea.classList.remove(\"error\", \"success\");\n        // Add new variant class if specified\n        if (newValue) {\n          this.textarea.classList.add(newValue);\n        }\n        break;\n      case \"size\":\n        // Remove existing size classes\n        this.textarea.classList.remove(\"small\", \"medium\", \"large\");\n        // Add new size class if specified\n        if (newValue) {\n          this.textarea.classList.add(newValue);\n        }\n        break;\n    }\n  }\n\n  get value() {\n    return this.textarea.value;\n  }\n  set value(val) {\n    const v = val ?? \"\";\n    if (this.textarea.value !== v) {\n      this.textarea.value = v;\n    }\n    this.setAttribute(\"value\", v);\n  }\n  get placeholder() {\n    return this.textarea.placeholder;\n  }\n  set placeholder(val) {\n    this.textarea.placeholder = val;\n  }\n  get rows() {\n    return this.textarea.rows;\n  }\n  set rows(val) {\n    this.textarea.rows = val;\n  }\n  get cols() {\n    return this.textarea.cols;\n  }\n  set cols(val) {\n    this.textarea.cols = val;\n  }\n  get disabled() {\n    return this.textarea.disabled;\n  }\n  set disabled(val) {\n    this.textarea.disabled = val;\n  }\n  get readonly() {\n    return this.textarea.readOnly;\n  }\n  set readonly(val) {\n    this.textarea.readOnly = val;\n  }\n  get required() {\n    return this.textarea.required;\n  }\n  set required(val) {\n    this.textarea.required = val;\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    if (!this.hasAttribute(\"tabindex\")) {\n      this.setAttribute(\"tabindex\", \"0\");\n    }\n    this.textarea.addEventListener(\"input\", this._onInput);\n    this.textarea.addEventListener(\"change\", this._onChange);\n    this.textarea.addEventListener(\"focus\", this._onFocus);\n    this.textarea.addEventListener(\"blur\", this._onBlur);\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    this.textarea.removeEventListener(\"input\", this._onInput);\n    this.textarea.removeEventListener(\"change\", this._onChange);\n    this.textarea.removeEventListener(\"focus\", this._onFocus);\n    this.textarea.removeEventListener(\"blur\", this._onBlur);\n  }\n\n  _onInput() {\n    this.dispatchEvent(new Event(\"input\", { bubbles: true, composed: true }));\n    emit(this, \"ds-change\", { value: this.textarea.value });\n  }\n\n  _onChange() {\n    this.dispatchEvent(new Event(\"change\", { bubbles: true, composed: true }));\n  }\n\n  _onFocus() {\n    this.dispatchEvent(new Event(\"focus\", { bubbles: true, composed: true }));\n  }\n\n  _onBlur() {\n    this.dispatchEvent(new Event(\"blur\", { bubbles: true, composed: true }));\n  }\n\n  // Override focus() and blur() to delegate to internal textarea\n  focus() {\n    this.textarea.focus();\n  }\n\n  blur() {\n    this.textarea.blur();\n  }\n  get name() {\n    return this.textarea.name;\n  }\n  set name(val) {\n    this.textarea.name = val;\n  }\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.textarea.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.textarea.removeAttribute(\"aria-label\");\n    } else {\n      this.textarea.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.textarea.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.textarea.removeAttribute(\"aria-describedby\");\n    } else {\n      this.textarea.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  get ariaRequired() {\n    const value = this.textarea.getAttribute(\"aria-required\");\n    return value === null ? null : value;\n  }\n  set ariaRequired(val) {\n    if (val === null || val === undefined) {\n      this.textarea.removeAttribute(\"aria-required\");\n    } else {\n      this.textarea.setAttribute(\"aria-required\", val);\n    }\n  }\n  get ariaInvalid() {\n    const value = this.textarea.getAttribute(\"aria-invalid\");\n    return value === null ? null : value;\n  }\n  set ariaInvalid(val) {\n    if (val === null || val === undefined) {\n      this.textarea.removeAttribute(\"aria-invalid\");\n    } else {\n      this.textarea.setAttribute(\"aria-invalid\", val);\n    }\n  }\n  // Override validateARIA for textarea-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n    const hostAriaLabel = this.getAttribute(\"aria-label\");\n    const hostAriaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const textareaAriaLabel = this.textarea.getAttribute(\"aria-label\");\n    const textareaAriaLabelledBy =\n      this.textarea.getAttribute(\"aria-labelledby\");\n    const hasName =\n      hostAriaLabel ||\n      hostAriaLabelledBy ||\n      textareaAriaLabel ||\n      textareaAriaLabelledBy;\n    if (!hasName) {\n      errors.push(\n        \"Textarea has no accessible name (aria-label or aria-labelledby required)\"\n      );\n    }\n    if (this.textarea.hasAttribute(\"aria-invalid\")) {\n      const val = this.textarea.getAttribute(\"aria-invalid\");\n      if (![\"true\", \"false\", \"grammar\", \"spelling\"].includes(val)) {\n        errors.push(`Invalid aria-invalid value: ${val}`);\n      }\n    }\n    if (this.textarea.hasAttribute(\"aria-describedby\")) {\n      const refError = this.checkAriaReferences(\n        \"aria-describedby\",\n        this.textarea.getAttribute(\"aria-describedby\")\n      );\n      if (refError) errors.push(refError);\n    }\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-textarea\")) {\n  customElements.define(\"ds-textarea\", DsTextarea);\n}\n\n// Export for use in other modules\nexport { DsTextarea };\nexport default DsTextarea;\n", "/**\n * @file ds-select.js\n * @summary A custom Web Component that wraps a native `<select>` element.\n * @description\n * The `ds-select` component provides a styled and functional select dropdown.\n * It supports both single and multiple selection, and can work with both native\n * `<option>` elements and custom `<ds-option>` components.\n *\n * @element ds-select\n * @extends BaseComponent\n *\n * @attr {string} [aria-label] - Accessible name for the select when no associated label is present.\n * @attr {string} [aria-labelledby] - References the ID of an element that provides the accessible name.\n * @attr {string} [aria-describedby] - References the ID of an element that provides additional description.\n * @attr {string} [aria-required] - Indicates whether the select is required (true/false).\n * @attr {string} [aria-invalid] - Indicates whether the select value is invalid (true/false).\n * @attr {string} [aria-expanded] - Indicates whether the dropdown is expanded (true/false).\n * @attr {string} [aria-activedescendant] - References the ID of the currently active option.\n * @attr {string} [aria-controls] - References the ID of an element controlled by this select.\n *\n * @note The select requires an accessible name via aria-label, aria-labelledby, or an associated label element.\n * @note ARIA attributes are automatically validated and warnings are shown for missing accessible names.\n * @note The select element uses `part=\"container\"` for external styling via CSS.\n */\nimport BaseComponent from \"./base-component.js\";\nimport { emit } from \"../utils/emit.js\";\n\nclass DsSelect extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-select\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-required\",\n        \"aria-invalid\",\n        \"aria-expanded\",\n        \"aria-activedescendant\",\n        \"aria-controls\",\n      ],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\n        \"aria-describedby\",\n        \"aria-activedescendant\",\n        \"aria-controls\",\n      ],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n                \n                select[part=\"container\"] {\n                    width: 100%;\n                    padding: var(--ds-form-input-padding);\n                    border: 1px solid var(--ds-form-border-color);\n                    border-radius: var(--ds-form-border-radius);\n                    font-family: var(--ds-font-family-body);\n                    font-size: var(--ds-font-size-base);\n                    line-height: var(--ds-form-line-height);\n                    background-color: var(--ds-form-bg-color);\n                    color: var(--ds-form-text-color);\n                    box-sizing: border-box;\n                    transition: border-color 0.2s ease-in-out;\n                }\n                \n                select[part=\"container\"]:focus {\n                    outline: none;\n                    border-color: var(--ds-form-focus-color);\n                    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n                }\n                \n                select[part=\"container\"]:disabled {\n                    background-color: var(--ds-form-disabled-bg-color);\n                    color: #6c757d;\n                    cursor: not-allowed;\n                }\n            </style>\n            <div class=\"wrapper\">\n                <select id=\"select\" part=\"container\">\n                    <slot></slot>\n                </select>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"select\",\n      ariaConfig,\n      observedAttributes: [\n        \"value\",\n        \"disabled\",\n        \"required\",\n        \"name\",\n        \"multiple\",\n        \"size\",\n      ],\n    });\n\n    this.select = this.shadowRoot.querySelector(\"select\");\n\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n  }\n\n  // Override test ID generation for select-specific logic\n  _generateTestId() {\n    const baseId = \"select\";\n    // Check if component is connected to DOM before accessing attributes\n    if (!this.isConnected) {\n      return `ds-${baseId}-default-single-optional-enabled`;\n    }\n    const name = this.getAttribute(\"name\") || \"default\";\n    const isMultiple = this.hasAttribute(\"multiple\") ? \"multiple\" : \"single\";\n    const isRequired = this.hasAttribute(\"required\") ? \"required\" : \"optional\";\n    const isDisabled = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n\n    return `ds-${baseId}-${name}-${isMultiple}-${isRequired}-${isDisabled}`;\n  }\n\n  static get observedAttributes() {\n    return [\n      \"value\",\n      \"disabled\",\n      \"required\",\n      \"name\",\n      \"multiple\",\n      \"size\",\n      \"class\",\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-required\",\n      \"aria-expanded\",\n      \"aria-activedescendant\",\n      \"aria-controls\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n    switch (name) {\n      case \"value\":\n        if (this.select && this.select.options.length > 0) {\n          this.select.value = newValue || \"\";\n        }\n        break;\n      case \"disabled\":\n        this.select.disabled = this.hasAttribute(\"disabled\");\n        break;\n      case \"required\":\n        this.select.required = this.hasAttribute(\"required\");\n        break;\n      case \"name\":\n        this.select.name = newValue || \"\";\n        break;\n      case \"multiple\":\n        this.select.multiple = this.hasAttribute(\"multiple\");\n        break;\n      case \"size\":\n        this.select.size = newValue || \"\";\n        break;\n    }\n  }\n\n  get value() {\n    return this.select.value;\n  }\n  set value(val) {\n    const v = val ?? \"\";\n    if (this.select.value !== v) {\n      this.select.value = v;\n    }\n    this.setAttribute(\"value\", v);\n  }\n\n  get disabled() {\n    return this.select.disabled;\n  }\n  set disabled(val) {\n    this.select.disabled = val;\n  }\n\n  get required() {\n    return this.select.required;\n  }\n  set required(val) {\n    this.select.required = val;\n  }\n\n  get name() {\n    return this.select.name;\n  }\n  set name(val) {\n    this.select.name = val;\n  }\n\n  get multiple() {\n    return this.select.multiple;\n  }\n  set multiple(val) {\n    this.select.multiple = val;\n  }\n\n  get size() {\n    return this.select.size;\n  }\n  set size(val) {\n    this.select.size = val;\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    if (!this.hasAttribute(\"tabindex\")) {\n      this.setAttribute(\"tabindex\", \"0\");\n    }\n    this.select.addEventListener(\"input\", this._onInput);\n    this.select.addEventListener(\"change\", this._onChange);\n    this.select.addEventListener(\"focus\", this._onFocus);\n    this.select.addEventListener(\"blur\", this._onBlur);\n\n    // Validate accessible name\n    this._validateAccessibleName();\n  }\n\n  /**\n   * Validate accessible name for the select\n   */\n  _validateAccessibleName() {\n    const ariaLabel = this.getAttribute(\"aria-label\");\n    const ariaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const hasAssociatedLabel = this._hasAssociatedLabel();\n\n    // Check if we have an accessible name\n    if (!ariaLabel && !ariaLabelledBy && !hasAssociatedLabel) {\n      console.warn(\n        `[${this.constructor.name}] Select has no accessible name. Provide aria-label, aria-labelledby, or associate with a label element.`\n      );\n    }\n\n    // Validate aria-labelledby references\n    if (ariaLabelledBy) {\n      const ids = ariaLabelledBy.split(/\\s+/);\n      for (const id of ids) {\n        if (!document.getElementById(id)) {\n          console.warn(\n            `[${this.constructor.name}] Element referenced by aria-labelledby ('${id}') does not exist in the document.`\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if the select has an associated label\n   */\n  _hasAssociatedLabel() {\n    const id = this.getAttribute(\"id\");\n    if (id) {\n      // Check for label with 'for' attribute\n      const label = document.querySelector(`label[for=\"${id}\"]`);\n      if (label && label.textContent.trim()) {\n        return true;\n      }\n    }\n\n    // Check for label as parent or sibling\n    const parentLabel = this.closest(\"label\");\n    if (parentLabel && parentLabel.textContent.trim()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    this.select.removeEventListener(\"input\", this._onInput);\n    this.select.removeEventListener(\"change\", this._onChange);\n    this.select.removeEventListener(\"focus\", this._onFocus);\n    this.select.removeEventListener(\"blur\", this._onBlur);\n  }\n\n  _onInput() {\n    this.dispatchEvent(new Event(\"input\", { bubbles: true, composed: true }));\n    emit(this, \"ds-change\", { value: this.select.value });\n  }\n\n  _onChange() {\n    this.dispatchEvent(new Event(\"change\", { bubbles: true, composed: true }));\n  }\n\n  _onFocus() {\n    this.dispatchEvent(new Event(\"focus\", { bubbles: true, composed: true }));\n  }\n\n  _onBlur() {\n    this.dispatchEvent(new Event(\"blur\", { bubbles: true, composed: true }));\n  }\n\n  // Override focus() and blur() to delegate to internal select\n  focus() {\n    this.select.focus();\n  }\n\n  blur() {\n    this.select.blur();\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-select\")) {\n  customElements.define(\"ds-select\", DsSelect);\n}\n\n// Export for use in other modules\nexport { DsSelect };\nexport default DsSelect;\n", "/**\n * @file ds-option.js\n * @summary A custom Web Component that wraps a native `<option>` element.\n * @description\n * The `ds-option` component provides a styled and functional option element\n * for use within `<ds-select>` components. It maintains proper option behavior\n * and can be used as an alternative to native `<option>` elements.\n *\n * @element ds-option\n * @extends BaseComponent\n *\n * @attr {string} value - The value of the option when selected.\n * @attr {boolean} disabled - If present, the option cannot be selected.\n * @attr {boolean} selected - If present, the option is pre-selected.\n *\n * @property {string} value - Gets or sets the value of the option.\n * @property {boolean} selected - Gets or sets the selected state of the option.\n * @property {boolean} disabled - Gets or sets the disabled state of the option.\n *\n * @fires change - Fired when the option selection changes.\n *\n * @slot - Renders the option text content.\n *\n * @example\n * <!-- Basic option -->\n * <ds-option value=\"option1\">Option 1</ds-option>\n *\n * @example\n * <!-- Pre-selected option -->\n * <ds-option value=\"default\" selected>Default Option</ds-option>\n *\n * @example\n * <!-- Disabled option -->\n * <ds-option value=\"disabled\" disabled>Disabled Option</ds-option>\n *\n * @example\n * <!-- Usage within ds-select -->\n * <ds-select name=\"category\">\n *   <ds-option value=\"electronics\">Electronics</ds-option>\n *   <ds-option value=\"clothing\">Clothing</ds-option>\n *   <ds-option value=\"books\">Books</ds-option>\n * </ds-select>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsOption extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-option\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\"aria-label\", \"aria-describedby\"],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: none; /* Hidden by default, shown when slotted into select */\n                }\n                \n                option[part=\"container\"] {\n                    padding: var(--ds-spacing-xs);\n                }\n            </style>\n            <div>\n                <option part=\"container\">\n                    <slot></slot>\n                </option>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"option\",\n      ariaConfig,\n      events: [],\n      observedAttributes: [\"value\", \"disabled\", \"selected\"],\n    });\n\n    this.option = this.shadowRoot.querySelector(\"option\");\n  }\n\n  // Override test ID generation for option-specific logic\n  _generateTestId() {\n    const baseId = \"option\";\n    const value = this.getAttribute(\"value\") || \"default\";\n    const isSelected = this.hasAttribute(\"selected\")\n      ? \"selected\"\n      : \"unselected\";\n    const isDisabled = this.hasAttribute(\"disabled\") ? \"disabled\" : \"enabled\";\n    const ariaLabel = this.getAttribute(\"aria-label\") || \"default\";\n\n    return `ds-${baseId}-${value}-${isSelected}-${isDisabled}-${ariaLabel}`;\n  }\n\n  static get observedAttributes() {\n    return [\"value\", \"disabled\", \"selected\", \"aria-label\", \"aria-describedby\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n    switch (name) {\n      case \"value\":\n        this.option.value = newValue || \"\";\n        break;\n      case \"disabled\":\n        this.option.disabled = this.hasAttribute(\"disabled\");\n        break;\n      case \"selected\":\n        this.option.selected = this.hasAttribute(\"selected\");\n        break;\n    }\n  }\n  get value() {\n    return this.option.value;\n  }\n  set value(val) {\n    this.option.value = val;\n  }\n  get selected() {\n    return this.option.selected;\n  }\n  set selected(val) {\n    this.option.selected = val;\n  }\n  get disabled() {\n    return this.option.disabled;\n  }\n  set disabled(val) {\n    this.option.disabled = val;\n  }\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.option.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.option.removeAttribute(\"aria-label\");\n    } else {\n      this.option.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.option.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.option.removeAttribute(\"aria-describedby\");\n    } else {\n      this.option.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  // Override validateARIA for option-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n    // Accessible name check: must have text or aria-label\n    const optionText = this.textContent.trim();\n    const ariaLabel = this.option.getAttribute(\"aria-label\");\n    if (!optionText && !ariaLabel) {\n      errors.push(\n        \"Option has no accessible name (text or aria-label required)\"\n      );\n    }\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-option\")) {\n  customElements.define(\"ds-option\", DsOption);\n}\n\n// Export for use in other modules\nexport { DsOption };\nexport default DsOption;\n", "/**\n * @file ds-label.js\n * @summary A custom Web Component that wraps a native `<label>` element.\n * @description\n * The `ds-label` component provides a styled and functional label element\n * for associating text with form controls. It supports the `for` attribute\n * to create explicit associations with form elements.\n *\n * - The content inside `<ds-label>...</ds-label>` is rendered via the default slot as the label text.\n * - Supports the `for` attribute to associate the label with a form control by ID (like native `<label>`).\n * - Supports ARIA attributes: `aria-label`, `aria-describedby` for accessibility.\n * - Uses `part=\"container\"` for styling via Shadow DOM.\n * - Fires a `click` event when the label is clicked (native label behavior).\n * - Warns in the console if no accessible name is provided, or if `for` references a missing element.\n *\n * @element ds-label\n *\n * @slot - Renders the label text content.\n *\n * @attr {string} for - The ID of the form control this label is associated with.\n * @attr {string} aria-label - Accessible label for the label element (overrides text content).\n * @attr {string} aria-describedby - Reference to element(s) describing the label.\n *\n * @property {string} htmlFor - Gets or sets the ID of the associated form control.\n *\n * @fires click - Fired when the label is clicked.\n *\n * @note Uses `part=\"container\"` for styling via Shadow DOM.\n * @note Warns if no accessible name (text or `aria-label`) is provided, or if `for` references a missing element.\n *\n * @example\n * <!-- Basic label -->\n * <ds-label>Username</ds-label>\n *\n * @example\n * <!-- Label with explicit association -->\n * <ds-label for=\"username-input\">Username</ds-label>\n * <ds-text-input id=\"username-input\"></ds-text-input>\n *\n * @example\n * <!-- Label with form control -->\n * <ds-label for=\"email-field\">Email Address</ds-label>\n * <ds-text-input type=\"email\" id=\"email-field\" required></ds-text-input>\n *\n * @example\n * <!-- Label with checkbox -->\n * <ds-label for=\"agree-terms\">I agree to the terms and conditions</ds-label>\n * <ds-checkbox id=\"agree-terms\" name=\"agree\" value=\"yes\"></ds-checkbox>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsLabel extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-label\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\"aria-label\", \"aria-describedby\"],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n                \n                label[part=\"container\"] {\n                    display: block;\n                    margin-bottom: var(--ds-spacing-xs);\n                    font-weight: 500;\n                    color: var(--ds-form-text-color);\n                }\n            </style>\n            <div class=\"wrapper\">\n                <label part=\"container\">\n                    <slot></slot>\n                </label>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"label\",\n      ariaConfig,\n      events: [\"click\"],\n      observedAttributes: [\"for\"],\n    });\n\n    this.label = this.shadowRoot.querySelector(\"label\");\n  }\n\n  // Override test ID generation for label-specific logic\n  _generateTestId() {\n    const baseId = \"label\";\n    const hasFor = this.getAttribute(\"for\") ? \"with-for\" : \"no-for\";\n    const ariaLabel = this.getAttribute(\"aria-label\") || \"default\";\n    const ariaDescribedBy = this.getAttribute(\"aria-describedby\") || \"default\";\n\n    return `ds-${baseId}-${hasFor}-${ariaLabel}-${ariaDescribedBy}`;\n  }\n\n  static get observedAttributes() {\n    return [\"for\", \"aria-label\", \"aria-describedby\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n    switch (name) {\n      case \"for\":\n        this.label.setAttribute(\"for\", newValue || \"\");\n        break;\n    }\n  }\n\n  get htmlFor() {\n    return this.label.htmlFor;\n  }\n  set htmlFor(val) {\n    this.label.htmlFor = val;\n  }\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.label.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.label.removeAttribute(\"aria-label\");\n    } else {\n      this.label.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.label.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.label.removeAttribute(\"aria-describedby\");\n    } else {\n      this.label.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  // Override validateARIA for label-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n    // Check for accessible association\n    const forAttr = this.label.getAttribute(\"for\");\n    if (forAttr && !document.getElementById(forAttr)) {\n      errors.push(\n        `Label 'for' attribute references missing element: ${forAttr}`\n      );\n    }\n    // Accessible name check\n    const labelText = this.textContent.trim();\n    const ariaLabel = this.label.getAttribute(\"aria-label\");\n    if (!labelText && !ariaLabel) {\n      errors.push(\"Label has no accessible name (text or aria-label required)\");\n    }\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-label\")) {\n  customElements.define(\"ds-label\", DsLabel);\n}\n\n// Export for use in other modules\nexport { DsLabel };\nexport default DsLabel;\n", "/**\n * @file ds-fieldset.js\n * @summary A custom Web Component that wraps a native `<fieldset>` element.\n * @description\n * The `ds-fieldset` component provides a styled and functional fieldset element\n * for grouping related form controls together. It creates a visual and semantic\n * grouping that improves form organization and accessibility.\n *\n * - The content inside `<ds-fieldset>...</ds-fieldset>` is rendered via the default slot as the fieldset content.\n * - Should contain a `<ds-legend>` or native `<legend>` as the first child for accessibility.\n * - Supports ARIA attributes: `aria-label`, `aria-describedby` for accessibility.\n * - Uses `part=\"container\"` for styling via Shadow DOM.\n * - Warns in the console if no accessible name (legend or `aria-label`) is provided.\n * - No custom events are fired.\n *\n * @element ds-fieldset\n *\n * @slot - Renders form controls and other content within the fieldset.\n *\n * @attr {string} aria-label - Accessible label for the fieldset element (overrides legend).\n * @attr {string} aria-describedby - Reference to element(s) describing the fieldset.\n *\n * @note Uses `part=\"container\"` for styling via Shadow DOM.\n * @note Warns if no accessible name (legend or `aria-label`) is provided.\n * @note Should contain a `<ds-legend>` or `<legend>` as the first child for correct semantics and accessibility.\n *\n * @example\n * <!-- Basic fieldset -->\n * <ds-fieldset>\n *   <ds-legend>Personal Information</ds-legend>\n *   <ds-label for=\"first-name\">First Name</ds-label>\n *   <ds-text-input id=\"first-name\" name=\"firstName\"></ds-text-input>\n *   <ds-label for=\"last-name\">Last Name</ds-label>\n *   <ds-text-input id=\"last-name\" name=\"lastName\"></ds-text-input>\n * </ds-fieldset>\n *\n * @example\n * <!-- Fieldset with radio buttons -->\n * <ds-fieldset>\n *   <ds-legend>Gender</ds-legend>\n *   <ds-radio name=\"gender\" value=\"male\" id=\"male\">Male</ds-radio>\n *   <ds-radio name=\"gender\" value=\"female\" id=\"female\">Female</ds-radio>\n *   <ds-radio name=\"gender\" value=\"other\" id=\"other\">Other</ds-radio>\n * </ds-fieldset>\n *\n * @example\n * <!-- Fieldset with checkboxes -->\n * <ds-fieldset>\n *   <ds-legend>Interests</ds-legend>\n *   <ds-checkbox name=\"interests\" value=\"sports\" id=\"sports\">Sports</ds-checkbox>\n *   <ds-checkbox name=\"interests\" value=\"music\" id=\"music\">Music</ds-checkbox>\n *   <ds-checkbox name=\"interests\" value=\"reading\" id=\"reading\">Reading</ds-checkbox>\n * </ds-fieldset>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsFieldset extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-fieldset\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\"aria-label\", \"aria-describedby\"],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n                \n                fieldset[part=\"container\"] {\n                    border: 1px solid var(--ds-form-border-color);\n                    border-radius: var(--ds-form-border-radius);\n                    padding: var(--ds-spacing-md);\n                    margin: var(--ds-spacing-md) 0;\n                }\n            </style>\n            <div class=\"wrapper\">\n                <fieldset part=\"container\">\n                    <slot></slot>\n                </fieldset>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"fieldset\",\n      ariaConfig,\n      events: [],\n      observedAttributes: [],\n    });\n\n    this.fieldset = this.shadowRoot.querySelector(\"fieldset\");\n  }\n\n  static get observedAttributes() {\n    return [\"aria-label\", \"aria-describedby\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n  }\n\n  // Override test ID generation for fieldset-specific logic\n  _generateTestId() {\n    const baseId = \"fieldset\";\n    const hasLegend = this.fieldset.querySelector(\"legend,ds-legend\")\n      ? \"with-legend\"\n      : \"no-legend\";\n    const ariaLabel = this.getAttribute(\"aria-label\") || \"default\";\n    const ariaDescribedBy = this.getAttribute(\"aria-describedby\") || \"default\";\n\n    return `ds-${baseId}-${hasLegend}-${ariaLabel}-${ariaDescribedBy}`;\n  }\n\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.fieldset.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.fieldset.removeAttribute(\"aria-label\");\n    } else {\n      this.fieldset.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.fieldset.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.fieldset.removeAttribute(\"aria-describedby\");\n    } else {\n      this.fieldset.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  // Override validateARIA for fieldset-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n    // Accessible name check: must have a legend or aria-label\n    const legend = this.fieldset.querySelector(\"legend,ds-legend\");\n    const ariaLabel = this.fieldset.getAttribute(\"aria-label\");\n    if (!legend && !ariaLabel) {\n      errors.push(\n        \"Fieldset has no accessible name (legend or aria-label required)\"\n      );\n    }\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-fieldset\")) {\n  customElements.define(\"ds-fieldset\", DsFieldset);\n}\n\n// Export for use in other modules\nexport { DsFieldset };\nexport default DsFieldset;\n", "/**\n * @file ds-legend.js\n * @summary A custom Web Component that wraps a native `<legend>` element.\n * @description\n * The `ds-legend` component provides a styled and functional legend element\n * for providing a caption or title for a fieldset. It should be used within\n * `<ds-fieldset>` components to describe the group of form controls.\n *\n * - The content inside `<ds-legend>...</ds-legend>` is rendered via the default slot as the legend text.\n * - Should be used as the first child of a `<ds-fieldset>` for proper semantics.\n * - Supports ARIA attributes: `aria-label`, `aria-describedby` for accessibility.\n * - Uses `part=\"container\"` for styling via Shadow DOM.\n * - Warns in the console if no accessible name (text or `aria-label`) is provided.\n * - No custom events are fired.\n *\n * @element ds-legend\n *\n * @slot - Renders the legend text content.\n *\n * @attr {string} aria-label - Accessible label for the legend element (overrides text content).\n * @attr {string} aria-describedby - Reference to element(s) describing the legend.\n *\n * @note Uses `part=\"container\"` for styling via Shadow DOM.\n * @note Warns if no accessible name (text or `aria-label`) is provided.\n * @note Should be used as the first child of a `<ds-fieldset>` for correct semantics.\n *\n * @example\n * <!-- Basic legend within fieldset -->\n * <ds-fieldset>\n *   <ds-legend>Contact Information</ds-legend>\n *   <ds-label for=\"email\">Email</ds-label>\n *   <ds-text-input type=\"email\" id=\"email\" name=\"email\"></ds-text-input>\n * </ds-fieldset>\n *\n * @example\n * <!-- Legend with form controls -->\n * <ds-fieldset>\n *   <ds-legend>Shipping Address</ds-legend>\n *   <ds-label for=\"street\">Street Address</ds-label>\n *   <ds-text-input id=\"street\" name=\"street\"></ds-text-input>\n *   <ds-label for=\"city\">City</ds-label>\n *   <ds-text-input id=\"city\" name=\"city\"></ds-text-input>\n *   <ds-label for=\"zip\">ZIP Code</ds-label>\n *   <ds-text-input id=\"zip\" name=\"zip\"></ds-text-input>\n * </ds-fieldset>\n *\n * @example\n * <!-- Legend with radio button group -->\n * <ds-fieldset>\n *   <ds-legend>Preferred Contact Method</ds-legend>\n *   <ds-radio name=\"contact\" value=\"email\" id=\"contact-email\">Email</ds-radio>\n *   <ds-radio name=\"contact\" value=\"phone\" id=\"contact-phone\">Phone</ds-radio>\n *   <ds-radio name=\"contact\" value=\"mail\" id=\"contact-mail\">Mail</ds-radio>\n * </ds-fieldset>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsLegend extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-legend\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\"aria-label\", \"aria-describedby\"],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n                \n                legend[part=\"container\"] {\n                    padding: 0 var(--ds-spacing-xs);\n                    font-weight: 600;\n                    color: var(--ds-form-text-color);\n                }\n            </style>\n            <div class=\"wrapper\">\n                <legend part=\"container\">\n                    <slot></slot>\n                </legend>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"legend\",\n      ariaConfig,\n      events: [],\n      observedAttributes: [],\n    });\n\n    this.legend = this.shadowRoot.querySelector(\"legend\");\n  }\n\n  // Override test ID generation for legend-specific logic\n  _generateTestId() {\n    const baseId = \"legend\";\n    const ariaLabel = this.getAttribute(\"aria-label\") || \"default\";\n    const ariaDescribedBy = this.getAttribute(\"aria-describedby\") || \"default\";\n\n    return `ds-${baseId}-${ariaLabel}-${ariaDescribedBy}`;\n  }\n\n  static get observedAttributes() {\n    return [\"aria-label\", \"aria-describedby\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n  }\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.legend.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.legend.removeAttribute(\"aria-label\");\n    } else {\n      this.legend.setAttribute(\"aria-label\", val);\n    }\n  }\n  get ariaDescribedBy() {\n    const value = this.legend.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.legend.removeAttribute(\"aria-describedby\");\n    } else {\n      this.legend.setAttribute(\"aria-describedby\", val);\n    }\n  }\n  // Override validateARIA for legend-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n    // Accessible name check: must have text or aria-label\n    const legendText = this.textContent.trim();\n    const ariaLabel = this.legend.getAttribute(\"aria-label\");\n    if (!legendText && !ariaLabel) {\n      errors.push(\n        \"Legend has no accessible name (text or aria-label required)\"\n      );\n    }\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-legend\")) {\n  customElements.define(\"ds-legend\", DsLegend);\n}\n\n// Export for use in other modules\nexport { DsLegend };\nexport default DsLegend;\n", "/**\n * @file ds-form.js\n * @summary A custom Web Component that wraps a native `<form>` element with enhanced ARIA support.\n * @description\n * The `ds-form` component provides a styled and functional form element with enhanced\n * accessibility features, validation support, and error state management. It wraps a\n * native form element to maintain full HTML form semantics while adding design system\n * styling and ARIA compliance features.\n *\n * @element ds-form\n * @extends BaseComponent\n *\n * @slot - Renders form controls and other content within the form.\n *\n * @example\n * <!-- Basic form -->\n * <ds-form action=\"/api/login\" method=\"post\">\n *   <ds-fieldset>\n *     <ds-legend>Login Information</ds-legend>\n *     <ds-label for=\"username\">Username</ds-label>\n *     <ds-text-input id=\"username\" name=\"username\" required></ds-text-input>\n *     <ds-label for=\"password\">Password</ds-label>\n *     <ds-text-input id=\"password\" name=\"password\" type=\"password\" required></ds-text-input>\n *   </ds-fieldset>\n *   <ds-button type=\"submit\">Login</ds-button>\n * </ds-form>\n *\n * @example\n * <!-- Form with ARIA attributes -->\n * <ds-form\n *   action=\"/api/register\"\n *   method=\"post\"\n *   aria-label=\"User registration form\"\n *   aria-describedby=\"form-instructions\">\n *   <div id=\"form-instructions\">Please fill out all required fields marked with an asterisk (*)</div>\n *   <ds-fieldset>\n *     <ds-legend>Personal Information</ds-legend>\n *     <ds-label for=\"firstName\">First Name *</ds-label>\n *     <ds-text-input id=\"firstName\" name=\"firstName\" required></ds-text-input>\n *   </ds-fieldset>\n *   <ds-button type=\"submit\">Register</ds-button>\n * </ds-form>\n *\n * @example\n * <!-- Form with custom validation -->\n * <ds-form\n *   action=\"/api/contact\"\n *   method=\"post\"\n *   novalidate\n *   data-validation=\"custom\">\n *   <ds-fieldset>\n *     <ds-legend>Contact Information</ds-legend>\n *     <ds-label for=\"email\">Email Address</ds-label>\n *     <ds-text-input id=\"email\" name=\"email\" type=\"email\" required></ds-text-input>\n *   </ds-fieldset>\n *   <ds-button type=\"submit\">Send Message</ds-button>\n * </ds-form>\n */\nimport BaseComponent from \"./base-component.js\";\n\nclass DsForm extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-form\n    const ariaConfig = {\n      staticAriaAttributes: {\n        role: \"form\",\n      },\n      dynamicAriaAttributes: [\n        \"aria-label\",\n        \"aria-describedby\",\n        \"aria-labelledby\",\n      ],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\", \"aria-labelledby\"],\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .form-wrapper {\n                    width: 100%;\n                }\n                \n                form[part=\"container\"] {\n                    width: 100%;\n                }\n                \n                .live-region[part=\"live-region\"] {\n                    position: absolute;\n                    left: -10000px;\n                    width: 1px;\n                    height: 1px;\n                    overflow: hidden;\n                }\n                \n                .live-region[part=\"live-region\"]:not([hidden]) {\n                    position: static;\n                    width: auto;\n                    height: auto;\n                    margin-top: var(--ds-spacing-sm);\n                    padding: var(--ds-spacing-sm);\n                    border-radius: var(--ds-form-border-radius);\n                    font-size: 0.9em;\n                }\n                \n                .live-region[part=\"live-region\"][data-type=\"error\"] {\n                    background-color: var(--ds-form-error-background);\n                    color: var(--ds-form-error-color);\n                    border: 1px solid var(--ds-form-error-border);\n                }\n                \n                .live-region[part=\"live-region\"][data-type=\"success\"] {\n                    background-color: var(--ds-form-success-background, #d4edda);\n                    color: var(--ds-form-success-color, #155724);\n                    border: 1px solid var(--ds-form-success-border, #c3e6cb);\n                }\n                \n                .live-region[part=\"live-region\"][data-type=\"info\"] {\n                    background-color: var(--ds-form-info-background, #d1ecf1);\n                    color: var(--ds-form-info-color, #0c5460);\n                    border: 1px solid var(--ds-form-info-border, #bee5eb);\n                }\n            </style>\n            <div class=\"form-wrapper\">\n                <form part=\"container\" novalidate>\n                    <slot></slot>\n                </form>\n                <div \n                    part=\"live-region\" \n                    class=\"live-region\"\n                    aria-live=\"polite\" \n                    aria-atomic=\"true\" \n                    hidden>\n                </div>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"form\",\n      ariaConfig,\n      events: [\"submit\", \"reset\", \"input\", \"change\", \"invalid\"],\n    });\n\n    this.form = this.shadowRoot.querySelector(\"form\");\n    this.liveRegion = this.shadowRoot.querySelector('[part=\"live-region\"]');\n\n    // Form state tracking\n    this.formState = {\n      submitted: false,\n      valid: true,\n      errors: new Map(),\n      hasValidationErrors: false,\n    };\n\n    // Setup form event handlers\n    this.setupFormHandlers();\n  }\n\n  // Override test ID generation for form-specific logic\n  _generateTestId() {\n    const baseId = \"form\";\n    const method = this.getAttribute(\"method\") || \"get\";\n    const hasAction = this.getAttribute(\"action\") ? \"with-action\" : \"no-action\";\n    const ariaLabel = this.getAttribute(\"aria-label\") || \"default\";\n    const ariaDescribedBy = this.getAttribute(\"aria-describedby\") || \"default\";\n\n    return `ds-${baseId}-${method}-${hasAction}-${ariaLabel}-${ariaDescribedBy}`;\n  }\n\n  static get observedAttributes() {\n    return [\n      \"action\",\n      \"method\",\n      \"enctype\",\n      \"target\",\n      \"novalidate\",\n      \"autocomplete\",\n      \"aria-label\",\n      \"aria-describedby\",\n      \"aria-labelledby\",\n    ];\n  }\n\n  /**\n   * Sets up form event handlers for validation and accessibility\n   */\n  setupFormHandlers() {\n    // Handle form submission\n    this.form.addEventListener(\"submit\", (event) => {\n      this.handleFormSubmit(event);\n    });\n\n    // Handle form reset\n    this.form.addEventListener(\"reset\", (event) => {\n      this.handleFormReset(event);\n    });\n\n    // Handle input changes for real-time validation feedback\n    this.form.addEventListener(\"input\", (event) => {\n      this.handleInputChange(event);\n    });\n\n    // Handle invalid events for custom validation\n    this.form.addEventListener(\"invalid\", (event) => {\n      this.handleInvalidEvent(event);\n    });\n\n    // Handle change events for form state tracking\n    this.form.addEventListener(\"change\", (event) => {\n      this.handleFormChange(event);\n    });\n  }\n\n  /**\n   * Handles form submission with validation and accessibility support\n   * @param {Event} event - The submit event\n   */\n  handleFormSubmit(event) {\n    this.formState.submitted = true;\n\n    // Check if form is valid using our custom validation\n    const formControls = this.querySelectorAll(\n      \"input, select, textarea, ds-text-input, ds-select, ds-textarea, ds-checkbox, ds-radio\"\n    );\n    let hasErrors = false;\n\n    formControls.forEach((control) => {\n      if (control.hasAttribute(\"required\")) {\n        const value = control.value || \"\";\n        if (!value.trim()) {\n          hasErrors = true;\n          this.validateInput(control);\n        }\n      }\n    });\n\n    if (hasErrors) {\n      event.preventDefault();\n      this.handleValidationErrors();\n      return;\n    }\n\n    // Form is valid, allow submission\n    this.clearLiveRegion();\n    this.announceToScreenReader(\"Form submitted successfully\");\n  }\n\n  /**\n   * Handles form reset\n   * @param {Event} event - The reset event\n   */\n  handleFormReset() {\n    this.formState = {\n      submitted: false,\n      valid: true,\n      errors: new Map(),\n      hasValidationErrors: false,\n    };\n\n    this.clearLiveRegion();\n    this.announceToScreenReader(\"Form has been reset\");\n  }\n\n  /**\n   * Handles input changes for real-time validation\n   * @param {Event} event - The input event\n   */\n  handleInputChange(event) {\n    const input = event.target;\n\n    // Clear previous error for this input\n    if (this.formState.errors.has(input)) {\n      this.formState.errors.delete(input);\n      this.updateLiveRegion();\n    }\n\n    // If form was previously submitted, validate on input change\n    if (this.formState.submitted) {\n      this.validateInput(input);\n    }\n  }\n\n  /**\n   * Handles invalid events for custom validation\n   * @param {Event} event - The invalid event\n   */\n  handleInvalidEvent(event) {\n    event.preventDefault();\n    this.validateInput(event.target);\n  }\n\n  /**\n   * Handles form change events\n   * @param {Event} event - The change event\n   */\n  handleFormChange() {\n    // Track form state changes\n    this.updateFormValidity();\n  }\n\n  /**\n   * Validates a single input element\n   * @param {HTMLElement} input - The input element to validate\n   */\n  validateInput(input) {\n    let isValid = true;\n    let errorMessage = \"\";\n\n    // Handle different types of inputs\n    if (input.checkValidity) {\n      // Native form elements\n      isValid = input.checkValidity();\n      errorMessage = input.validationMessage || \"This field is invalid\";\n    } else if (input.tagName && input.tagName.toLowerCase().includes(\"ds-\")) {\n      // Design system components\n      const required = input.hasAttribute(\"required\");\n      const value = input.value || \"\";\n\n      if (required && !value.trim()) {\n        isValid = false;\n        errorMessage = \"This field is required\";\n      } else if (input.type === \"email\" && value) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(value)) {\n          isValid = false;\n          errorMessage = \"Please enter a valid email address\";\n        }\n      }\n    }\n\n    if (!isValid) {\n      this.formState.errors.set(input, errorMessage);\n      this.formState.hasValidationErrors = true;\n    } else {\n      this.formState.errors.delete(input);\n    }\n\n    this.updateFormValidity();\n    this.updateLiveRegion();\n  }\n\n  /**\n   * Updates the overall form validity state\n   */\n  updateFormValidity() {\n    this.formState.valid = this.form.checkValidity();\n\n    // Update ARIA attributes based on form state\n    if (this.formState.hasValidationErrors) {\n      this.form.setAttribute(\"aria-invalid\", \"true\");\n    } else {\n      this.form.removeAttribute(\"aria-invalid\");\n    }\n  }\n\n  /**\n   * Handles validation errors and announces them to screen readers\n   */\n  handleValidationErrors() {\n    this.formState.hasValidationErrors = true;\n    this.formState.valid = false;\n\n    // Collect all error messages\n    const errorMessages = Array.from(this.formState.errors.values());\n\n    if (errorMessages.length > 0) {\n      const errorText = `Form has ${errorMessages.length} validation error${\n        errorMessages.length > 1 ? \"s\" : \"\"\n      }: ${errorMessages.join(\". \")}`;\n      this.announceToScreenReader(errorText, \"error\");\n    }\n\n    this.updateLiveRegion();\n  }\n\n  /**\n   * Updates the live region with current form state\n   */\n  updateLiveRegion() {\n    if (this.formState.errors.size === 0) {\n      this.clearLiveRegion();\n      return;\n    }\n\n    const errorMessages = Array.from(this.formState.errors.values());\n    const errorText = errorMessages.join(\". \");\n\n    this.liveRegion.textContent = errorText;\n    this.liveRegion.setAttribute(\"data-type\", \"error\");\n    this.liveRegion.hidden = false;\n  }\n\n  /**\n   * Clears the live region\n   */\n  clearLiveRegion() {\n    this.liveRegion.textContent = \"\";\n    this.liveRegion.hidden = true;\n    this.liveRegion.removeAttribute(\"data-type\");\n  }\n\n  /**\n   * Announces a message to screen readers\n   * @param {string} message - The message to announce\n   * @param {string} type - The type of message (error, success, info)\n   */\n  announceToScreenReader(message, type = \"info\") {\n    this.liveRegion.textContent = message;\n    this.liveRegion.setAttribute(\"data-type\", type);\n    this.liveRegion.hidden = false;\n\n    // Hide the message after a delay\n    setTimeout(() => {\n      this.clearLiveRegion();\n    }, 5000);\n  }\n\n  // Form attribute accessors\n  get action() {\n    return this.form.action;\n  }\n  set action(val) {\n    this.form.action = val;\n  }\n\n  get method() {\n    return this.form.method;\n  }\n  set method(val) {\n    this.form.method = val;\n  }\n\n  get enctype() {\n    return this.form.enctype;\n  }\n  set enctype(val) {\n    this.form.enctype = val;\n  }\n\n  get target() {\n    return this.form.target;\n  }\n  set target(val) {\n    this.form.target = val;\n  }\n\n  get novalidate() {\n    return this.form.hasAttribute(\"novalidate\");\n  }\n  set novalidate(val) {\n    if (val) {\n      this.form.setAttribute(\"novalidate\", \"\");\n    } else {\n      this.form.removeAttribute(\"novalidate\");\n    }\n  }\n\n  get autocomplete() {\n    return this.form.autocomplete;\n  }\n  set autocomplete(val) {\n    this.form.autocomplete = val;\n  }\n\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.form.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.form.removeAttribute(\"aria-label\");\n    } else {\n      this.form.setAttribute(\"aria-label\", val);\n    }\n  }\n\n  get ariaDescribedBy() {\n    const value = this.form.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.form.removeAttribute(\"aria-describedby\");\n    } else {\n      this.form.setAttribute(\"aria-describedby\", val);\n    }\n  }\n\n  get ariaLabelledBy() {\n    const value = this.form.getAttribute(\"aria-labelledby\");\n    return value === null ? null : value;\n  }\n  set ariaLabelledBy(val) {\n    if (val === null || val === undefined) {\n      this.form.removeAttribute(\"aria-labelledby\");\n    } else {\n      this.form.setAttribute(\"aria-labelledby\", val);\n    }\n  }\n\n  /**\n   * Submits the form programmatically\n   */\n  submit() {\n    this.form.submit();\n  }\n\n  /**\n   * Resets the form programmatically\n   */\n  reset() {\n    this.form.reset();\n    this.handleFormReset(new Event(\"reset\"));\n  }\n\n  /**\n   * Checks if the form is valid\n   * @returns {boolean} True if the form is valid\n   */\n  checkValidity() {\n    return this.form.checkValidity();\n  }\n\n  /**\n   * Reports validity of the form\n   * @returns {boolean} True if the form is valid\n   */\n  reportValidity() {\n    return this.form.reportValidity();\n  }\n\n  /**\n   * Gets form data as FormData object\n   * @returns {FormData} The form data\n   */\n  getFormData() {\n    const formData = new FormData();\n\n    // Get all form controls (native and custom)\n    const formControls = this.querySelectorAll(\n      \"input, select, textarea, ds-text-input, ds-select, ds-textarea, ds-checkbox, ds-radio\"\n    );\n\n    formControls.forEach((control) => {\n      const name = control.name || control.getAttribute(\"name\");\n      if (!name) return;\n\n      let value = \"\";\n      let isCheckbox = false;\n      let isRadio = false;\n      let isChecked = false;\n      const tag = control.tagName.toLowerCase();\n\n      // Native and custom checkboxes/radios\n      if (control.type === \"checkbox\" || tag === \"ds-checkbox\") {\n        isCheckbox = true;\n        isChecked = control.checked === true || control.hasAttribute(\"checked\");\n      } else if (control.type === \"radio\" || tag === \"ds-radio\") {\n        isRadio = true;\n        isChecked = control.checked === true || control.hasAttribute(\"checked\");\n      }\n\n      if (isCheckbox || isRadio) {\n        if (isChecked) {\n          // For custom elements, prefer getAttribute('value')\n          if (tag.startsWith(\"ds-\")) {\n            value = control.getAttribute(\"value\") ?? control.value ?? \"on\";\n          } else {\n            value = control.value || \"on\";\n          }\n          formData.append(name, value);\n        }\n        // If not checked, do not include in form data\n      } else {\n        // For text inputs, selects, textareas, and other custom components\n        value = control.value || \"\";\n        formData.append(name, value);\n      }\n    });\n\n    return formData;\n  }\n\n  /**\n   * Gets form data as a plain object\n   * @returns {Object} The form data as key-value pairs\n   */\n  getFormDataAsObject() {\n    const formData = this.getFormData();\n    const data = {};\n\n    for (const [key, value] of formData.entries()) {\n      data[key] = value;\n    }\n\n    return data;\n  }\n\n  // Override validateARIA for form-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n\n    // Check for accessible name (aria-label, aria-labelledby, or form title)\n    const ariaLabel = this.form.getAttribute(\"aria-label\");\n    const ariaLabelledBy = this.form.getAttribute(\"aria-labelledby\");\n    const formTitle = this.querySelector(\"h1, h2, h3, h4, h5, h6\");\n\n    if (!ariaLabel && !ariaLabelledBy && !formTitle) {\n      errors.push(\"Form should have an accessible name\");\n    }\n\n    // Check for proper form structure\n    const hasFormControls = this.querySelector(\n      'input, select, textarea, ds-text-input, ds-select, ds-textarea, ds-checkbox, ds-radio, button[type=\"submit\"]'\n    );\n    if (!hasFormControls) {\n      errors.push(\"Form should contain form controls\");\n    }\n\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-form\")) {\n  customElements.define(\"ds-form\", DsForm);\n}\n\nexport { DsForm };\nexport default DsForm;\n", "import { BaseComponent } from \"./base-component.js\";\n\n/**\n * @file ds-card.js\n * @summary A custom Web Component for displaying content in a card layout, optionally as a clickable link.\n * @description\n * The `ds-card` component displays its content in a styled card. It can be used as a static card or as a clickable card link.\n *\n * - The content inside `<ds-card>...</ds-card>` is rendered via the default slot.\n * - If the `href` attribute is present, the card renders as a clickable link (`<a>`) with keyboard accessibility (Enter/Space to activate).\n * - If `href` is not present, the card renders as a static `<div>`.\n * - The card is always focusable and accessible by keyboard.\n * - Uses CSS custom properties for background, border, radius, shadow, padding, and text color.\n * - The card is styled via Shadow DOM; no `part` attribute is exposed.\n * - The card defaults to a block layout that stretches to the width of its container.\n *\n * @element ds-card\n *\n * @slot - The card content (title, description, etc.).\n *\n * @attr {string} [href] - If present, the card becomes a clickable link. Opens in a new tab.\n * @attr {string} [aria-label] - Accessible name for the card when no visible text content is present.\n * @attr {string} [aria-labelledby] - References the ID of an element that provides the accessible name for the card.\n *\n * @note When `href` is present, the card is rendered as an accessible link (`role=\"link\"`, keyboard support).\n * @note When `href` is absent, the card is rendered as a static group (`role=\"group\"`).\n * @note The card is always focusable (`tabindex=0`).\n * @note The card requires an accessible name via aria-label, aria-labelledby, or visible text content.\n * @note Uses CSS custom properties: `--ds-card-background`, `--ds-card-border-color`, `--ds-card-border-radius`, `--ds-card-shadow`, `--ds-card-padding`, `--ds-card-text-color`.\n * @note The card defaults to 100% width while letting height be determined by its content.\n *\n * @example\n * <!-- Static card -->\n * <ds-card aria-label=\"Product information\">\n *   <h2>Card Title</h2>\n *   <p>Some description or content.</p>\n * </ds-card>\n *\n * @example\n * <!-- Clickable card link -->\n * <ds-card href=\"https://example.com\" aria-label=\"Go to example website\">\n *   <h2>Go to Example</h2>\n *   <p>This card acts as a link.</p>\n * </ds-card>\n *\n * @example\n * <!-- Card with aria-labelledby -->\n * <h2 id=\"card-title\">Product Details</h2>\n * <ds-card aria-labelledby=\"card-title\">\n *   <p>Product description and details.</p>\n * </ds-card>\n */\nclass DsCard extends BaseComponent {\n  static get observedAttributes() {\n    return [\"href\", \"variant\", \"size\", \"aria-label\", \"aria-labelledby\"];\n  }\n\n  constructor() {\n    super({\n      template: \"<slot></slot>\",\n      display: \"block\",\n      ariaConfig: {\n        requiredAriaAttributes: [\"aria-label\", \"aria-labelledby\"],\n        dynamicAriaAttributes: [\"aria-label\", \"aria-labelledby\"],\n        referenceAttributes: [\"aria-labelledby\"],\n      },\n    });\n    this._onKeyDown = this._onKeyDown.bind(this);\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    this.render();\n    if (this.hasAttribute(\"href\")) {\n      this.shadowRoot\n        .querySelector(\".card-link\")\n        .addEventListener(\"keydown\", this._onKeyDown);\n    }\n\n    // Check test mode after setup\n    this._updateTestMode();\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    if (this.hasAttribute(\"href\")) {\n      this.shadowRoot\n        .querySelector(\".card-link\")\n        .removeEventListener(\"keydown\", this._onKeyDown);\n    }\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    // Call parent method first\n    if (super.attributeChangedCallback) {\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n\n    if (name === \"href\" && oldValue !== newValue) {\n      this.render();\n    }\n\n    // Re-render when ARIA attributes change to update accessible names\n    if (\n      [\"aria-label\", \"aria-labelledby\"].includes(name) &&\n      oldValue !== newValue\n    ) {\n      this.render();\n    }\n\n    // Update test mode when observed attributes change\n    if (\n      [\"href\", \"variant\", \"size\", \"aria-label\", \"aria-labelledby\"].includes(\n        name\n      )\n    ) {\n      this._updateTestMode();\n    }\n  }\n\n  _onKeyDown(e) {\n    if ((e.key === \"Enter\" || e.key === \" \") && this.hasAttribute(\"href\")) {\n      e.preventDefault();\n      this.shadowRoot.querySelector(\".card-link\").click();\n    }\n  }\n\n  // Override test ID generation for card-specific logic\n  _generateTestId() {\n    const baseId = \"card\";\n    const variant = this.getAttribute(\"variant\") || \"default\";\n    const state = this.hasAttribute(\"href\") ? \"link\" : \"default\";\n    const size = this.getAttribute(\"size\") || \"medium\";\n    const hasAriaLabel = this.hasAttribute(\"aria-label\")\n      ? \"labeled\"\n      : \"unlabeled\";\n    const hasAriaLabelledBy = this.hasAttribute(\"aria-labelledby\")\n      ? \"referenced\"\n      : \"unreferenced\";\n\n    return `ds-${baseId}-${variant}-enabled-${state}-${size}-${hasAriaLabel}-${hasAriaLabelledBy}`;\n  }\n\n  render() {\n    const href = this.getAttribute(\"href\");\n    const isLink = !!href;\n    const ariaLabel = this.getAttribute(\"aria-label\");\n    const ariaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const className = this.getAttribute(\"class\") || \"\";\n\n    // Validate accessible name\n    this._validateAccessibleName();\n\n    console.log(href);\n    this.shadowRoot.innerHTML = `\n      <style>\n        .card-root {\n          display: block;\n          width: 100%;\n          background: var(--ds-card-background, #fff) !important;\n          border: 1px solid var(--ds-card-border-color, #e0e0e0) !important;\n          border-radius: var(--ds-card-border-radius, 12px) !important;\n          box-shadow: var(--ds-card-shadow, 0 2px 8px rgba(0,0,0,0.04)) !important;\n          color: var(--ds-card-text-color, #222) !important;\n          transition: box-shadow 0.2s, border 0.2s;\n          outline: none;\n          text-decoration: none !important;\n          cursor: ${isLink ? \"pointer\" : \"default\"};\n          text-align: left;\n        }\n        .card-root:focus, .card-root:focus-visible, .card-root:active, .card-root:hover {\n          border: 1px solid var(--ds-color-primary, #007bff) !important;\n          box-shadow: 0 4px 16px rgba(0,123,255,0.08) !important;\n        }\n        .card-content {\n          padding: var(--ds-card-padding, 2rem 2.5rem) !important;\n        }\n        ::slotted(h2) {\n          margin: 0 0 0.5rem 0;\n          font-size: 1.3rem;\n          color: var(--ds-color-primary, #007bff) !important;\n        }\n        ::slotted(p), ::slotted(div), ::slotted(span), ::slotted(*) {\n          color: #555 !important;\n          text-decoration: none !important;\n        }\n      </style>\n      ${\n        isLink\n          ? `\n        <a class=\"card-root card-link ${className}\" href=\"${href}\" tabindex=\"0\" role=\"link\" target=\"_blank\" rel=\"noopener\" \n           ${ariaLabel ? `aria-label=\"${ariaLabel}\"` : \"\"} \n           ${ariaLabelledBy ? `aria-labelledby=\"${ariaLabelledBy}\"` : \"\"}>\n          <div class=\"card-content\">\n            <slot></slot>\n          </div>\n        </a>\n      `\n          : `\n        <div class=\"card-root card-content-wrapper ${className}\" role=\"group\" tabindex=\"0\" \n             ${ariaLabel ? `aria-label=\"${ariaLabel}\"` : 'aria-label=\"Card\"'} \n             ${ariaLabelledBy ? `aria-labelledby=\"${ariaLabelledBy}\"` : \"\"}>\n          <div class=\"card-content\">\n            <slot></slot>\n          </div>\n        </div>\n      `\n      }\n    `;\n  }\n\n  /**\n   * Validate accessible name for the card\n   */\n  _validateAccessibleName() {\n    const ariaLabel = this.getAttribute(\"aria-label\");\n    const ariaLabelledBy = this.getAttribute(\"aria-labelledby\");\n    const hasTextContent =\n      this.textContent && this.textContent.trim().length > 0;\n\n    // Check if we have an accessible name\n    if (!ariaLabel && !ariaLabelledBy && !hasTextContent) {\n      console.warn(\n        `[${this.constructor.name}] Card has no accessible name. Provide aria-label, aria-labelledby, or visible text content.`\n      );\n    }\n\n    // Validate aria-labelledby references\n    if (ariaLabelledBy) {\n      const ids = ariaLabelledBy.split(/\\s+/);\n      for (const id of ids) {\n        if (!document.getElementById(id)) {\n          console.warn(\n            `[${this.constructor.name}] Element referenced by aria-labelledby ('${id}') does not exist in the document.`\n          );\n        }\n      }\n    }\n  }\n}\n\nif (!customElements.get(\"ds-card\")) {\n  customElements.define(\"ds-card\", DsCard);\n}\n\nexport default DsCard;\n", "/**\n * @file ds-heading.js\n * @summary A custom Web Component that renders different header levels (h1-h6).\n * @description\n * The `ds-heading` component provides a flexible way to render headers with different levels.\n * It supports both numeric (1-6) and string ('h1'-'h6') level values, with proper\n * accessibility and semantic markup.\n *\n * @element ds-heading\n * @extends BaseComponent\n *\n * @attr {string|number} level - The header level (1-6 or 'h1'-'h6'). Defaults to 1.\n * @attr {string} id - A unique identifier for the header.\n * @attr {string} aria-label - Accessible name for the header.\n * @attr {string} aria-describedby - Reference to element describing the header.\n *\n * @property {string|number} level - Gets or sets the header level.\n * @property {string} id - Gets or sets the header id.\n * @property {string} ariaLabel - Gets or sets the aria-label attribute.\n * @property {string} ariaDescribedBy - Gets or sets the aria-describedby attribute.\n *\n * @fires ds-level-change - custom event when level changes with { detail: { level, oldLevel } }\n *\n * @example\n * <!-- Basic h1 header -->\n * <ds-heading>Welcome to My App</ds-heading>\n *\n * @example\n * <!-- h2 header with level attribute -->\n * <ds-heading level=\"2\">Section Title</ds-heading>\n *\n * @example\n * <!-- h3 header with string level -->\n * <ds-heading level=\"h3\">Subsection</ds-heading>\n *\n * @example\n * <!-- Header with accessibility attributes -->\n * <ds-heading level=\"4\" aria-label=\"Navigation Menu\" id=\"nav-header\">Menu</ds-heading>\n */\nimport BaseComponent from \"./base-component.js\";\nimport { emit } from \"../utils/emit.js\";\n\nclass DsHeading extends BaseComponent {\n  constructor() {\n    // ARIA config for ds-heading\n    const ariaConfig = {\n      staticAriaAttributes: {},\n      dynamicAriaAttributes: [\"aria-label\", \"aria-describedby\"],\n      requiredAriaAttributes: [],\n      referenceAttributes: [\"aria-describedby\"],\n      tokenValidation: {},\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                }\n                \n                .header-wrapper {\n                    margin: 0;\n                    padding: 0;\n                }\n                \n                ::slotted(*) {\n                    margin: 0;\n                }\n            </style>\n            <div class=\"header-wrapper\">\n                <h1 id=\"header-element\" part=\"container\">\n                    <slot></slot>\n                </h1>\n            </div>\n        `;\n\n    super({\n      template: template.innerHTML,\n      targetSelector: \"h1\",\n      ariaConfig,\n      events: [],\n      observedAttributes: [\"level\", \"id\"],\n    });\n\n    this.headerElement = this.shadowRoot.querySelector(\"h1\");\n    this._currentLevel = 1;\n\n    // Set up mutation observer to watch for text content changes\n    this._setupTextContentObserver();\n  }\n\n  // Override test ID generation for heading-specific logic\n  _generateTestId() {\n    const baseId = \"heading\";\n    const level = this.getAttribute(\"level\") || \"1\";\n    const hasContent = this.textContent.trim() ? \"with-content\" : \"empty\";\n\n    return `ds-${baseId}-level-${level}-${hasContent}`;\n  }\n\n  static get observedAttributes() {\n    return [\"level\", \"id\", \"aria-label\", \"aria-describedby\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case \"level\":\n        this._updateHeaderLevel(newValue);\n        break;\n      case \"id\":\n        this.headerElement.id = newValue || \"\";\n        break;\n    }\n  }\n\n  // Override to handle text content changes\n  _updateTextContent() {\n    if (this.textContent.trim()) {\n      this.headerElement.textContent = this.textContent;\n    }\n  }\n\n  _setupTextContentObserver() {\n    // Watch for changes to text content\n    this._textObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === \"childList\" ||\n          mutation.type === \"characterData\"\n        ) {\n          this._updateTextContent();\n        }\n      });\n    });\n\n    this._textObserver.observe(this, {\n      childList: true,\n      characterData: true,\n      subtree: true,\n    });\n  }\n\n  _updateHeaderLevel(level) {\n    const oldLevel = this._currentLevel;\n    const newLevel = this._parseLevel(level);\n\n    if (newLevel !== oldLevel) {\n      this._currentLevel = newLevel;\n      this._renderHeader();\n\n      // Emit custom event for level changes\n      emit(this, \"ds-level-change\", {\n        level: newLevel,\n        oldLevel: oldLevel,\n      });\n    }\n  }\n\n  _parseLevel(level) {\n    if (!level) return 1;\n\n    // Handle string levels like 'h1', 'h2', etc.\n    if (typeof level === \"string\" && level.toLowerCase().startsWith(\"h\")) {\n      const num = parseInt(level.slice(1));\n      return num >= 1 && num <= 6 ? num : 1;\n    }\n\n    // Handle numeric levels\n    const num = parseInt(level);\n    return num >= 1 && num <= 6 ? num : 1;\n  }\n\n  _renderHeader() {\n    const tagName = `h${this._currentLevel}`;\n\n    // Create new header element\n    const newHeader = document.createElement(tagName);\n    newHeader.id = this.headerElement.id;\n    newHeader.className = this.headerElement.className;\n\n    // Copy ARIA attributes\n    const ariaAttributes = [\"aria-label\", \"aria-describedby\"];\n    ariaAttributes.forEach((attr) => {\n      if (this.headerElement.hasAttribute(attr)) {\n        newHeader.setAttribute(attr, this.headerElement.getAttribute(attr));\n      }\n    });\n\n    // Always create a new slot element\n    const slot = document.createElement(\"slot\");\n    newHeader.appendChild(slot);\n\n    // Replace old header with new one\n    const wrapper = this.shadowRoot.querySelector(\".header-wrapper\");\n    wrapper.replaceChild(newHeader, this.headerElement);\n    this.headerElement = newHeader;\n\n    // Update target selector for BaseComponent\n    this.options.targetSelector = tagName;\n  }\n\n  get level() {\n    return this._currentLevel;\n  }\n\n  set level(val) {\n    this.setAttribute(\"level\", val);\n  }\n\n  get id() {\n    return this.headerElement.id;\n  }\n\n  set id(val) {\n    this.headerElement.id = val;\n  }\n\n  // ARIA property accessors\n  get ariaLabel() {\n    const value = this.headerElement.getAttribute(\"aria-label\");\n    return value === null ? null : value;\n  }\n\n  set ariaLabel(val) {\n    if (val === null || val === undefined) {\n      this.headerElement.removeAttribute(\"aria-label\");\n    } else {\n      this.headerElement.setAttribute(\"aria-label\", val);\n    }\n  }\n\n  get ariaDescribedBy() {\n    const value = this.headerElement.getAttribute(\"aria-describedby\");\n    return value === null ? null : value;\n  }\n\n  set ariaDescribedBy(val) {\n    if (val === null || val === undefined) {\n      this.headerElement.removeAttribute(\"aria-describedby\");\n    } else {\n      this.headerElement.setAttribute(\"aria-describedby\", val);\n    }\n  }\n\n  connectedCallback() {\n    if (super.connectedCallback) super.connectedCallback();\n    this._updateTextContent();\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    if (this._textObserver) {\n      this._textObserver.disconnect();\n    }\n  }\n\n  // Override validateARIA for header-specific checks\n  validateARIA() {\n    const errors = super.validateARIA ? super.validateARIA() : [];\n\n    // Check if header has accessible name\n    const hasName =\n      this.headerElement.getAttribute(\"aria-label\") ||\n      this.headerElement.getAttribute(\"aria-labelledby\") ||\n      this.textContent.trim();\n\n    if (!hasName) {\n      errors.push(\n        \"Header has no accessible name (aria-label, aria-labelledby, or text content required)\"\n      );\n    }\n\n    // Check aria-describedby references\n    if (this.headerElement.hasAttribute(\"aria-describedby\")) {\n      const refError = this.checkAriaReferences(\n        \"aria-describedby\",\n        this.headerElement.getAttribute(\"aria-describedby\")\n      );\n      if (refError) errors.push(refError);\n    }\n\n    return errors;\n  }\n}\n\n// Register the custom element\nif (!customElements.get(\"ds-heading\")) {\n  customElements.define(\"ds-heading\", DsHeading);\n}\n\n// Export for use in other modules\nexport { DsHeading };\nexport default DsHeading;\n", "/**\n * @file init.js\n * @summary Design system initialization and configuration module\n * @description\n * Provides a way to initialize and configure the design system with custom\n * design tokens, themes, and settings. Clients provide complete token sets\n * - no defaults are merged automatically. Use DEFAULT_TOKENS as a starting\n * point if needed. This allows developers to have complete control over\n * the appearance and behavior of all components.\n */\n\n/**\n * @typedef {{\n *   [key: string]: string | number | Record<string, any> | undefined;\n *   backgroundColor?: string;\n *   borderColor?: string;\n *   textColor?: string;\n *   borderRadius?: string | number;\n *   padding?: string | number;\n *   fontSize?: string | number;\n *   fontWeight?: string | number;\n *   borderWidth?: string | number;\n *   borderStyle?: string;\n *   boxShadow?: string;\n *   transition?: string;\n *   margin?: string | number;\n *   width?: string | number;\n *   height?: string | number;\n *   minWidth?: string | number;\n *   maxWidth?: string | number;\n *   minHeight?: string | number;\n *   opacity?: string | number;\n *   transform?: string;\n *   zIndex?: string | number;\n *   display?: string;\n *   flexWrap?: string;\n *   flex?: string | number;\n *   lineHeight?: string | number;\n *   errorColor?: string;\n *   errorBackground?: string;\n *   errorBorder?: string;\n *   successColor?: string;\n *   successBackground?: string;\n *   successBorder?: string;\n *   infoColor?: string;\n *   infoBackground?: string;\n *   infoBorder?: string;\n *   shadow?: string | number;\n * }} ComponentStyleProperties\n */\n\n/**\n * @typedef {ComponentStyleProperties & {\n *   variants?: Record<string, ComponentStyleProperties & {\n *     states?: Record<string, ComponentStyleProperties>;\n *     sizes?: Record<string, ComponentStyleProperties>;\n *   }>;\n *   states?: Record<string, ComponentStyleProperties> & {\n *     hover?: ComponentStyleProperties;\n *     focus?: ComponentStyleProperties;\n *     active?: ComponentStyleProperties;\n *     disabled?: ComponentStyleProperties;\n *   };\n *   sizes?: Record<string, ComponentStyleProperties> & {\n *     small?: ComponentStyleProperties;\n *     medium?: ComponentStyleProperties;\n *     large?: ComponentStyleProperties;\n *   };\n *   [key: string]: any;\n * }} ComponentTokens\n */\n\n/**\n * @typedef {{\n *   [key: string]: string | number;\n *   primary?: string | number;\n *   secondary?: string | number;\n *   tertiary?: string | number;\n *   text?: string | number;\n *   background?: string | number;\n *   success?: string | number;\n *   error?: string | number;\n *   warning?: string | number;\n *   info?: string | number;\n * }} ColorToken\n *\n\n/**\n * @typedef {{\n *   [key: string]: string | number;\n *   xs?: string | number;\n *   sm?: string | number;\n *   md?: string | number;\n *   lg?: string | number;\n *   xl?: string | number;\n *   pagePadding?: string | number;\n * }} SpacingToken\n */\n\n/**\n * @typedef {{\n *   [key: string]: string | number;\n *   fontFamily?: string;\n *   fontSize?: string | number;\n *   lineHeight?: string | number;\n * }} TypographyToken\n */\n\n/**\n * @typedef {{\n *   [key: string]: string | number;\n *   pageMaxWidth?: string | number;\n *   containerPadding?: string | number;\n * }} LayoutToken\n */\n\n/**\n * @typedef {{\n *   [key: string]: any;\n *   color?: ColorToken;\n *   spacing?: SpacingToken;\n *   typography?: TypographyToken;\n *   layout?: LayoutToken;\n *   components?: Record<string, ComponentTokens>;\n * }} SystemDesignTokens\n */\n\n/**\n * Client type that allows any additional properties beyond the system tokens\n * @typedef {Partial<SystemDesignTokens> & Record<string, any>} ClientDesignTokens\n */\n\n/**\n * Options for initializing the design system\n * @typedef {object} InitOptions\n * @property {boolean} [validate]\n * @property {boolean} [injectCSS]\n * @property {boolean} [console]\n */\n\n/**\n * Options for updating design tokens\n * @typedef {object} UpdateOptions\n * @property {boolean} [injectCSS]\n */\n\n/**\n * Result from initializing the design system\n * @typedef {object} InitResult\n * @property {boolean} success\n * @property {string[]} errors\n * @property {SystemDesignTokens|null} tokens\n * @property {string} [css]\n */\n\n/**\n * Result from updating the design system tokens\n * @typedef {object} UpdateResult\n * @property {boolean} success\n * @property {SystemDesignTokens} [tokens]\n * @property {string} [css]\n * @property {string} [error]\n */\n\n/**\n * Default design tokens for the design system\n * @description\n * These tokens are provided as a reference and starting point for clients.\n * They are NOT automatically merged with client tokens. Clients can:\n * - Use these as-is: init(DEFAULT_TOKENS)\n * - Extend them: init({...DEFAULT_TOKENS, ...customTokens})\n * - Use them as reference to build their own token sets\n * @type {SystemDesignTokens}\n */\nconst DEFAULT_TOKENS = {\n  color: {\n    primary: \"#007bff\",\n    secondary: \"#6c757d\",\n    tertiary: \"#868e96\",\n    text: \"#212529\",\n    background: \"#ffffff\",\n    success: \"#28a745\",\n    error: \"#dc3545\",\n    warning: \"#ffc107\",\n    info: \"#17a2b8\",\n  },\n  spacing: {\n    xs: \"4px\",\n    sm: \"8px\",\n    md: \"16px\",\n    lg: \"24px\",\n    xl: \"32px\",\n    pagePadding: \"20px\",\n  },\n  typography: {\n    fontFamily:\n      'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n    fontSize: \"16px\",\n    lineHeight: \"1.5\",\n  },\n  layout: {\n    pageMaxWidth: \"1200px\",\n    containerPadding: \"20px\",\n  },\n  components: {\n    button: {\n      // Base button properties (applied to all buttons)\n      backgroundColor: \"#ffffff\",\n      borderColor: \"#ced4da\",\n      textColor: \"#212529\",\n      borderRadius: \"4px\",\n      padding: \"8px 16px\",\n      fontSize: \"16px\",\n      fontWeight: \"400\",\n      borderWidth: \"1px\",\n      borderStyle: \"solid\",\n      transition: \"all 0.2s ease-in-out\",\n\n      // Variant definitions with nested states and sizes\n      variants: {\n        primary: {\n          backgroundColor: \"#007bff\",\n          borderColor: \"#007bff\",\n          textColor: \"#ffffff\",\n          fontWeight: \"500\",\n\n          states: {\n            hover: {\n              backgroundColor: \"#0056b3\",\n              borderColor: \"#0056b3\",\n            },\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n              outline: \"none\",\n            },\n            active: {\n              backgroundColor: \"#004085\",\n              borderColor: \"#004085\",\n            },\n            disabled: {\n              backgroundColor: \"#6c757d\",\n              borderColor: \"#6c757d\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n              borderRadius: \"3px\",\n            },\n            medium: {\n              padding: \"8px 16px\",\n              fontSize: \"16px\",\n              borderRadius: \"4px\",\n            },\n            large: {\n              padding: \"12px 24px\",\n              fontSize: \"18px\",\n              borderRadius: \"6px\",\n            },\n          },\n        },\n\n        secondary: {\n          backgroundColor: \"#6c757d\",\n          borderColor: \"#6c757d\",\n          textColor: \"#ffffff\",\n\n          states: {\n            hover: {\n              backgroundColor: \"#545b62\",\n              borderColor: \"#545b62\",\n            },\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(108, 117, 125, 0.25)\",\n              outline: \"none\",\n            },\n            active: {\n              backgroundColor: \"#3d4449\",\n              borderColor: \"#3d4449\",\n            },\n            disabled: {\n              backgroundColor: \"#adb5bd\",\n              borderColor: \"#adb5bd\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n              borderRadius: \"3px\",\n            },\n            medium: {\n              padding: \"8px 16px\",\n              fontSize: \"16px\",\n              borderRadius: \"4px\",\n            },\n            large: {\n              padding: \"12px 24px\",\n              fontSize: \"18px\",\n              borderRadius: \"6px\",\n            },\n          },\n        },\n\n        danger: {\n          backgroundColor: \"#dc3545\",\n          borderColor: \"#dc3545\",\n          textColor: \"#ffffff\",\n          fontWeight: \"500\",\n\n          states: {\n            hover: {\n              backgroundColor: \"#c82333\",\n              borderColor: \"#bd2130\",\n            },\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(220, 53, 69, 0.25)\",\n              outline: \"none\",\n            },\n            active: {\n              backgroundColor: \"#bd2130\",\n              borderColor: \"#b21f2d\",\n            },\n            disabled: {\n              backgroundColor: \"#6c757d\",\n              borderColor: \"#6c757d\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n              borderRadius: \"3px\",\n            },\n            medium: {\n              padding: \"8px 16px\",\n              fontSize: \"16px\",\n              borderRadius: \"4px\",\n            },\n            large: {\n              padding: \"12px 24px\",\n              fontSize: \"18px\",\n              borderRadius: \"6px\",\n            },\n          },\n        },\n\n        outline: {\n          backgroundColor: \"transparent\",\n          borderColor: \"#007bff\",\n          textColor: \"#007bff\",\n          fontWeight: \"500\",\n\n          states: {\n            hover: {\n              backgroundColor: \"#007bff\",\n              borderColor: \"#007bff\",\n              textColor: \"#ffffff\",\n            },\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n              outline: \"none\",\n            },\n            active: {\n              backgroundColor: \"#0056b3\",\n              borderColor: \"#0056b3\",\n              textColor: \"#ffffff\",\n            },\n            disabled: {\n              backgroundColor: \"transparent\",\n              borderColor: \"#6c757d\",\n              textColor: \"#6c757d\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n              borderRadius: \"3px\",\n            },\n            medium: {\n              padding: \"8px 16px\",\n              fontSize: \"16px\",\n              borderRadius: \"4px\",\n            },\n            large: {\n              padding: \"12px 24px\",\n              fontSize: \"18px\",\n              borderRadius: \"6px\",\n            },\n          },\n        },\n\n        ghost: {\n          backgroundColor: \"transparent\",\n          borderColor: \"transparent\",\n          textColor: \"#007bff\",\n          fontWeight: \"500\",\n\n          states: {\n            hover: {\n              backgroundColor: \"rgba(0, 123, 255, 0.1)\",\n              borderColor: \"transparent\",\n            },\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n              outline: \"none\",\n            },\n            active: {\n              backgroundColor: \"rgba(0, 123, 255, 0.2)\",\n              borderColor: \"transparent\",\n            },\n            disabled: {\n              backgroundColor: \"transparent\",\n              borderColor: \"transparent\",\n              textColor: \"#6c757d\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n              borderRadius: \"3px\",\n            },\n            medium: {\n              padding: \"8px 16px\",\n              fontSize: \"16px\",\n              borderRadius: \"4px\",\n            },\n            large: {\n              padding: \"12px 24px\",\n              fontSize: \"18px\",\n              borderRadius: \"6px\",\n            },\n          },\n        },\n      },\n\n      // Global fallback states (used if variant doesn't define specific state)\n      states: {\n        hover: {\n          backgroundColor: \"#f8f9fa\",\n          borderColor: \"#adb5bd\",\n        },\n        focus: {\n          boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n          outline: \"none\",\n        },\n        active: {\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#6c757d\",\n        },\n        disabled: {\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#ced4da\",\n          textColor: \"#6c757d\",\n          opacity: \"0.65\",\n          cursor: \"not-allowed\",\n        },\n      },\n\n      // Global fallback sizes (used if variant doesn't define specific size)\n      sizes: {\n        small: {\n          padding: \"4px 8px\",\n          fontSize: \"14px\",\n          borderRadius: \"3px\",\n        },\n        medium: {\n          padding: \"8px 16px\",\n          fontSize: \"16px\",\n          borderRadius: \"4px\",\n        },\n        large: {\n          padding: \"12px 24px\",\n          fontSize: \"18px\",\n          borderRadius: \"6px\",\n        },\n      },\n    },\n    input: {\n      backgroundColor: \"#ffffff\",\n      borderColor: \"#ced4da\",\n      textColor: \"#212529\",\n      borderRadius: \"4px\",\n      padding: \"8px 12px\",\n      fontSize: \"16px\",\n\n      variants: {\n        error: {\n          borderColor: \"#dc3545\",\n          backgroundColor: \"#fff5f5\",\n\n          states: {\n            focus: {\n              borderColor: \"#dc3545\",\n              boxShadow: \"0 0 0 0.2rem rgba(220, 53, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#f8d7da\",\n              borderColor: \"#f5c6cb\",\n              textColor: \"#721c24\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n            },\n            medium: {\n              padding: \"8px 12px\",\n              fontSize: \"16px\",\n            },\n            large: {\n              padding: \"12px 16px\",\n              fontSize: \"18px\",\n            },\n          },\n        },\n\n        success: {\n          borderColor: \"#28a745\",\n          backgroundColor: \"#f8fff8\",\n\n          states: {\n            focus: {\n              borderColor: \"#28a745\",\n              boxShadow: \"0 0 0 0.2rem rgba(40, 167, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#d4edda\",\n              borderColor: \"#c3e6cb\",\n              textColor: \"#155724\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n            },\n            medium: {\n              padding: \"8px 12px\",\n              fontSize: \"16px\",\n            },\n            large: {\n              padding: \"12px 16px\",\n              fontSize: \"18px\",\n            },\n          },\n        },\n      },\n\n      states: {\n        focus: {\n          borderColor: \"#007bff\",\n          boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n          outline: \"none\",\n        },\n        disabled: {\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#ced4da\",\n          textColor: \"#6c757d\",\n          cursor: \"not-allowed\",\n        },\n      },\n\n      sizes: {\n        small: {\n          padding: \"4px 8px\",\n          fontSize: \"14px\",\n        },\n        medium: {\n          padding: \"8px 12px\",\n          fontSize: \"16px\",\n        },\n        large: {\n          padding: \"12px 16px\",\n          fontSize: \"18px\",\n        },\n      },\n    },\n    card: {\n      backgroundColor: \"#ffffff\",\n      borderColor: \"#e0e0e0\",\n      borderRadius: \"12px\",\n      padding: \"2rem 2.5rem\",\n      boxShadow: \"0 2px 8px rgba(0,0,0,0.04)\",\n\n      variants: {\n        elevated: {\n          boxShadow: \"0 4px 16px rgba(0,0,0,0.12)\",\n        },\n        outlined: {\n          borderWidth: \"2px\",\n          boxShadow: \"none\",\n        },\n        filled: {\n          backgroundColor: \"#f8f9fa\",\n          borderColor: \"transparent\",\n        },\n      },\n    },\n    select: {\n      backgroundColor: \"#ffffff\",\n      borderColor: \"#ced4da\",\n      textColor: \"#212529\",\n      borderRadius: \"4px\",\n      padding: \"8px 12px\",\n      fontSize: \"16px\",\n\n      variants: {\n        error: {\n          borderColor: \"#dc3545\",\n          backgroundColor: \"#fff5f5\",\n\n          states: {\n            focus: {\n              borderColor: \"#dc3545\",\n              boxShadow: \"0 0 0 0.2rem rgba(220, 53, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#f8d7da\",\n              borderColor: \"#f5c6cb\",\n              textColor: \"#721c24\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n            },\n            medium: {\n              padding: \"8px 12px\",\n              fontSize: \"16px\",\n            },\n            large: {\n              padding: \"12px 16px\",\n              fontSize: \"18px\",\n            },\n          },\n        },\n\n        success: {\n          borderColor: \"#28a745\",\n          backgroundColor: \"#f8fff8\",\n\n          states: {\n            focus: {\n              borderColor: \"#28a745\",\n              boxShadow: \"0 0 0 0.2rem rgba(40, 167, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#d4edda\",\n              borderColor: \"#c3e6cb\",\n              textColor: \"#155724\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n            },\n            medium: {\n              padding: \"8px 12px\",\n              fontSize: \"16px\",\n            },\n            large: {\n              padding: \"12px 16px\",\n              fontSize: \"18px\",\n            },\n          },\n        },\n      },\n\n      states: {\n        focus: {\n          borderColor: \"#007bff\",\n          boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n          outline: \"none\",\n        },\n        disabled: {\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#ced4da\",\n          textColor: \"#6c757d\",\n          cursor: \"not-allowed\",\n        },\n      },\n\n      sizes: {\n        small: {\n          padding: \"4px 8px\",\n          fontSize: \"14px\",\n        },\n        medium: {\n          padding: \"8px 12px\",\n          fontSize: \"16px\",\n        },\n        large: {\n          padding: \"12px 16px\",\n          fontSize: \"18px\",\n        },\n      },\n    },\n    textarea: {\n      backgroundColor: \"#ffffff\",\n      borderColor: \"#ced4da\",\n      textColor: \"#212529\",\n      borderRadius: \"4px\",\n      padding: \"8px 12px\",\n      fontSize: \"16px\",\n      minHeight: \"100px\",\n\n      variants: {\n        error: {\n          borderColor: \"#dc3545\",\n          backgroundColor: \"#fff5f5\",\n\n          states: {\n            focus: {\n              borderColor: \"#dc3545\",\n              boxShadow: \"0 0 0 0.2rem rgba(220, 53, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#f8d7da\",\n              borderColor: \"#f5c6cb\",\n              textColor: \"#721c24\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n              minHeight: \"80px\",\n            },\n            medium: {\n              padding: \"8px 12px\",\n              fontSize: \"16px\",\n              minHeight: \"100px\",\n            },\n            large: {\n              padding: \"12px 16px\",\n              fontSize: \"18px\",\n              minHeight: \"120px\",\n            },\n          },\n        },\n\n        success: {\n          borderColor: \"#28a745\",\n          backgroundColor: \"#f8fff8\",\n\n          states: {\n            focus: {\n              borderColor: \"#28a745\",\n              boxShadow: \"0 0 0 0.2rem rgba(40, 167, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#d4edda\",\n              borderColor: \"#c3e6cb\",\n              textColor: \"#155724\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              padding: \"4px 8px\",\n              fontSize: \"14px\",\n              minHeight: \"80px\",\n            },\n            medium: {\n              padding: \"8px 12px\",\n              fontSize: \"16px\",\n              minHeight: \"100px\",\n            },\n            large: {\n              padding: \"12px 16px\",\n              fontSize: \"18px\",\n              minHeight: \"120px\",\n            },\n          },\n        },\n      },\n\n      states: {\n        focus: {\n          borderColor: \"#007bff\",\n          boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n          outline: \"none\",\n        },\n        disabled: {\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#ced4da\",\n          textColor: \"#6c757d\",\n          cursor: \"not-allowed\",\n        },\n      },\n\n      sizes: {\n        small: {\n          padding: \"4px 8px\",\n          fontSize: \"14px\",\n          minHeight: \"80px\",\n        },\n        medium: {\n          padding: \"8px 12px\",\n          fontSize: \"16px\",\n          minHeight: \"100px\",\n        },\n        large: {\n          padding: \"12px 16px\",\n          fontSize: \"18px\",\n          minHeight: \"120px\",\n        },\n      },\n    },\n    checkbox: {\n      backgroundColor: \"#ffffff\",\n      borderColor: \"#ced4da\",\n      textColor: \"#212529\",\n      borderRadius: \"4px\",\n      width: \"16px\",\n      height: \"16px\",\n\n      variants: {\n        checked: {\n          backgroundColor: \"#007bff\",\n          borderColor: \"#007bff\",\n\n          states: {\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#6c757d\",\n              borderColor: \"#6c757d\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              width: \"12px\",\n              height: \"12px\",\n              borderRadius: \"2px\",\n            },\n            medium: {\n              width: \"16px\",\n              height: \"16px\",\n              borderRadius: \"4px\",\n            },\n            large: {\n              width: \"20px\",\n              height: \"20px\",\n              borderRadius: \"6px\",\n            },\n          },\n        },\n\n        error: {\n          borderColor: \"#dc3545\",\n\n          states: {\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(220, 53, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              borderColor: \"#f5c6cb\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              width: \"12px\",\n              height: \"12px\",\n              borderRadius: \"2px\",\n            },\n            medium: {\n              width: \"16px\",\n              height: \"16px\",\n              borderRadius: \"4px\",\n            },\n            large: {\n              width: \"20px\",\n              height: \"20px\",\n              borderRadius: \"6px\",\n            },\n          },\n        },\n      },\n\n      states: {\n        focus: {\n          boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n          outline: \"none\",\n        },\n        disabled: {\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#ced4da\",\n          opacity: \"0.65\",\n          cursor: \"not-allowed\",\n        },\n      },\n\n      sizes: {\n        small: {\n          width: \"12px\",\n          height: \"12px\",\n          borderRadius: \"2px\",\n        },\n        medium: {\n          width: \"16px\",\n          height: \"16px\",\n          borderRadius: \"4px\",\n        },\n        large: {\n          width: \"20px\",\n          height: \"20px\",\n          borderRadius: \"6px\",\n        },\n      },\n    },\n    radio: {\n      backgroundColor: \"#ffffff\",\n      borderColor: \"#ced4da\",\n      textColor: \"#212529\",\n      borderRadius: \"50%\",\n      width: \"16px\",\n      height: \"16px\",\n\n      variants: {\n        checked: {\n          backgroundColor: \"#007bff\",\n          borderColor: \"#007bff\",\n\n          states: {\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              backgroundColor: \"#6c757d\",\n              borderColor: \"#6c757d\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              width: \"12px\",\n              height: \"12px\",\n            },\n            medium: {\n              width: \"16px\",\n              height: \"16px\",\n            },\n            large: {\n              width: \"20px\",\n              height: \"20px\",\n            },\n          },\n        },\n\n        error: {\n          borderColor: \"#dc3545\",\n\n          states: {\n            focus: {\n              boxShadow: \"0 0 0 0.2rem rgba(220, 53, 69, 0.25)\",\n              outline: \"none\",\n            },\n            disabled: {\n              borderColor: \"#f5c6cb\",\n              opacity: \"0.65\",\n              cursor: \"not-allowed\",\n            },\n          },\n\n          sizes: {\n            small: {\n              width: \"12px\",\n              height: \"12px\",\n            },\n            medium: {\n              width: \"16px\",\n              height: \"16px\",\n            },\n            large: {\n              width: \"20px\",\n              height: \"20px\",\n            },\n          },\n        },\n      },\n\n      states: {\n        focus: {\n          boxShadow: \"0 0 0 0.2rem rgba(0, 123, 255, 0.25)\",\n          outline: \"none\",\n        },\n        disabled: {\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#ced4da\",\n          opacity: \"0.65\",\n          cursor: \"not-allowed\",\n        },\n      },\n\n      sizes: {\n        small: {\n          width: \"12px\",\n          height: \"12px\",\n        },\n        medium: {\n          width: \"16px\",\n          height: \"16px\",\n        },\n        large: {\n          width: \"20px\",\n          height: \"20px\",\n        },\n      },\n    },\n    fieldset: {\n      borderColor: \"#ced4da\",\n      borderWidth: \"1px\",\n      borderStyle: \"solid\",\n      borderRadius: \"4px\",\n      padding: \"16px\",\n      margin: \"0 0 16px 0\",\n    },\n    label: {\n      textColor: \"#212529\",\n      fontSize: \"14px\",\n      fontWeight: \"500\",\n      margin: \"0 0 4px 0\",\n    },\n    legend: {\n      textColor: \"#212529\",\n      fontSize: \"16px\",\n      fontWeight: \"600\",\n      padding: \"0 8px\",\n    },\n    option: {\n      backgroundColor: \"#ffffff\",\n      textColor: \"#212529\",\n      padding: \"8px 12px\",\n\n      variants: {\n        selected: {\n          backgroundColor: \"#007bff\",\n          textColor: \"#ffffff\",\n        },\n        hover: {\n          backgroundColor: \"#f8f9fa\",\n        },\n      },\n    },\n    page: {\n      backgroundColor: \"#ffffff\",\n      textColor: \"#212529\",\n      maxWidth: \"1200px\",\n      margin: \"0 auto\",\n      padding: \"20px\",\n    },\n    heading: {\n      textColor: \"#212529\",\n      fontWeight: \"600\",\n      margin: \"0 0 16px 0\",\n\n      variants: {\n        h1: {\n          fontSize: \"2.5rem\",\n          lineHeight: \"1.2\",\n        },\n        h2: {\n          fontSize: \"2rem\",\n          lineHeight: \"1.3\",\n        },\n        h3: {\n          fontSize: \"1.75rem\",\n          lineHeight: \"1.4\",\n        },\n        h4: {\n          fontSize: \"1.5rem\",\n          lineHeight: \"1.4\",\n        },\n        h5: {\n          fontSize: \"1.25rem\",\n          lineHeight: \"1.5\",\n        },\n        h6: {\n          fontSize: \"1rem\",\n          lineHeight: \"1.5\",\n        },\n      },\n    },\n    col: {\n      padding: \"0 8px\",\n\n      variants: {\n        xs1: { flex: \"0 0 8.333333%\" },\n        xs2: { flex: \"0 0 16.666667%\" },\n        xs3: { flex: \"0 0 25%\" },\n        xs4: { flex: \"0 0 33.333333%\" },\n        xs5: { flex: \"0 0 41.666667%\" },\n        xs6: { flex: \"0 0 50%\" },\n        xs7: { flex: \"0 0 58.333333%\" },\n        xs8: { flex: \"0 0 66.666667%\" },\n        xs9: { flex: \"0 0 75%\" },\n        xs10: { flex: \"0 0 83.333333%\" },\n        xs11: { flex: \"0 0 91.666667%\" },\n        xs12: { flex: \"0 0 100%\" },\n      },\n    },\n    row: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      margin: \"0 -8px\",\n    },\n    form: {\n      borderColor: \"#ced4da\",\n      borderRadius: \"4px\",\n      textColor: \"#495057\",\n      errorColor: \"#dc3545\",\n      errorBackground: \"#f8d7da\",\n      errorBorder: \"#f5c6cb\",\n      successColor: \"#155724\",\n      successBackground: \"#d4edda\",\n      successBorder: \"#c3e6cb\",\n      infoColor: \"#0c5460\",\n      infoBackground: \"#d1ecf1\",\n      infoBorder: \"#bee5eb\",\n    },\n  },\n};\n\n/**\n * Merges user tokens with defaults, handling nested objects\n * @param {Object} defaults - Default tokens\n * @param {Object} userTokens - User-provided tokens\n * @returns {Object} Merged tokens\n */\nfunction deepMerge(defaults, userTokens) {\n  const result = { ...defaults };\n\n  // Handle invalid userTokens\n  if (\n    !userTokens ||\n    typeof userTokens !== \"object\" ||\n    Array.isArray(userTokens)\n  ) {\n    return result;\n  }\n\n  for (const key in userTokens) {\n    if (userTokens.hasOwnProperty(key)) {\n      if (\n        typeof userTokens[key] === \"object\" &&\n        userTokens[key] !== null &&\n        !Array.isArray(userTokens[key])\n      ) {\n        result[key] = deepMerge(defaults[key] || {}, userTokens[key]);\n      } else if (userTokens[key] === null || userTokens[key] === undefined) {\n        // Keep the default value for null/undefined\n        continue;\n      } else {\n        result[key] = userTokens[key];\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts camelCase string to kebab-case\n * @param {string} str - The camelCase string to convert\n * @returns {string} The kebab-case string\n */\nfunction camelToKebab(str) {\n  if (typeof str !== \"string\") {\n    return str;\n  }\n  return str.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\n/**\n * Flattens a nested object into CSS custom properties with hierarchical naming\n * @param {Object} obj - The nested object to flatten\n * @param {string} prefix - The prefix for CSS custom properties (e.g., '--ds-')\n * @param {string} separator - The separator between nested levels (default: '-')\n * @returns {Object} Flattened object with CSS custom property names as keys\n */\nfunction flattenCSSProperties(obj, prefix = \"--ds-\", separator = \"-\") {\n  const result = {};\n\n  function flatten(current, path = \"\") {\n    for (const [key, value] of Object.entries(current)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      // Convert camelCase to kebab-case\n      const kebabKey = camelToKebab(key);\n      const newPath = path ? `${path}${separator}${kebabKey}` : kebabKey;\n\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        // Special handling for components structure\n        if (key === \"components\") {\n          // Handle components separately to create hierarchical naming\n          for (const [componentName, componentValue] of Object.entries(value)) {\n            if (typeof componentValue === \"object\" && componentValue !== null) {\n              flattenComponent(\n                componentValue,\n                `${prefix}${camelToKebab(componentName)}`,\n                separator\n              );\n            }\n          }\n        } else {\n          // Recursively flatten other nested objects\n          flatten(value, newPath);\n        }\n      } else {\n        // Add the flattened property\n        result[`${prefix}${newPath}`] = value;\n      }\n    }\n  }\n\n  function flattenComponent(component, componentPrefix, separator) {\n    // Handle base component properties\n    for (const [key, value] of Object.entries(component)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      const kebabKey = camelToKebab(key);\n\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        if (key === \"variants\") {\n          // Handle variants: --ds-<component>-<variant>-<size>-<state>\n          for (const [variantName, variantValue] of Object.entries(value)) {\n            if (typeof variantValue === \"object\" && variantValue !== null) {\n              flattenVariant(\n                variantValue,\n                `${componentPrefix}${separator}${variantName}`,\n                separator\n              );\n            }\n          }\n        } else if (key === \"states\") {\n          // Handle global states: --ds-<component>-<state>\n          for (const [stateName, stateValue] of Object.entries(value)) {\n            if (typeof stateValue === \"object\" && stateValue !== null) {\n              flattenState(\n                stateValue,\n                `${componentPrefix}${separator}${stateName}`,\n                separator\n              );\n            }\n          }\n        } else if (key === \"sizes\") {\n          // Handle global sizes: --ds-<component>-<size>\n          for (const [sizeName, sizeValue] of Object.entries(value)) {\n            if (typeof sizeValue === \"object\" && sizeValue !== null) {\n              flattenSize(\n                sizeValue,\n                `${componentPrefix}${separator}${sizeName}`,\n                separator\n              );\n            }\n          }\n        }\n      } else {\n        // Add base component property\n        result[`${componentPrefix}${separator}${kebabKey}`] = value;\n      }\n    }\n  }\n\n  function flattenVariant(variant, variantPrefix, separator) {\n    // Handle variant properties and nested states/sizes\n    for (const [key, value] of Object.entries(variant)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      const kebabKey = camelToKebab(key);\n\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        if (key === \"states\") {\n          // Handle variant states: --ds-<component>-<variant>-<state>\n          for (const [stateName, stateValue] of Object.entries(value)) {\n            if (typeof stateValue === \"object\" && stateValue !== null) {\n              flattenState(\n                stateValue,\n                `${variantPrefix}${separator}${stateName}`,\n                separator\n              );\n            }\n          }\n        } else if (key === \"sizes\") {\n          // Handle variant sizes: --ds-<component>-<variant>-<size>\n          for (const [sizeName, sizeValue] of Object.entries(value)) {\n            if (typeof sizeValue === \"object\" && sizeValue !== null) {\n              flattenSize(\n                sizeValue,\n                `${variantPrefix}${separator}${sizeName}`,\n                separator\n              );\n            }\n          }\n        }\n      } else {\n        // Add variant property\n        result[`${variantPrefix}${separator}${kebabKey}`] = value;\n      }\n    }\n  }\n\n  function flattenState(state, statePrefix, separator) {\n    // Handle state properties\n    for (const [key, value] of Object.entries(state)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      const kebabKey = camelToKebab(key);\n      result[`${statePrefix}${separator}${kebabKey}`] = value;\n    }\n  }\n\n  function flattenSize(size, sizePrefix, separator) {\n    // Handle size properties\n    for (const [key, value] of Object.entries(size)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      const kebabKey = camelToKebab(key);\n      result[`${sizePrefix}${separator}${kebabKey}`] = value;\n    }\n  }\n\n  flatten(obj);\n  return result;\n}\n\n/**\n * Converts design tokens to CSS custom properties using flattened structure\n * @param {SystemDesignTokens} tokens - Design tokens object\n * @returns {string} CSS custom properties string\n */\nfunction tokensToCSS(tokens) {\n  const flattenedProps = flattenCSSProperties(tokens, \"--ds-\", \"-\");\n\n  return Object.entries(flattenedProps)\n    .map(([key, value]) => `${key}: ${value};`)\n    .join(\"\\n  \");\n}\n\n/**\n * Injects CSS custom properties into the document\n * @param {string} css - CSS custom properties string\n */\nfunction injectCSS(css) {\n  const styleId = \"ds-design-tokens\";\n  let styleElement = document.getElementById(styleId);\n\n  if (!styleElement) {\n    styleElement = document.createElement(\"style\");\n    styleElement.id = styleId;\n    document.head.appendChild(styleElement);\n  }\n\n  styleElement.textContent = `:root {\\n  ${css}\\n}`;\n}\n\n/**\n * Validates design tokens for correct types (optional validation)\n * @param {Partial<ClientDesignTokens>} userTokens - Design tokens to validate\n * @returns {Object} Validation result with isValid boolean and errors array\n */\nfunction validateTokens(userTokens) {\n  const errors = [];\n\n  // Only validate structure and types, not required properties\n  if (userTokens.color && typeof userTokens.color !== \"object\") {\n    errors.push(\"Color tokens must be an object\");\n  }\n\n  if (userTokens.spacing && typeof userTokens.spacing !== \"object\") {\n    errors.push(\"Spacing tokens must be an object\");\n  }\n\n  if (userTokens.typography && typeof userTokens.typography !== \"object\") {\n    errors.push(\"Typography tokens must be an object\");\n  }\n\n  if (userTokens.layout && typeof userTokens.layout !== \"object\") {\n    errors.push(\"Layout tokens must be an object\");\n  }\n\n  if (userTokens.components && typeof userTokens.components !== \"object\") {\n    errors.push(\"Component tokens must be an object\");\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n}\n\n/**\n * Initializes the design system with custom tokens\n * @param {Partial<ClientDesignTokens>} [userTokens={}] - User-provided design tokens (no defaults merged)\n * @param {InitOptions} [options={}] - Initialization options\n * @returns {InitResult} Initialization result\n */\nexport function init(userTokens = {}, options = {}) {\n  const opts = {\n    injectCSS: true,\n    validate: false,\n    console: false,\n    ...options,\n  };\n\n  try {\n    // Handle invalid userTokens - return empty structure\n    if (\n      !userTokens ||\n      typeof userTokens !== \"object\" ||\n      Array.isArray(userTokens)\n    ) {\n      userTokens = {};\n    }\n\n    // Filter out invalid properties (null, undefined, non-objects for nested structures)\n    const filteredTokens = {};\n    for (const [key, value] of Object.entries(userTokens)) {\n      if (value === null || value === undefined) {\n        continue; // Skip null/undefined values\n      }\n\n      // For nested objects, ensure they are objects\n      if (\n        [\"color\", \"spacing\", \"typography\", \"layout\", \"components\"].includes(key)\n      ) {\n        if (typeof value === \"object\" && !Array.isArray(value)) {\n          filteredTokens[key] = value;\n        }\n        // Skip invalid nested structures\n      } else {\n        // For other properties, include them as-is\n        filteredTokens[key] = value;\n      }\n    }\n\n    // If validation is requested, validate filtered tokens\n    if (opts.validate) {\n      const validation = validateTokens(filteredTokens);\n      if (!validation.isValid) {\n        if (opts.console && typeof window !== \"undefined\" && window.console) {\n          console.error(\n            \"❌ Design system token validation failed:\",\n            validation.errors\n          );\n        }\n        return { success: false, errors: validation.errors };\n      }\n    }\n\n    // Use only client-provided tokens (no merging with defaults)\n    const tokens = filteredTokens;\n\n    // Convert tokens to CSS\n    const css = tokensToCSS(tokens);\n\n    // Inject CSS if requested and in browser environment\n    if (opts.injectCSS && typeof document !== \"undefined\") {\n      injectCSS(css);\n    }\n\n    // Log success if requested\n    if (opts.console) {\n      console.log(\"🎨 Design system initialized successfully\");\n      console.log(\"📦 Tokens applied:\", tokens);\n    }\n\n    return {\n      success: true,\n      errors: [],\n      tokens: tokens,\n      css,\n    };\n  } catch (error) {\n    const errorMessage = `Design system initialization failed: ${error.message}`;\n    if (opts.console) {\n      console.error(errorMessage);\n    }\n    return {\n      success: false,\n      errors: [errorMessage],\n      tokens: null,\n      css: \"\",\n    };\n  }\n}\n\n/**\n * Updates design tokens after initialization\n * @param {Partial<ClientDesignTokens>} newTokens - New design tokens (replaces current tokens)\n * @param {UpdateOptions} [options={}] - Update options\n * @returns {UpdateResult} Update result\n */\nexport function updateTokens(newTokens, options = {}) {\n  const { injectCSS: shouldInjectCSS = true } = options;\n\n  try {\n    // Use only the new tokens (no merging with current tokens)\n    const tokens = newTokens || {};\n\n    // Convert to CSS and inject\n    const css = tokensToCSS(tokens);\n    if (shouldInjectCSS && typeof document !== \"undefined\") {\n      injectCSS(css);\n    }\n\n    console.log(\"🎨 Design tokens updated successfully\");\n\n    return {\n      success: true,\n      tokens,\n      css,\n    };\n  } catch (error) {\n    console.error(`Failed to update design tokens: ${error.message}`);\n    return {\n      success: false,\n      error: error.message,\n    };\n  }\n}\n\n/**\n * Gets current design tokens from CSS custom properties\n * @returns {Partial<ClientDesignTokens>} Current design tokens (empty if none set)\n */\nexport function getCurrentTokens() {\n  if (typeof document === \"undefined\") {\n    return {};\n  }\n\n  const style = getComputedStyle(document.documentElement);\n  const tokens = {};\n\n  // Extract colors\n  const colorKeys = [\n    \"primary\",\n    \"secondary\",\n    \"tertiary\",\n    \"text\",\n    \"background\",\n    \"success\",\n    \"error\",\n    \"warning\",\n    \"info\",\n  ];\n  const colors = {};\n  let hasColors = false;\n  for (const key of colorKeys) {\n    const value = style.getPropertyValue(`--ds-color-${key}`).trim();\n    if (value) {\n      colors[key] = value;\n      hasColors = true;\n    }\n  }\n  if (hasColors) {\n    tokens.color = colors;\n  }\n\n  // Extract spacing\n  const spacingKeys = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"pagePadding\"];\n  const spacing = {};\n  let hasSpacing = false;\n  for (const key of spacingKeys) {\n    const value = style.getPropertyValue(`--ds-spacing-${key}`).trim();\n    if (value) {\n      spacing[key] = value;\n      hasSpacing = true;\n    }\n  }\n  if (hasSpacing) {\n    tokens.spacing = spacing;\n  }\n\n  // Extract typography\n  const typographyKeys = [\"fontFamily\", \"fontSize\", \"lineHeight\"];\n  const typography = {};\n  let hasTypography = false;\n  for (const key of typographyKeys) {\n    const value = style.getPropertyValue(`--ds-typography-${key}`).trim();\n    if (value) {\n      typography[key] = value;\n      hasTypography = true;\n    }\n  }\n  if (hasTypography) {\n    tokens.typography = typography;\n  }\n\n  // Extract layout\n  const layoutKeys = [\"pageMaxWidth\", \"containerPadding\"];\n  const layout = {};\n  let hasLayout = false;\n  for (const key of layoutKeys) {\n    const value = style.getPropertyValue(`--ds-layout-${key}`).trim();\n    if (value) {\n      layout[key] = value;\n      hasLayout = true;\n    }\n  }\n  if (hasLayout) {\n    tokens.layout = layout;\n  }\n\n  // Extract components (simplified - just get what's actually set)\n  const components = {};\n  const componentNames = [\n    \"button\",\n    \"input\",\n    \"card\",\n    \"select\",\n    \"textarea\",\n    \"checkbox\",\n    \"radio\",\n    \"fieldset\",\n    \"label\",\n    \"legend\",\n    \"option\",\n    \"page\",\n    \"heading\",\n    \"col\",\n    \"row\",\n    \"form\",\n  ];\n\n  for (const componentName of componentNames) {\n    const componentTokens = {};\n    let hasComponentTokens = false;\n\n    // Get base properties\n    const baseKeys = [\n      \"backgroundColor\",\n      \"borderColor\",\n      \"textColor\",\n      \"borderRadius\",\n      \"padding\",\n      \"fontSize\",\n      \"fontWeight\",\n      \"borderWidth\",\n      \"borderStyle\",\n      \"boxShadow\",\n      \"transition\",\n      \"margin\",\n      \"width\",\n      \"height\",\n      \"minWidth\",\n      \"maxWidth\",\n      \"minHeight\",\n      \"opacity\",\n      \"transform\",\n      \"zIndex\",\n      \"display\",\n      \"flexWrap\",\n      \"flex\",\n      \"lineHeight\",\n      \"errorColor\",\n      \"errorBackground\",\n      \"errorBorder\",\n      \"successColor\",\n      \"successBackground\",\n      \"successBorder\",\n      \"infoColor\",\n      \"infoBackground\",\n      \"infoBorder\",\n      \"shadow\",\n    ];\n\n    for (const key of baseKeys) {\n      const value = style\n        .getPropertyValue(`--ds-${componentName}-${key}`)\n        .trim();\n      if (value) {\n        componentTokens[key] = value;\n        hasComponentTokens = true;\n      }\n    }\n\n    if (hasComponentTokens) {\n      components[componentName] = componentTokens;\n    }\n  }\n\n  if (Object.keys(components).length > 0) {\n    tokens.components = components;\n  }\n\n  return tokens;\n}\n\n/**\n * Resets design tokens to empty state\n * @returns {InitResult} Reset result\n */\nexport function resetTokens() {\n  return init({}, { validate: false, console: false });\n}\n\n// Export default tokens and utility functions for reference\nexport { DEFAULT_TOKENS, flattenCSSProperties };\n\n// Export DesignTokens as a runtime reference for JavaScript users\n// This provides the structure that JavaScript users can reference\n// Clients can use this as a starting point: init(DEFAULT_TOKENS)\n/** @type {SystemDesignTokens} */\nexport const DesignTokens = DEFAULT_TOKENS;\n\n// Export DesignTokens type for TypeScript users\n// The type is generated from this file's JSDoc declarations\n", "/**\n * @file smart-test-ids.js\n * @summary Ultra-lightweight test ID generation\n * @description Adds only 1-2KB to main bundle\n */\n\n/**\n * Minimal test ID mixin - adds only essential functionality\n */\nexport const SmartTestIdsMixin = (superClass) => class extends superClass {\n  constructor() {\n    super();\n    this._ensureTestId();\n  }\n\n  /**\n   * Ensure component has a smart test ID\n   */\n  _ensureTestId() {\n    if (!this.hasAttribute('data-testid')) {\n      this.setAttribute('data-testid', this._generateSmartTestId());\n    }\n  }\n\n  /**\n   * Generate minimal but descriptive test ID\n   */\n  _generateSmartTestId() {\n    const baseId = this.tagName.toLowerCase().replace('ds-', '');\n    const variant = this.getAttribute('variant') || 'default';\n    const state = this.disabled ? 'disabled' : 'enabled';\n    \n    return `ds-${baseId}-${variant}-${state}`;\n  }\n\n  /**\n   * Update test ID when relevant attributes change\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback?.(name, oldValue, newValue);\n    \n    // Only update for relevant attributes\n    if (['variant', 'disabled', 'type'].includes(name)) {\n      this.setAttribute('data-testid', this._generateSmartTestId());\n    }\n  }\n};\n", "/**\n * @file environment-detector.js\n * @summary Minimal environment detection\n * @description Adds only 0.5KB to main bundle\n */\n\n/**\n * Ultra-lightweight environment detection\n */\nexport const EnvironmentDetector = {\n  /**\n   * Check if we're in a test environment\n   */\n  isTestEnvironment() {\n    return (\n      typeof window === 'undefined' ||\n      window.navigator?.userAgent?.includes('jsdom') ||\n      process.env.NODE_ENV === 'test'\n    );\n  },\n\n  /**\n   * Get current environment\n   */\n  getEnvironment() {\n    if (this.isTestEnvironment()) return 'test';\n    if (process.env.NODE_ENV === 'development') return 'development';\n    if (process.env.NODE_ENV === 'production') return 'production';\n    return 'unknown';\n  }\n};\n", "/**\n * @file storybook-integration.js\n * @summary Storybook testing integration (CI/CD version only)\n * @description Provides basic integration for CI/CD performance testing only\n * @note Real-time monitoring removed - only CI/CD performance checking remains\n */\n\n/**\n * Storybook Testing Integration System (CI/CD Only)\n */\nexport const storybookIntegration = {\n  /**\n   * Initialize Storybook testing integration\n   */\n  init() {\n    if (typeof window === 'undefined') return;\n    \n    // Only initialize in Storybook environment\n    if (this._isStorybookEnvironment()) {\n      console.log('🎭 Storybook Testing Integration initialized (CI/CD mode)');\n      console.log('📊 Performance monitoring: CI/CD only - no real-time tracking');\n      console.log('🚫 No visual panels, popups, or real-time monitoring');\n    }\n  },\n\n  /**\n   * Check if the current environment is Storybook\n   */\n  _isStorybookEnvironment() {\n    return typeof window !== 'undefined' && window.location.href.includes('storybook');\n  },\n\n  /**\n   * CI/CD Performance Check (for automated testing)\n   * This method is called during CI/CD runs to validate component performance\n   */\n  async runCIPerformanceCheck(componentName, ComponentClass) {\n    if (typeof window === 'undefined') {\n      throw new Error('CI performance check must run in browser environment');\n    }\n\n    try {\n      console.log(`🚀 Running CI performance check for: ${componentName}`);\n      \n      // Basic performance validation for CI/CD\n      const result = await this._validateComponentPerformance(componentName, ComponentClass);\n      \n      console.log(`✅ CI performance check completed for ${componentName}:`, result);\n      return result;\n      \n    } catch (error) {\n      console.error(`❌ CI performance check failed for ${componentName}:`, error);\n      throw error;\n    }\n  },\n\n  /**\n   * Validate component performance for CI/CD\n   */\n  async _validateComponentPerformance(componentName, ComponentClass) {\n    const startTime = performance.now();\n    const startMemory = this._getMemoryUsage();\n    \n    try {\n      // Create and render component\n      const component = new ComponentClass();\n      document.body.appendChild(component);\n      \n      // Wait for render\n      await this._waitForNextFrame();\n      \n      // Measure basic metrics\n      const renderTime = performance.now() - startTime;\n      const endMemory = this._getMemoryUsage();\n      const memoryDelta = endMemory - startMemory;\n      \n      // Cleanup\n      document.body.removeChild(component);\n      \n      // Return CI/CD validation result\n      return {\n        componentName,\n        timestamp: Date.now(),\n        metrics: {\n          renderTime: renderTime.toFixed(2),\n          memoryDelta: (memoryDelta / 1024 / 1024).toFixed(2), // MB\n          passed: renderTime < 100 && memoryDelta < 50 * 1024 * 1024 // 100ms, 50MB thresholds\n        },\n        thresholds: {\n          renderTime: '100ms',\n          memoryDelta: '50MB'\n        }\n      };\n      \n    } catch (error) {\n      // Cleanup on error\n      if (component && component.parentNode) {\n        component.parentNode.removeChild(component);\n      }\n      throw error;\n    }\n  },\n\n  /**\n   * Wait for next frame for render completion\n   */\n  _waitForNextFrame() {\n    return new Promise(resolve => requestAnimationFrame(resolve));\n  },\n\n  /**\n   * Get memory usage (if available)\n   */\n  _getMemoryUsage() {\n    if (performance.memory) {\n      return performance.memory.usedJSHeapSize;\n    }\n    return 0;\n  }\n};\n\n// Auto-initialize when loaded (CI/CD mode only)\nif (typeof window !== 'undefined') {\n  // Wait for Storybook to be ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      setTimeout(() => storybookIntegration.init(), 1000);\n    });\n  } else {\n    setTimeout(() => storybookIntegration.init(), 1000);\n  }\n}\n", "/**\n * @file auto-mocks.js\n * @summary Simple JSDOM component enhancement for tests\n * @description Enhances standards-ui components to work perfectly in Jest/JSDOM tests\n */\n\nimport { EnvironmentDetector } from './environment-detector.js';\n\n/**\n * Simple component enhancement system that actually works\n */\nexport const autoMocks = {\n  _isInitialized: false,\n  _observer: null,\n  _enhancedComponents: new Set(),\n\n  /**\n   * Initialize the enhancement system\n   */\n  init() {\n    if (this._isInitialized) return;\n    \n    // Only activate in test environments\n    if (!EnvironmentDetector.isTestEnvironment()) {\n      console.log('🔍 Component enhancement: Not in test environment, skipping');\n      return;\n    }\n\n    console.log('🔧 Component enhancement: Initializing for test environment');\n    \n    // Setup DOM watcher for new components\n    this._setupDOMWatcher();\n    this._isInitialized = true;\n  },\n\n  /**\n   * Setup comprehensive test environment\n   */\n  setupTestEnvironment(options = {}) {\n    const config = {\n      enableLogging: true,\n      enhanceExisting: true,\n      watchForNew: true,\n      ...options\n    };\n\n    if (config.enableLogging) {\n      console.log('🧪 Setting up comprehensive test environment...');\n    }\n\n    // Initialize the enhancement system\n    this.init();\n\n    // Enhance existing components in the DOM\n    if (config.enhanceExisting) {\n      this._enhanceExistingComponents();\n    }\n\n    if (config.enableLogging) {\n      console.log('✅ Test environment setup complete!');\n    }\n\n    return {\n      status: 'ready',\n      componentsEnhanced: this._enhancedComponents.size,\n      watchingForNew: this._observer !== null\n    };\n  },\n\n  /**\n   * Enhance existing components in the DOM\n   */\n  _enhanceExistingComponents() {\n    // Find all test elements and ds-* elements currently in the DOM\n    const components = document.querySelectorAll('[data-test-type], [class*=\"ds-\"], ds-button, ds-text-input, ds-textarea, ds-select, ds-option, ds-checkbox, ds-radio, ds-form, ds-fieldset, ds-legend, ds-label, ds-card, ds-page, ds-row, ds-col');\n    \n    console.log(`🔧 Enhancing ${components.length} existing components...`);\n    \n    components.forEach(component => {\n      this._enhanceComponent(component);\n    });\n  },\n\n  /**\n   * Setup DOM watcher for new components\n   */\n  _setupDOMWatcher() {\n    if (!window.MutationObserver) {\n      console.warn('⚠️ MutationObserver not available, cannot watch for new components');\n      return;\n    }\n\n    this._observer = new MutationObserver((mutations) => {\n      mutations.forEach(mutation => {\n        mutation.addedNodes.forEach(node => {\n          if (node.nodeType === Node.ELEMENT_NODE && this._isStandardsUIComponent(node)) {\n            this._enhanceComponent(node);\n          }\n        });\n      });\n    });\n\n    this._observer.observe(document.body || document.documentElement, {\n      childList: true,\n      subtree: true\n    });\n\n    console.log('👀 DOM watcher active for new components');\n  },\n\n  /**\n   * Check if element is a standards-ui component\n   */\n  _isStandardsUIComponent(element) {\n    const tagName = element.tagName?.toLowerCase();\n    const testType = element.getAttribute('data-test-type');\n    \n    return testType?.startsWith('ds-') ||\n           tagName?.startsWith('ds-') || \n           element.classList?.toString().includes('ds-') ||\n           ['ds-button', 'ds-text-input', 'ds-textarea', 'ds-select', 'ds-option', \n            'ds-checkbox', 'ds-radio', 'ds-form', 'ds-fieldset', 'ds-legend', \n            'ds-label', 'ds-card', 'ds-page', 'ds-row', 'ds-col'].includes(tagName);\n  },\n\n  /**\n   * Enhance a component for testing\n   */\n  _enhanceComponent(element) {\n    // Skip if already enhanced\n    if (this._enhancedComponents.has(element)) return;\n    \n    const tagName = element.tagName?.toLowerCase() || 'ds-component';\n    const testType = element.getAttribute('data-test-type');\n    \n    // Add test ID\n    if (!element.hasAttribute('data-testid')) {\n      element.setAttribute('data-testid', testType || tagName);\n    }\n\n    // Add form properties if needed\n    this._addFormProperties(element);\n\n    // Add test helper methods\n    this._addTestHelpers(element);\n\n    // Mock browser APIs that don't exist in JSDOM\n    this._mockBrowserAPIs(element);\n\n    // Setup accessibility\n    this._setupAccessibility(element);\n\n    // Mark as enhanced\n    this._enhancedComponents.add(element);\n    element.classList.add('test-enhanced');\n\n    console.log(`✨ Enhanced component: ${tagName}`);\n  },\n\n  /**\n   * Add form properties for form components\n   */\n  _addFormProperties(element) {\n    const tagName = element.tagName?.toLowerCase();\n    const testType = element.getAttribute('data-test-type');\n    \n    // Add value property for input-like components\n    if (testType?.includes('input') || testType?.includes('textarea') || testType?.includes('select') || \n        tagName?.includes('input') || tagName?.includes('textarea')) {\n      if (!element.hasOwnProperty('value')) {\n        Object.defineProperty(element, 'value', {\n          get() { \n            return this.getAttribute('value') || ''; \n          },\n          set(val) { \n            this.setAttribute('value', val);\n            this.dispatchEvent(new Event('input', { bubbles: true }));\n            this.dispatchEvent(new Event('change', { bubbles: true }));\n          },\n          configurable: true\n        });\n      }\n    }\n\n    // Add checked property for checkbox/radio components\n    if (testType?.includes('checkbox') || testType?.includes('radio') || \n        tagName?.includes('checkbox') || tagName?.includes('radio')) {\n      if (!element.hasOwnProperty('checked')) {\n        Object.defineProperty(element, 'checked', {\n          get() { \n            return this.hasAttribute('checked'); \n          },\n          set(val) { \n            if (val) {\n              this.setAttribute('checked', '');\n            } else {\n              this.removeAttribute('checked');\n            }\n            this.dispatchEvent(new Event('change', { bubbles: true }));\n          },\n          configurable: true\n        });\n      }\n    }\n\n    // Add disabled property\n    if (!element.hasOwnProperty('disabled')) {\n      Object.defineProperty(element, 'disabled', {\n        get() { \n          return this.hasAttribute('disabled'); \n        },\n        set(val) { \n          if (val) {\n            this.setAttribute('disabled', '');\n          } else {\n            this.removeAttribute('disabled');\n          }\n        },\n        configurable: true\n      });\n    }\n  },\n\n  /**\n   * Add test helper methods\n   */\n  _addTestHelpers(element) {\n    // Test helper: get test info\n    element.getTestInfo = () => ({\n      tagName: element.tagName?.toLowerCase(),\n      testId: element.getAttribute('data-testid'),\n      role: element.getAttribute('role'),\n      disabled: element.disabled,\n      value: element.value,\n      checked: element.checked,\n      classes: Array.from(element.classList || []),\n      attributes: Array.from(element.attributes || []).reduce((acc, attr) => {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {})\n    });\n\n    // Test helper: simulate user interaction\n    element.simulateUserInteraction = (action, options = {}) => {\n      switch (action) {\n        case 'click':\n          element.click();\n          break;\n        case 'focus':\n          element.focus();\n          break;\n        case 'blur':\n          element.blur();\n          break;\n        case 'type':\n          if (options.text && element.value !== undefined) {\n            element.value = options.text;\n          }\n          break;\n        case 'check':\n          if (element.checked !== undefined) {\n            element.checked = true;\n          }\n          break;\n        case 'uncheck':\n          if (element.checked !== undefined) {\n            element.checked = false;\n          }\n          break;\n        case 'select':\n          if (options.value && element.value !== undefined) {\n            element.value = options.value;\n          }\n          break;\n      }\n    };\n\n    // Test helper: trigger events\n    element.triggerEvent = (eventType, options = {}) => {\n      const event = new Event(eventType, { bubbles: true, ...options });\n      element.dispatchEvent(event);\n      return event;\n    };\n  },\n\n  /**\n   * Mock browser APIs that don't exist in JSDOM\n   */\n  _mockBrowserAPIs(element) {\n    // Mock focus/blur if not available\n    if (!element.focus) {\n      element.focus = () => {\n        element.dispatchEvent(new FocusEvent('focus', { bubbles: true }));\n      };\n    }\n\n    if (!element.blur) {\n      element.blur = () => {\n        element.dispatchEvent(new FocusEvent('blur', { bubbles: true }));\n      };\n    }\n\n    // Mock click if not available\n    if (!element.click) {\n      element.click = () => {\n        const event = new MouseEvent('click', { bubbles: true, cancelable: true });\n        element.dispatchEvent(event);\n      };\n    }\n\n    // Mock scrollIntoView\n    if (!element.scrollIntoView) {\n      element.scrollIntoView = () => {\n        // No-op in tests\n      };\n    }\n\n    // Mock getBoundingClientRect\n    if (!element.getBoundingClientRect) {\n      element.getBoundingClientRect = () => ({\n        top: 0, left: 0, right: 100, bottom: 20, width: 100, height: 20\n      });\n    }\n  },\n\n  /**\n   * Setup accessibility attributes\n   */\n  _setupAccessibility(element) {\n    const tagName = element.tagName?.toLowerCase();\n    const testType = element.getAttribute('data-test-type');\n\n    // Add role if not present\n    if (!element.hasAttribute('role')) {\n      if (testType?.includes('button') || tagName?.includes('button')) {\n        element.setAttribute('role', 'button');\n      } else if (testType?.includes('input') || tagName?.includes('input')) {\n        element.setAttribute('role', 'textbox');\n      } else if (testType?.includes('textarea') || tagName?.includes('textarea')) {\n        element.setAttribute('role', 'textbox');\n      } else if (testType?.includes('checkbox') || tagName?.includes('checkbox')) {\n        element.setAttribute('role', 'checkbox');\n      } else if (testType?.includes('radio') || tagName?.includes('radio')) {\n        element.setAttribute('role', 'radio');\n      } else if (testType?.includes('select') || tagName?.includes('select')) {\n        element.setAttribute('role', 'listbox');\n      } else if (testType?.includes('form') || tagName?.includes('form')) {\n        element.setAttribute('role', 'form');\n      } else if (testType?.includes('fieldset') || tagName?.includes('fieldset')) {\n        element.setAttribute('role', 'group');\n      } else if (testType?.includes('legend') || tagName?.includes('legend')) {\n        element.setAttribute('role', 'heading');\n      } else if (testType?.includes('label') || tagName?.includes('label')) {\n        element.setAttribute('role', 'label');\n      } else if (testType?.includes('card') || tagName?.includes('card')) {\n        element.setAttribute('role', 'article');\n      } else if (testType?.includes('page') || tagName?.includes('page')) {\n        element.setAttribute('role', 'main');\n      } else if (testType?.includes('row') || tagName?.includes('row')) {\n        element.setAttribute('role', 'row');\n      } else if (testType?.includes('col') || tagName?.includes('col')) {\n        element.setAttribute('role', 'cell');\n      } else if (testType?.includes('option') || tagName?.includes('option')) {\n        element.setAttribute('role', 'option');\n      }\n    }\n\n    // Add tabindex for keyboard navigation\n    if (!element.hasAttribute('tabindex') && this._isInteractive(element)) {\n      element.setAttribute('tabindex', '0');\n    }\n  },\n\n  /**\n   * Check if component is interactive\n   */\n  _isInteractive(element) {\n    const tagName = element.tagName?.toLowerCase();\n    const testType = element.getAttribute('data-test-type');\n    \n    return testType?.includes('button') || testType?.includes('input') || testType?.includes('checkbox') || \n           testType?.includes('radio') || testType?.includes('select') || testType?.includes('textarea') ||\n           tagName?.includes('button') || tagName?.includes('input') || tagName?.includes('checkbox') || \n           tagName?.includes('radio') || tagName?.includes('select');\n  },\n\n  /**\n   * Create individual test mock\n   */\n  createTestMock(tagName) {\n    console.log(`🔧 Creating individual test mock for ${tagName}`);\n    \n    // Create a simple mock element\n    const element = document.createElement('div');\n    element.setAttribute('data-mock-type', tagName);\n    element.setAttribute('data-testid', tagName);\n    \n    // Enhance it\n    this._enhanceComponent(element);\n    \n    return element;\n  },\n\n  /**\n   * Create mocks for all known components\n   */\n  createAllMocks(options = {}) {\n    const components = [\n      'ds-button', 'ds-text-input', 'ds-textarea', 'ds-select', 'ds-option',\n      'ds-checkbox', 'ds-radio', 'ds-form', 'ds-fieldset', 'ds-legend',\n      'ds-label', 'ds-card', 'ds-page', 'ds-row', 'ds-col'\n    ];\n\n    const mocks = {};\n    \n    components.forEach(tagName => {\n      mocks[tagName] = this.createTestMock(tagName, options);\n    });\n\n    console.log(`✅ Created mocks for ${components.length} components`);\n    return mocks;\n  },\n\n  /**\n   * Reset the enhancement system\n   */\n  reset() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._observer = null;\n    }\n    \n    // Remove enhancements from components\n    this._enhancedComponents.forEach(element => {\n      element.classList.remove('test-enhanced');\n      // Note: We can't easily remove added properties without breaking things\n    });\n    \n    this._enhancedComponents.clear();\n    this._isInitialized = false;\n    \n    console.log('🧹 Component enhancement system reset');\n  }\n};\n\n// Auto-initialize in test environments\nif (typeof window !== 'undefined' && EnvironmentDetector.isTestEnvironment()) {\n  // Initialize when DOM is ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => autoMocks.init());\n  } else {\n    autoMocks.init();\n  }\n}", "/**\n * @file index.js\n * @summary Client-facing testing utilities export\n * @description Tree-shakable exports for client Jest/unit testing - minimal bundle impact\n */\n\n// Core utilities for client testing (minimal size impact)\nexport { SmartTestIdsMixin } from \"./smart-test-ids.js\";\nexport { EnvironmentDetector } from \"./environment-detector.js\";\n\n// Test Mode Manager for centralized test mode control\nexport {\n  TestModeManager,\n  enableTestMode,\n  disableTestMode,\n  isTestModeEnabled,\n} from \"./test-mode-manager.js\";\n\n// Client Testing Features - Jest/Unit Test Support\nexport { storybookIntegration } from \"./storybook-integration.js\";\nexport { autoMocks } from \"./auto-mocks.js\";\n\n// Clients get the testing utilities they need for Jest/unit testing.\n//\n// IMPORTANT: All error reporting and performance monitoring is console-only\n// for client use - no popups, panels, or visual interfaces are shown.\n// Performance metrics are only available during CI/CD for regression testing.\n//\n// Storybook integration is now CI/CD only - no real-time monitoring or story tracking.\n// Smart errors is now error-focused only - no performance monitoring, just helpful error guidance.\n\n// Enhanced convenience functions for client testing\nexport const setupTesting = async (options = {}) => {\n  const { debug = false, validate = true } = options;\n\n  try {\n    console.log(\"🚀 Setting up Standards UI testing environment...\");\n\n    // Validate environment\n    if (typeof window === \"undefined\") {\n      throw new Error(\n        '❌ Setup failed: Not in browser environment. Make sure you have testEnvironment: \"jsdom\" in your Jest config.'\n      );\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\n        \"❌ Setup failed: Document object not available. Check your Jest configuration.\"\n      );\n    }\n\n    // Auto-initialize comprehensive test environment\n    const { autoMocks } = await import(\"./auto-mocks.js\");\n\n    if (debug) {\n      console.log(\"🔍 Debug mode: Setting up auto-mocks...\");\n    }\n\n    const setupResult = autoMocks.setupTestEnvironment();\n\n    if (debug) {\n      console.log(\"🔍 Debug mode: Auto-mocks setup result:\", setupResult);\n    }\n\n    // Validate that components are actually registered\n    if (validate) {\n      const validationResult = await validateSetup();\n      if (!validationResult.success) {\n        throw new Error(\n          `❌ Setup validation failed: ${validationResult.error}`\n        );\n      }\n\n      if (debug) {\n        console.log(\"✅ Setup validation passed:\", validationResult);\n      }\n    }\n\n    console.log(\"✅ Standards UI testing environment ready!\");\n    console.log(\"📊 Performance monitoring: Console-only (no visual panels)\");\n    console.log(\"🧠 Error reporting: Console-only (no popups)\");\n\n    return {\n      status: \"ready\",\n      success: true,\n      features: [\n        \"SmartTestIds\",\n        \"EnvironmentDetection\",\n        \"AutoMocks\",\n        \"TestMocks\",\n        \"JSDOMCompatibility\",\n        \"StorybookIntegration\",\n      ],\n      validation: validate ? \"passed\" : \"skipped\",\n      timestamp: new Date().toISOString(),\n    };\n  } catch (error) {\n    const errorMessage = `❌ Setup failed: ${error.message}`;\n    console.error(errorMessage);\n\n    // Provide helpful debugging information\n    console.error(\"💡 Troubleshooting tips:\");\n    console.error('   1. Check Jest config: testEnvironment: \"jsdom\"');\n    console.error(\n      \"   2. Ensure jsdom is installed: npm install --save-dev jsdom\"\n    );\n    console.error(\n      '   3. Check import path: import { setupTesting } from \"standards-ui/testing\"'\n    );\n    console.error(\"   4. Enable debug mode: setupTesting({ debug: true })\");\n\n    // Re-throw with enhanced error message\n    throw new Error(errorMessage);\n  }\n};\n\n// Validation function to ensure setup actually worked\nconst validateSetup = async () => {\n  try {\n    // Test if we can create a basic component\n    const testButton = document.createElement(\"div\");\n    testButton.setAttribute(\"data-test-type\", \"ds-button\");\n    document.body.appendChild(testButton);\n\n    // Give the enhancement system a moment to work\n    await new Promise((resolve) => setTimeout(resolve, 10));\n\n    // Import autoMocks to manually enhance for validation\n    const { autoMocks } = await import(\"./auto-mocks.js\");\n    autoMocks._enhanceComponent(testButton);\n\n    // Check if component has expected properties\n    if (!testButton || typeof testButton.getAttribute !== \"function\") {\n      return {\n        success: false,\n        error: \"Component creation failed - basic DOM methods not available\",\n      };\n    }\n\n    // Test if enhancement worked\n    const testId = testButton.getAttribute(\"data-testid\");\n    if (!testId) {\n      return {\n        success: false,\n        error: \"Component enhancement not working - test IDs not generated\",\n      };\n    }\n\n    // Test if helper methods were added\n    if (typeof testButton.getTestInfo !== \"function\") {\n      return {\n        success: false,\n        error: \"Test helper methods not added\",\n      };\n    }\n\n    // Test if form properties work (for form components)\n    const testInput = document.createElement(\"div\");\n    testInput.setAttribute(\"data-test-type\", \"ds-text-input\");\n    document.body.appendChild(testInput);\n    autoMocks._enhanceComponent(testInput);\n\n    if (testInput && typeof testInput.value !== \"undefined\") {\n      testInput.value = \"test\";\n      if (testInput.value !== \"test\") {\n        return {\n          success: false,\n          error: \"Form properties not working - value property not functional\",\n        };\n      }\n    }\n\n    // Clean up test elements\n    document.body.removeChild(testButton);\n    document.body.removeChild(testInput);\n\n    return {\n      success: true,\n      componentsEnhanced: true,\n      testIdsGenerated: true,\n      helperMethodsAdded: true,\n      formPropertiesWorking: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: `Validation error: ${error.message}`,\n    };\n  }\n};\n\n// New: Create individual test mock\nexport const createTestMock = async (tagName, options = {}) => {\n  try {\n    if (typeof window === \"undefined\") {\n      throw new Error(\n        'createTestMock: Not in browser environment. Ensure testEnvironment: \"jsdom\" in Jest config.'\n      );\n    }\n\n    if (!tagName || typeof tagName !== \"string\") {\n      throw new Error(\n        'createTestMock: Invalid tagName. Must be a string like \"ds-button\".'\n      );\n    }\n\n    const { autoMocks } = await import(\"./auto-mocks.js\");\n    const result = autoMocks.createTestMock(tagName, options);\n\n    if (!result) {\n      throw new Error(\n        `createTestMock: Failed to create mock for \"${tagName}\". Check if component exists.`\n      );\n    }\n\n    return result;\n  } catch (error) {\n    console.error(\n      `❌ createTestMock failed for \"${tagName}\": ${error.message}`\n    );\n    throw error;\n  }\n};\n\n// New: Setup comprehensive test environment\n// Internal function - not exported to users (used by setupTesting)\nconst setupTestEnvironment = async (options = {}) => {\n  try {\n    if (typeof window === \"undefined\") {\n      throw new Error(\n        'setupTestEnvironment: Not in browser environment. Ensure testEnvironment: \"jsdom\" in Jest config.'\n      );\n    }\n\n    const { autoMocks } = await import(\"./auto-mocks.js\");\n    const result = autoMocks.setupTestEnvironment(options);\n\n    if (options.debug) {\n      console.log(\"🔍 setupTestEnvironment result:\", result);\n    }\n\n    return result;\n  } catch (error) {\n    console.error(`❌ setupTestEnvironment failed: ${error.message}`);\n    throw error;\n  }\n};\n\n// New: Create all component mocks\nexport const createAllMocks = async (options = {}) => {\n  try {\n    if (typeof window === \"undefined\") {\n      throw new Error(\n        'createAllMocks: Not in browser environment. Ensure testEnvironment: \"jsdom\" in Jest config.'\n      );\n    }\n\n    const { autoMocks } = await import(\"./auto-mocks.js\");\n    const result = autoMocks.createAllMocks(options);\n\n    if (options.debug) {\n      console.log(\"🔍 createAllMocks result:\", result);\n    }\n\n    if (!result || Object.keys(result).length === 0) {\n      console.warn(\n        \"⚠️ createAllMocks: No mocks created. Check if components are available.\"\n      );\n    }\n\n    return result;\n  } catch (error) {\n    console.error(`❌ createAllMocks failed: ${error.message}`);\n    throw error;\n  }\n};\n\n// benchmarkComponent removed - available internally for repo maintenance\n\n// Import for default export (client testing utilities only)\nimport { SmartTestIdsMixin } from \"./smart-test-ids.js\";\nimport { EnvironmentDetector } from \"./environment-detector.js\";\nimport { storybookIntegration } from \"./storybook-integration.js\";\nimport { autoMocks } from \"./auto-mocks.js\";\n\n// Default export for client convenience (Jest/unit testing utilities only)\nexport default {\n  SmartTestIdsMixin,\n  EnvironmentDetector,\n  storybookIntegration,\n  autoMocks,\n  setupTesting,\n  createTestMock,\n  createAllMocks,\n};\n", "/**\n * @file index.js\n * @summary Main entry point for the standards-ui design system\n * @description Exports all web components and provides a convenient way to import the entire design system\n */\n\n/**\n * @typedef {import('./init.js').SystemDesignTokens} SystemDesignTokens\n * @typedef {import('./init.js').ClientDesignTokens} ClientDesignTokens\n * @typedef {import('./init.js').InitOptions} InitOptions\n * @typedef {import('./init.js').UpdateOptions} UpdateOptions\n * @typedef {import('./init.js').InitResult} InitResult\n * @typedef {import('./init.js').UpdateResult} UpdateResult\n */\n\n// Import global CSS\nimport \"./styles/global.css\";\n\n// Import all components\nimport \"./components/ds-page.js\";\nimport \"./components/ds-row.js\";\nimport \"./components/ds-col.js\";\nimport \"./components/ds-text-input.js\";\nimport \"./components/ds-button.js\";\nimport \"./components/ds-radio.js\";\nimport \"./components/ds-checkbox.js\";\nimport \"./components/ds-textarea.js\";\nimport \"./components/ds-select.js\";\nimport \"./components/ds-option.js\";\nimport \"./components/ds-label.js\";\nimport \"./components/ds-fieldset.js\";\nimport \"./components/ds-legend.js\";\nimport \"./components/ds-form.js\";\nimport \"./components/ds-card.js\";\nimport \"./components/ds-heading.js\";\n\n// JSX types are now defined directly in types/index.d.ts\n\n// Export component classes for advanced usage\nexport { default as DsPage } from \"./components/ds-page.js\";\nexport { default as DsRow } from \"./components/ds-row.js\";\nexport { default as DsCol } from \"./components/ds-col.js\";\nexport { default as DsTextInput } from \"./components/ds-text-input.js\";\nexport { default as DsButton } from \"./components/ds-button.js\";\nexport { default as DsRadio } from \"./components/ds-radio.js\";\nexport { default as DsCheckbox } from \"./components/ds-checkbox.js\";\nexport { default as DsTextarea } from \"./components/ds-textarea.js\";\nexport { default as DsSelect } from \"./components/ds-select.js\";\nexport { default as DsOption } from \"./components/ds-option.js\";\nexport { default as DsLabel } from \"./components/ds-label.js\";\nexport { default as DsFieldset } from \"./components/ds-fieldset.js\";\nexport { default as DsLegend } from \"./components/ds-legend.js\";\nexport { default as DsForm } from \"./components/ds-form.js\";\nexport { default as DsCard } from \"./components/ds-card.js\";\nexport { default as DsHeading } from \"./components/ds-heading.js\";\n\n// Export the base component for custom component development\nexport { default as BaseComponent } from \"./components/base-component.js\";\n\n// Export initialization functions\nexport {\n  init,\n  updateTokens,\n  getCurrentTokens,\n  resetTokens,\n  DEFAULT_TOKENS,\n  DesignTokens,\n} from \"./init.js\";\n\n// Note: DEFAULT_TOKENS and DesignTokens are available for both JavaScript and TypeScript users\n// JavaScript: import { DEFAULT_TOKENS, DesignTokens } from 'standards-ui'\n// TypeScript: import type { DesignTokens } from 'standards-ui'\n//\n// Usage examples:\n// - Use defaults: init(DEFAULT_TOKENS)\n// - Extend defaults: init({...DEFAULT_TOKENS, ...customTokens})\n// - Custom tokens: init({color: {primary: '#ff0000'}})\n\n// Export client testing utilities (minimal size impact - only 2-3KB)\nexport {\n  SmartTestIdsMixin,\n  EnvironmentDetector,\n  setupTesting,\n  createTestMock,\n  createAllMocks,\n  autoMocks,\n  storybookIntegration,\n} from \"./testing/index.js\";\n\n// Version info\nexport const VERSION = \"1.33.0\";\n"],
  "mappings": "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",
  "names": ["handler", "num", "component", "separator", "autoMocks"]
}
