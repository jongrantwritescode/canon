version: "3.8"

services:
  neo4j:
    image: neo4j:5.15-community
    container_name: canon-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/canon123
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./neo4j-seed.cypher:/var/lib/neo4j/import/seed.cypher
    networks:
      - canon-network

  redis:
    image: redis:7-alpine
    container_name: canon-redis
    ports:
      - "6379:6379"
    networks:
      - canon-network

  bff:
    build:
      context: ./apps/bff
      dockerfile: Dockerfile
    container_name: canon-bff
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=canon123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LANGFLOW_API_KEY=${LANGFLOW_API_KEY}
      - LANGFLOW_BASE_URL=${LANGFLOW_BASE_URL:-http://localhost:7860}
      - LANGFLOW_FLOW_ID=${LANGFLOW_FLOW_ID:-4051bf48-02a2-46a6-8fd7-83ee074125d9}
    depends_on:
      - neo4j
      - redis
    networks:
      - canon-network

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: canon-web
    ports:
      - "8080:80"
    environment:
      - BFF_URL=http://bff:3000
    volumes:
      - ./apps/web/public:/usr/share/nginx/html:ro
    depends_on:
      - bff
    networks:
      - canon-network

volumes:
  neo4j_data:
  neo4j_logs:

networks:
  canon-network:
    driver: bridge
